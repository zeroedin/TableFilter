{"version":3,"sources":["webpack:///./node_modules/format-number/index.js","webpack:///./libs/sortabletable.js","webpack:///./node_modules/script-loader/addScript.js","webpack:///./libs/sortabletable.js?8203","webpack:///./src sync ^\\.\\/.*$","webpack:///./src/extensions/advancedGrid/adapterEzEditTable.js","webpack:///./src/extensions/advancedGrid/advancedGrid.js","webpack:///./src/extensions/colOps/colOps.js","webpack:///./src/extensions/colsVisibility/colsVisibility.js","webpack:///./src/extensions/filtersVisibility/filtersVisibility.js","webpack:///./src/extensions/sort/adapterSortabletable.js","webpack:///./src/extensions/sort/sort.js"],"names":["INSTANTIATION_ERROR","AdapterEzEditTable","tf","cfg","desc","defaultsStr","description","filename","vendorPath","vendor_path","loadStylesheet","Boolean","load_stylesheet","stylesheet","stylesheetName","stylesheet_name","scroll_into_view","gridLayout","_ezEditTable","enable","initialized","root","EditTable","_setAdvancedGrid","path","isImported","emitter","on","_toggleForInputFilter","startRow","thead","tag","dom","length","undefined","refRow","base_path","basePath","editable","selectable","selection","default_selection","active_cell_css","_lastValidRowIndex","_lastRowIndex","onAfterSelection","et","selectedElm","e","slc","Selection","doSelect","nextRowIndex","defaultSelection","SelectRowByIndex","ClearSelections","cellIndex","row","rows","SelectCell","cells","validRowsIndex","getRowsNb","r","scrollIntoView","cell","getCellsNb","tblCont","scrollLeft","validIndexes","validIdxLen","parentNode","nodeName","keyCode","Event","GetKey","isRowValid","indexOf","rowIndex","paging","feature","d","pageLength","nbRowsPerPage","calcRowIndex","v","onBeforeSelection","nbPages","pagingEndRow","parseInt","startPagingRow","currentPageNb","setPage","onAfterChangePage","advGrid","extension","GetActiveRow","GetActiveCell","fnB","on_before_selected_row","args","arguments","call","fnA","on_after_selected_row","fnD","on_before_selected_cell","fnC","on_after_selected_cell","fnE","on_added_dom_row","nbFilterableRows","emit","destroy","reset","alternateRows","init","actions","fnF","on_after_submit","id","Init","Error","ezEditTable","Set","Editable","Remove","getActiveFilterId","colIndex","getColumnIndexFromFilterId","filterType","getFilterType","INPUT","toggle","off","Feature","meta","altName","EVENTS","SUM","MEAN","MIN","MAX","MEDIAN","Q1","Q3","ColOps","opts","onBeforeOperation","defaultsFn","on_before_operation","EMPTY_FN","onAfterOperation","on_after_operation","labelIds","defaultsArr","colIndexes","col","operations","operation","outputTypes","write_method","formatResults","format_result","totRowIndexes","tot_row_index","excludeRows","exclude_row","decimalPrecisions","decimal_precision","bound","calcAll","isInitialized","colOperations","uIndexes","forEach","val","push","nbCols","colValues","u","getVisibleColumnData","curValues","result","precisions","labels","writeType","formatResult","idx","k","toLowerCase","isArray","configureFormat","i","Number","calc","writeResult","totRow","style","display","precision","sortColumnValues","numSortAsc","calcMean","calcSum","calcMin","calcMax","calcMedian","calcQ1","calcQ3","isEmpty","toFixed","values","reduce","x","y","Math","max","apply","min","nbValues","aux","floor","posa","posb","sorter","sort","label","format","labelElm","elm","isNaN","isFinite","formatNumber","innerHTML","value","oldNode","firstChild","txtNode","createText","replaceChild","hasType","FORMATTED_NUMBER","colType","colTypes","decimal","thousands","integerSeparator","ColsVisibility","f","config","name","spanEl","btnEl","contEl","tickToHide","defaultsBool","tick_to_hide","manager","headersTbl","headers_table","headersIndex","defaultsNb","headers_index","contElTgtId","container_target_id","headersText","headers_text","btnTgtId","btn_target_id","btnText","btn_text","btnHtml","btn_html","btnCssClass","btn_css_class","btnCloseText","btn_close_text","btnCloseHtml","btn_close_html","btnCloseCssClass","btn_close_css_class","spanCssClass","span_css_class","contCssClass","cont_css_class","listCssClass","list_css_class","listItemCssClass","checklist_item_css_class","listSlcItemCssClass","checklist_selected_item_css_class","text","atStart","at_start","enableHover","enable_hover","enableTickAll","enable_tick_all","tickAllText","tick_all_text","toolbarPosition","toolbar_position","RIGHT","hiddenCols","boundMouseup","onLoaded","on_loaded","onBeforeOpen","on_before_open","onAfterOpen","on_after_open","onBeforeClose","on_before_close","onAfterClose","on_after_close","onBeforeColHidden","on_before_col_hidden","onAfterColHidden","on_after_col_hidden","onBeforeColDisplayed","on_before_col_displayed","onAfterColDisplayed","on_after_col_displayed","headTbl","getStylePath","evt","targetElm","targetEvt","removeEvt","contDisplay","NONE","addEvt","lbl","li","isChecked","checked","getAttribute","split","addClass","removeClass","hide","setHidden","isNull","hideCol","buildBtn","buildManager","onMouseup","bind","_hideAtStart","span","createElm","className","targetEl","container","insertBefore","appendChild","btn","title","colVisEl","extNameLabel","ul","tbl","headerIndex","getHeadersRowIndex","headerRow","createCheckItem","check","h","itm","click","cellText","_getHeaderText","liElm","checkItem","p","_hideElements","itemIndex","splice","isUndef","isColHidden","showCol","removeElm","hasChildNodes","childNodes","n","nodeType","nodeValue","getText","colIdx","_hideCells","_hideCol","colElms","FiltersVisibility","icnExpand","expand_icon_name","icnCollapse","collapse_icon_name","icnExpandHtml","themesPath","icnCollapseHtml","defaultText","targetId","target_id","enableIcon","enable_icon","collapseBtnHtml","expandBtnHtml","filtersRowIndex","filters_row_index","getFiltersRowIndex","visibleAtStart","visible_at_start","onBeforeShow","on_before_show","onAfterShow","on_after_show","onBeforeHide","on_before_hide","onAfterHide","on_after_hide","buildUI","visible","show","fltRow","isDisplayed","AdapterSortableTable","sorted","sortTypes","types","sortColAtStart","sort_col_at_start","asyncSort","async_sort","triggerIds","trigger_ids","imgPath","images_path","imgBlank","image_blank","imgClassName","image_class_name","imgAscClassName","image_asc_class_name","imgDescClassName","image_desc_class_name","customKey","custom_key","onSortLoaded","on_sort_loaded","onBeforeSort","on_before_sort","onAfterSort","on_after_sort","stt","adpt","SortableTable","overrideSortableTable","setSortTypes","onbeforesort","sortColumn","disable","onsort","paginator","getValidRows","getPage","descending","sortByColumnIndexHandler","sortByColumnIndex","prototype","headerOnclick","el","target","srcElement","tagName","CELL_TAG","HEADER_TAG","msie","getCellIndex","oTd","l","initHeader","oSortTypes","tHead","headersRow","img","c","cursor","setAttribute","_headerOnclick","_sortType","updateHeaderArrows","triggers","j","cellAttr","lastChild","getRowValue","oRow","sType","nColumn","sortTypeInfo","_sortTypeInfo","s","getInnerText","getValueFromString","getCellValue","caster","addSortType","_sortTypes","eachCol","isObj","type","DATE","_addDateType","decimalSeparator","_addNumberType","NUMBER","STRING","toUpperCase","IP_ADDRESS","ipAddress","sortIP","trigger","dateType","locale","getOptions","parsedDate","parse","Date","parseNb","ids","getFiltersId","header","getHeaderElement","removeChild","vals","join","a","b","aa","bb","require"],"mappings":";;;;;;;;;;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B;AAC3B,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD,4BAA4B,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/PA,i9BAAi9B,g3EAAg3E,wCAAwC,6BAA6B,2BAA2B,uBAAuB,wCAAwC,6BAA6B,MAAM,mBAAmB,8BAA8B,8DAA8D,KAAK,UAAU,+BAA+B,KAAK,mGAAmG,kCAAkC,sBAAsB,MAAM,yDAAyD,oDAAoD,KAAK,GAAG,yDAAyD,yDAAyD,sJAAsJ,oDAAoD,qHAAqH,yJAAyJ,0DAA0D,+CAA+C,0BAA0B,kCAAkC,uCAAuC,IAAI,0DAA0D,sEAAsE,wBAAwB,sCAAsC,IAAI,0DAA0D,wBAAwB,IAAI,oEAAoE,+CAA+C,sCAAsC,6DAA6D,IAAI,+MAA+M,4BAA4B,yCAAyC,8DAA8D,sCAAsC,yBAAyB,eAAe,mBAAmB,OAAO,OAAO,mBAAmB,uEAAuE,yCAAyC,uCAAuC,2BAA2B,gFAAgF,2HAA2H,iHAAiH,sDAAsD,OAAO,iBAAiB,uDAAuD,+BAA+B,OAAO,KAAK,8BAA8B,IAAI,qFAAqF,4BAA4B,yCAAyC,yBAAyB,UAAU,mBAAmB,OAAO,OAAO,mBAAmB,2DAA2D,mCAAmC,iIAAiI,iHAAiH,2BAA2B,2CAA2C,OAAO,KAAK,IAAI,8DAA8D,4BAA4B,yCAAyC,yBAAyB,YAAY,mBAAmB,OAAO,OAAO,yEAAyE,iCAAiC,gIAAgI,qDAAqD,OAAO,KAAK,IAAI,0DAA0D,4DAA4D,yDAAyD,oFAAoF,IAAI,wGAAwG,kEAAkE,UAAU,eAAe,0BAA0B,YAAY,aAAa,IAAI,8DAA8D,iDAAiD,IAAI,8PAA8P,4BAA4B,sEAAsE,gEAAgE,gCAAgC,sFAAsF,qDAAqD,KAAK,4CAA4C,gCAAgC,6EAA6E,uDAAuD,8CAA8C,2BAA2B,gBAAgB,4CAA4C,2CAA2C,kEAAkE,+BAA+B,2BAA2B,KAAK,qDAAqD,mBAAmB,OAAO,2CAA2C,2CAA2C,iEAAiE,KAAK,gCAAgC,2BAA2B,iEAAiE,IAAI,oFAAoF,qBAAqB,mCAAmC,kDAAkD,MAAM,0CAA0C,IAAI,kEAAkE,+BAA+B,+BAA+B,wBAAwB,yBAAyB,UAAU,mBAAmB,OAAO,OAAO,kBAAkB,cAAc,iFAAiF,MAAM,aAAa,IAAI,8DAA8D,0BAA0B,mBAAmB,OAAO,OAAO,6BAA6B,+BAA+B,uBAAuB,KAAK,IAAI,2EAA2E,oMAAoM,YAAY,gCAAgC,kEAAkE,gDAAgD,6CAA6C,IAAI,mDAAmD,iBAAiB,8BAA8B,sBAAsB,mBAAmB,OAAO,OAAO,+BAA+B,+EAA+E,gBAAgB,2DAA2D,gBAAgB,OAAO,KAAK,aAAa,IAAI,0EAA0E,qGAAqG,iBAAiB,0BAA0B,mDAAmD,wEAAwE,2DAA2D,4BAA4B,gCAAgC,4BAA4B,iCAAiC,2BAA2B,KAAK,iBAAiB,YAAY,yEAAyE,iFAAiF,sCAAsC,IAAI,mDAAmD,wBAAwB,yCAAyC,yDAAyD,2EAA2E,KAAK,0BAA0B,wBAAwB,sBAAsB,sBAAsB,yBAAyB,+BAA+B,0BAA0B,2BAA2B,uBAAuB,IAAI,w5BAAw5B,iCAAiC,+MAA+M,IAAI,kIAAkI,qCAAqC,IAAI,2DAA2D,4CAA4C,2CAA2C,aAAa,IAAI,6CAA6C,aAAa,IAAI,8CAA8C,2BAA2B,IAAI,yCAAyC,+BAA+B,wBAAwB,4BAA4B,wBAAwB,6BAA6B,uBAAuB,IAAI,iFAAiF,4FAA4F,sEAAsE,kDAAkD,8B;;;;;;;;;;;ACAr+c;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;AC1BA,mBAAO,CAAC,6FAAoF,EAAE,mBAAO,CAAC,sHAA4I,uH;;;;;;;;;;;ACAlsD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AAEA,IAAMA,mBAAmB,yFAAzB;AAGA;;;;;;IAKqBC,kB;;;;;AAEjB;;;;;;AAMA,8BAAYC,EAAZ,EAAgBC,GAAhB,EAAqB;AAAA;;AAAA;;AACjB,4FAAMD,EAAN,EAAUD,kBAAV;AAEA;;;;;AAIA,UAAKG,IAAL,GAAYC,6DAAW,CAACF,GAAG,CAACG,WAAL,EAAkB,qBAAlB,CAAvB;AAEA;;;;;AAIA,UAAKC,QAAL,GAAgBF,6DAAW,CAACF,GAAG,CAACI,QAAL,EAAe,gBAAf,CAA3B;AAEA;;;;;AAIA,UAAKC,UAAL,GAAkBL,GAAG,CAACM,WAAtB;AAEA;;;;;AAIA,UAAKC,cAAL,GAAsBC,OAAO,CAACR,GAAG,CAACS,eAAL,CAA7B;AAEA;;;;;AAIA,UAAKC,UAAL,GAAkBR,6DAAW,CAACF,GAAG,CAACU,UAAL,EACzB,MAAKL,UAAL,GAAkB,iBADO,CAA7B;AAGA;;;;;AAIA,UAAKM,cAAL,GAAsBT,6DAAW,CAACF,GAAG,CAACY,eAAL,EAC7B,gBAD6B,CAAjC,CAtCiB,CAyCjB;;AACAZ,OAAG,CAACa,gBAAJ,GAAuBb,GAAG,CAACa,gBAAJ,KAAyB,KAAzB,GACnB,KADmB,GACXd,EAAE,CAACe,UADf;AAGA;;;;;;AAKA,UAAKC,YAAL,GAAoB,IAApB;AAEA;;;;;AAIA,UAAKf,GAAL,GAAWA,GAAX;;AAEA,UAAKgB,MAAL;;AA1DiB;AA2DpB;AAED;;;;;;;2BAGO;AAAA;;AACH,UAAI,KAAKC,WAAT,EAAsB;AAClB;AACH;;AACD,UAAIlB,EAAE,GAAG,KAAKA,EAAd;;AACA,UAAImB,0CAAI,CAACC,SAAT,EAAoB;AAChB,aAAKC,gBAAL;AACH,OAFD,MAEO;AACH,YAAIC,IAAI,GAAG,KAAKhB,UAAL,GAAkB,KAAKD,QAAlC;AACAL,UAAE,UAAF,CAAU,KAAKK,QAAf,EAAyBiB,IAAzB,EAA+B;AAAA,iBAAM,MAAI,CAACD,gBAAL,EAAN;AAAA,SAA/B;AACH;;AACD,UAAI,KAAKb,cAAL,IAAuB,CAACR,EAAE,CAACuB,UAAH,CAAc,KAAKZ,UAAnB,EAA+B,MAA/B,CAA5B,EAAoE;AAChEX,UAAE,UAAF,CAAU,KAAKY,cAAf,EAA+B,KAAKD,UAApC,EAAgD,IAAhD,EAAsD,MAAtD;AACH,OAbE,CAeH;AACA;;;AACA,WAAKa,OAAL,CAAaC,EAAb,CAAgB,CAAC,cAAD,EAAiB,aAAjB,CAAhB,EACI;AAAA,eAAM,MAAI,CAACC,qBAAL,EAAN;AAAA,OADJ;AAGA;;;;AAGA,WAAKR,WAAL,GAAmB,IAAnB;AACH;AAED;;;;;;;uCAImB;AACf,UAAIlB,EAAE,GAAG,KAAKA,EAAd,CADe,CAGf;;AACA,UAAI2B,QAAJ;AAAA,UACI1B,GAAG,GAAG,KAAKA,GADf;AAAA,UAEI2B,KAAK,GAAGC,gDAAG,CAAC7B,EAAE,CAAC8B,GAAH,EAAD,EAAW,OAAX,CAFf,CAJe,CAQf;AACA;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAf,IAAoB,CAAC9B,GAAG,CAAC0B,QAA7B,EAAuC;AACnCA,gBAAQ,GAAGK,SAAX;AACH,OAFD,CAGA;AAHA,WAIK;AACDL,kBAAQ,GAAG1B,GAAG,CAAC0B,QAAJ,IAAgB3B,EAAE,CAACiC,MAA9B;AACH;;AAEDhC,SAAG,CAACiC,SAAJ,GAAgBjC,GAAG,CAACiC,SAAJ,IAAiBlC,EAAE,CAACmC,QAAH,GAAc,cAA/C;AACA,UAAIC,QAAQ,GAAGnC,GAAG,CAACmC,QAAnB;AACA,UAAIC,UAAU,GAAGpC,GAAG,CAACqC,SAArB;;AAEA,UAAID,UAAJ,EAAgB;AACZpC,WAAG,CAACsC,iBAAJ,GAAwBtC,GAAG,CAACsC,iBAAJ,IAAyB,KAAjD;AACH,OAxBc,CAyBf;;;AACAtC,SAAG,CAACuC,eAAJ,GAAsBvC,GAAG,CAACuC,eAAJ,IAAuB,kBAA7C;AAEA,UAAIC,kBAAkB,GAAG,CAAzB;AACA,UAAIC,aAAa,GAAG,CAApB;;AAEA,UAAIL,UAAJ,EAAgB;AACZ;AACA;AACA,YAAIM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,EAAV,EAAcC,WAAd,EAA2BC,CAA3B,EAA8B;AACjD,cAAIC,GAAG,GAAGH,EAAE,CAACI,SAAb,CADiD,CAEjD;;AACA,cAAIC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,YAAV,EAAwB;AACnC,gBAAIN,EAAE,CAACO,gBAAH,KAAwB,KAA5B,EAAmC;AAC/B;AACAJ,iBAAG,CAACK,gBAAJ,CAAqBF,YAArB;AACA;AACH,aAJD,MAIO;AACH;AACAN,gBAAE,CAACS,eAAH;AACA;;AACA,kBAAIC,SAAS,GAAGT,WAAW,CAACS,SAA5B;AAAA,kBACIC,IAAG,GAAGvD,EAAE,CAAC8B,GAAH,GAAS0B,IAAT,CAAcN,YAAd,CADV;;AAEA,kBAAIN,EAAE,CAACO,gBAAH,KAAwB,MAA5B,EAAoC;AAChC;AACAJ,mBAAG,CAACK,gBAAJ,CAAqBF,YAArB;AACA;AACH;;AACD,kBAAIK,IAAJ,EAAS;AACL;AACAR,mBAAG,CAACU,UAAJ,CAAeF,IAAG,CAACG,KAAJ,CAAUJ,SAAV,CAAf;AACA;AACH;AACJ,aArBkC,CAsBnC;;;AACA,gBAAItD,EAAE,CAAC2D,cAAH,CAAkB5B,MAAlB,KAA6B/B,EAAE,CAAC4D,SAAH,EAAjC,EAAiD;AAC7C,kBAAIC,CAAC,GAAG7D,EAAE,CAAC8B,GAAH,GAAS0B,IAAT,CAAcN,YAAd,CAAR;;AACA,kBAAIW,CAAJ,EAAO;AACHA,iBAAC,CAACC,cAAF,CAAiB,KAAjB;AACH;;AACD,kBAAIC,IAAJ,EAAU;AACN,oBAAIA,IAAI,CAACT,SAAL,KAAoBtD,EAAE,CAACgE,UAAH,KAAkB,CAAtC,IACAhE,EAAE,CAACe,UADP,EACmB;AACff,oBAAE,CAACiE,OAAH,CAAWC,UAAX,GAAwB,SAAxB;AACH,iBAHD,MAIK,IAAIH,IAAI,CAACT,SAAL,KAAmB,CAAnB,IAAwBtD,EAAE,CAACe,UAA/B,EAA2C;AAC5Cf,oBAAE,CAACiE,OAAH,CAAWC,UAAX,GAAwB,CAAxB;AACH,iBAFI,MAEE;AACHH,sBAAI,CAACD,cAAL,CAAoB,KAApB;AACH;AACJ;AACJ;AACJ,WAxCD,CAHiD,CA6CjD;;;AACA,cAAI,CAAC9D,EAAE,CAAC2D,cAAR,EAAwB;AACpB;AACH;;AACD,cAAIQ,YAAY,GAAGnE,EAAE,CAAC2D,cAAtB;AAAA,cACIS,WAAW,GAAGD,YAAY,CAACpC,MAD/B;AAAA,cAEIwB,GAAG,GAAGX,EAAE,CAACO,gBAAH,KAAwB,KAAxB,GACFN,WAAW,CAACwB,UADV,GACuBxB,WAHjC;AAAA,cAII;AACAkB,cAAI,GAAGlB,WAAW,CAACyB,QAAZ,KAAyB,IAAzB,GAAgCzB,WAAhC,GAA8C,IALzD;;AAMI;AACA0B,iBAAO,GAAGzB,CAAC,KAAKd,SAAN,GAAkBY,EAAE,CAAC4B,KAAH,CAASC,MAAT,CAAgB3B,CAAhB,CAAlB,GAAuC,CAPrD;;AAQI;AACA4B,oBAAU,GAAGP,YAAY,CAACQ,OAAb,CAAqBpB,GAAG,CAACqB,QAAzB,MAAuC,CAAC,CATzD;AAAA,cAUI1B,YAVJ;AAAA,cAWI2B,MAAM,GAAG7E,EAAE,CAAC8E,OAAH,CAAW,QAAX,CAXb;AAAA,cAYI;AACAC,WAAC,GAAGR,OAAO,KAAK,EAAZ,IAAkBA,OAAO,KAAK,EAA9B,GACCM,MAAM,IAAIA,MAAM,CAACG,UAAjB,IAA+BpC,EAAE,CAACqC,aADnC,GAEA,CAfR,CAjDiD,CAkEjD;AACA;;AACA,cAAI,CAACP,UAAL,EAAiB;AACb;AACA,gBAAInB,GAAG,CAACqB,QAAJ,GAAelC,aAAnB,EAAkC;AAC9B;AACA,kBAAIa,GAAG,CAACqB,QAAJ,IAAgBT,YAAY,CAACC,WAAW,GAAG,CAAf,CAAhC,EAAmD;AAC/ClB,4BAAY,GAAGiB,YAAY,CAACC,WAAW,GAAG,CAAf,CAA3B;AACH,eAFD,MAEO;AACH,oBAAIc,YAAY,GAAIzC,kBAAkB,GAAGsC,CAAzC;;AACA,oBAAIG,YAAY,GAAId,WAAW,GAAG,CAAlC,EAAsC;AAClClB,8BAAY,GAAGiB,YAAY,CAACC,WAAW,GAAG,CAAf,CAA3B;AACH,iBAFD,MAEO;AACHlB,8BAAY,GAAGiB,YAAY,CAACe,YAAD,CAA3B;AACH;AACJ;AACJ,aAZD,MAYO;AACH;AACA,kBAAI3B,GAAG,CAACqB,QAAJ,IAAgBT,YAAY,CAAC,CAAD,CAAhC,EAAqC;AACjCjB,4BAAY,GAAGiB,YAAY,CAAC,CAAD,CAA3B;AACH,eAFD,MAEO;AACH,oBAAIgB,CAAC,GAAGhB,YAAY,CAAC1B,kBAAkB,GAAGsC,CAAtB,CAApB;AACA7B,4BAAY,GAAGiC,CAAC,GAAGA,CAAH,GAAOhB,YAAY,CAAC,CAAD,CAAnC;AACH;AACJ;;AACDzB,yBAAa,GAAGa,GAAG,CAACqB,QAApB;AACA3B,oBAAQ,CAACC,YAAD,CAAR;AACH,WAzBD,MAyBO;AACH;AACA;AACA,gBAAIqB,OAAO,KAAK,EAAZ,IAAkBA,OAAO,KAAK,EAAlC,EAAsC;AAClC9B,gCAAkB,GAAG0B,YAAY,CAACQ,OAAb,CAAqBpB,GAAG,CAACqB,QAAzB,CAArB;AACAlC,2BAAa,GAAGa,GAAG,CAACqB,QAApB;AACH,aAHD,MAGO;AACH,kBAAIL,OAAO,KAAK,EAAhB,EAAoB;AAAE;AAClB;AACA,oBAAK9B,kBAAkB,GAAGsC,CAAtB,IAA6BX,WAAW,GAAG,CAA/C,EAAmD;AAC/ClB,8BAAY,GAAGiB,YAAY,CACvB1B,kBAAkB,GAAGsC,CADE,CAA3B;AAEH,iBAHD,MAGO;AACH7B,8BAAY,GAAG,CAACkB,WAAW,GAAG,CAAf,CAAf;AACH;AACJ,eARD,MAQO;AAAE;AACL;AACA,oBAAK3B,kBAAkB,GAAGsC,CAAtB,IAA4BZ,YAAY,CAAC,CAAD,CAA5C,EAAiD;AAC7CjB,8BAAY,GAAGiB,YAAY,CAAC,CAAD,CAA3B;AACH,iBAFD,MAEO;AACHjB,8BAAY,GAAGiB,YAAY,CACvB1B,kBAAkB,GAAGsC,CADE,CAA3B;AAEH;AACJ;;AACDrC,2BAAa,GAAGQ,YAAhB;AACAT,gCAAkB,GAAG0B,YAAY,CAACQ,OAAb,CAAqBzB,YAArB,CAArB;AACAD,sBAAQ,CAACC,YAAD,CAAR;AACH;AACJ;AACJ,SA1HD,CAHY,CA+HZ;AACA;;;AACA,YAAIkC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUxC,EAAV,EAAcC,WAAd,EAA2B;AAC/C,cAAIU,GAAG,GAAGX,EAAE,CAACO,gBAAH,KAAwB,KAAxB,GACNN,WAAW,CAACwB,UADN,GACmBxB,WAD7B;;AAEA,cAAI7C,EAAE,CAAC6E,MAAP,EAAe;AACX,gBAAI7E,EAAE,CAAC8E,OAAH,CAAW,QAAX,EAAqBO,OAArB,GAA+B,CAAnC,EAAsC;AAClC,kBAAIR,MAAM,GAAG7E,EAAE,CAAC8E,OAAH,CAAW,QAAX,CAAb,CADkC,CAElC;;AACAlC,gBAAE,CAACqC,aAAH,GAAmBJ,MAAM,CAACG,UAA1B;AACA,kBAAIb,YAAY,GAAGnE,EAAE,CAAC2D,cAAtB;AAAA,kBACIS,WAAW,GAAGD,YAAY,CAACpC,MAD/B;AAAA,kBAEIuD,YAAY,GAAGC,QAAQ,CAACV,MAAM,CAACW,cAAR,EAAwB,EAAxB,CAAR,GACXD,QAAQ,CAACV,MAAM,CAACG,UAAR,EAAoB,EAApB,CAHhB;AAIA,kBAAIJ,QAAQ,GAAGrB,GAAG,CAACqB,QAAnB;;AAEA,kBAAKA,QAAQ,KAAKT,YAAY,CAACC,WAAW,GAAG,CAAf,CAA1B,IACAS,MAAM,CAACY,aAAP,KAAyBZ,MAAM,CAACQ,OADpC,EAC6C;AACzCR,sBAAM,CAACa,OAAP,CAAe,MAAf;AACH,eAHD,MAIK,IAAKd,QAAQ,KAAKT,YAAY,CAAC,CAAD,CAA1B,IACLU,MAAM,CAACY,aAAP,KAAyB,CADxB,EAC2B;AAC5BZ,sBAAM,CAACa,OAAP,CAAe,OAAf;AACH,eAHI,MAIA,IAAId,QAAQ,GAAGT,YAAY,CAACmB,YAAY,GAAG,CAAhB,CAAvB,IACLV,QAAQ,GAAGT,YAAY,CAACC,WAAW,GAAG,CAAf,CADtB,EACyC;AAC1CS,sBAAM,CAACa,OAAP,CAAe,MAAf;AACH,eAHI,MAIA,IACDd,QAAQ,GAAGT,YAAY,CAACU,MAAM,CAACW,cAAR,CAAvB,IACAZ,QAAQ,GAAGT,YAAY,CAAC,CAAD,CAFtB,EAE2B;AAC5BU,sBAAM,CAACa,OAAP,CAAe,UAAf;AACH;AACJ;AACJ;AACJ,SAjCD,CAjIY,CAoKZ;;;AACA,YAAI1F,EAAE,CAAC6E,MAAP,EAAe;AACX7E,YAAE,CAAC8E,OAAH,CAAW,QAAX,EAAqBa,iBAArB,GAAyC,UAAUd,MAAV,EAAkB;AACvD,gBAAIe,OAAO,GAAGf,MAAM,CAAC7E,EAAP,CAAU6F,SAAV,CAAoB,cAApB,CAAd;AACA,gBAAIjD,EAAE,GAAGgD,OAAO,CAAC5E,YAAjB;AACA,gBAAI+B,GAAG,GAAGH,EAAE,CAACI,SAAb;AACA;;AACA,gBAAIO,GAAG,GAAGR,GAAG,CAAC+C,YAAJ,EAAV;AACA;;AACA,gBAAIvC,GAAJ,EAAS;AACLA,iBAAG,CAACO,cAAJ,CAAmB,KAAnB;AACH;AACD;;;AACA,gBAAIC,IAAI,GAAGhB,GAAG,CAACgD,aAAJ,EAAX;AACA;;AACA,gBAAIhC,IAAJ,EAAU;AACNA,kBAAI,CAACD,cAAL,CAAoB,KAApB;AACH;AACJ,WAhBD;AAiBH,SAvLW,CAyLZ;AACA;;;AACA,YAAI7D,GAAG,CAACsC,iBAAJ,KAA0B,KAA9B,EAAqC;AACjC,cAAIyD,GAAG,GAAG/F,GAAG,CAACgG,sBAAd;;AACAhG,aAAG,CAACgG,sBAAJ,GAA6B,YAAY;AACrC,gBAAIC,IAAI,GAAGC,SAAX;AACAf,6BAAiB,CAACc,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAjB;;AACA,gBAAIF,GAAJ,EAAS;AACLA,iBAAG,CAACI,IAAJ,CAAS,IAAT,EAAeF,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B,EAAiCA,IAAI,CAAC,CAAD,CAArC;AACH;AACJ,WAND;;AAOA,cAAIG,GAAG,GAAGpG,GAAG,CAACqG,qBAAd;;AACArG,aAAG,CAACqG,qBAAJ,GAA4B,YAAY;AACpC,gBAAIJ,IAAI,GAAGC,SAAX;AACAxD,4BAAgB,CAACuD,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAhB;;AACA,gBAAIG,GAAJ,EAAS;AACLA,iBAAG,CAACD,IAAJ,CAAS,IAAT,EAAeF,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B,EAAiCA,IAAI,CAAC,CAAD,CAArC;AACH;AACJ,WAND;AAOH,SAjBD,MAiBO;AACH,cAAIK,GAAG,GAAGtG,GAAG,CAACuG,uBAAd;;AACAvG,aAAG,CAACuG,uBAAJ,GAA8B,YAAY;AACtC,gBAAIN,IAAI,GAAGC,SAAX;AACAf,6BAAiB,CAACc,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAjB;;AACA,gBAAIK,GAAJ,EAAS;AACLA,iBAAG,CAACH,IAAJ,CAAS,IAAT,EAAeF,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B,EAAiCA,IAAI,CAAC,CAAD,CAArC;AACH;AACJ,WAND;;AAOA,cAAIO,GAAG,GAAGxG,GAAG,CAACyG,sBAAd;;AACAzG,aAAG,CAACyG,sBAAJ,GAA6B,YAAY;AACrC,gBAAIR,IAAI,GAAGC,SAAX;AACAxD,4BAAgB,CAACuD,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBA,IAAI,CAAC,CAAD,CAAvB,CAAhB;;AACA,gBAAIO,GAAJ,EAAS;AACLA,iBAAG,CAACL,IAAJ,CAAS,IAAT,EAAeF,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B,EAAiCA,IAAI,CAAC,CAAD,CAArC;AACH;AACJ,WAND;AAOH;AACJ;;AACD,UAAI9D,QAAJ,EAAc;AACV;AACA,YAAIuE,GAAG,GAAG1G,GAAG,CAAC2G,gBAAd;;AACA3G,WAAG,CAAC2G,gBAAJ,GAAuB,YAAY;AAC/B,cAAIV,IAAI,GAAGC,SAAX;AACAnG,YAAE,CAAC6G,gBAAH;;AACA,cAAI,CAAC7G,EAAE,CAAC6E,MAAR,EAAgB;AACZ7E,cAAE,CAACwB,OAAH,CAAWsF,IAAX,CAAgB,cAAhB,EAAgC9G,EAAhC,EAAoC,IAApC;AACH,WAFD,MAEO;AACHA,cAAE,CAAC6G,gBAAH;AACA7G,cAAE,CAAC6E,MAAH,GAAY,KAAZ;AACA7E,cAAE,CAAC8E,OAAH,CAAW,QAAX,EAAqBiC,OAArB;AACA/G,cAAE,CAAC8E,OAAH,CAAW,QAAX,EAAqBkC,KAArB;AACH;;AACD,cAAIhH,EAAE,CAACiH,aAAP,EAAsB;AAClBjH,cAAE,CAAC8E,OAAH,CAAW,eAAX,EAA4BoC,IAA5B;AACH;;AACD,cAAIP,GAAJ,EAAS;AACLA,eAAG,CAACP,IAAJ,CAAS,IAAT,EAAeF,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B,EAAiCA,IAAI,CAAC,CAAD,CAArC;AACH;AACJ,SAjBD;;AAkBA,YAAIjG,GAAG,CAACkH,OAAJ,IAAelH,GAAG,CAACkH,OAAJ,CAAY,QAAZ,CAAnB,EAA0C;AACtC,cAAIC,GAAG,GAAGnH,GAAG,CAACkH,OAAJ,CAAY,QAAZ,EAAsBE,eAAhC;;AACApH,aAAG,CAACkH,OAAJ,CAAY,QAAZ,EAAsBE,eAAtB,GAAwC,YAAY;AAChD,gBAAInB,IAAI,GAAGC,SAAX;AACAnG,cAAE,CAAC6G,gBAAH;;AACA,gBAAI,CAAC7G,EAAE,CAAC6E,MAAR,EAAgB;AACZ7E,gBAAE,CAACwB,OAAH,CAAWsF,IAAX,CAAgB,cAAhB,EAAgC9G,EAAhC,EAAoC,IAApC;AACH,aAFD,MAEO;AACHA,gBAAE,CAAC6G,gBAAH;AACA7G,gBAAE,CAAC6E,MAAH,GAAY,KAAZ;AACA7E,gBAAE,CAAC8E,OAAH,CAAW,QAAX,EAAqBiC,OAArB;AACA/G,gBAAE,CAAC8E,OAAH,CAAW,QAAX,EAAqBkC,KAArB,CAA2B,KAA3B;AACH;;AACD,gBAAIhH,EAAE,CAACiH,aAAP,EAAsB;AAClBjH,gBAAE,CAAC8E,OAAH,CAAW,eAAX,EAA4BoC,IAA5B;AACH;;AACD,gBAAIE,GAAJ,EAAS;AACLA,iBAAG,CAAChB,IAAJ,CAAS,IAAT,EAAeF,IAAI,CAAC,CAAD,CAAnB,EAAwBA,IAAI,CAAC,CAAD,CAA5B;AACH;AACJ,WAjBD;AAkBH;AACJ;;AAED,UAAI;AACA;AACA,aAAKlF,YAAL,GAAoB,IAAII,SAAJ,CAAcpB,EAAE,CAACsH,EAAjB,EAAqBrH,GAArB,EAA0B0B,QAA1B,CAApB;;AACA,aAAKX,YAAL,CAAkBuG,IAAlB;AACA;;AACH,OALD,CAKE,OAAOzE,CAAP,EAAU;AAAE,cAAM,IAAI0E,KAAJ,CAAU1H,mBAAV,CAAN;AAAuC;;AAErD,WAAKoB,WAAL,GAAmB,IAAnB;AACH;AAED;;;;;;4BAGQ;AACJ,UAAIuG,WAAW,GAAG,KAAKzG,YAAvB;;AACA,UAAIyG,WAAJ,EAAiB;AACb,YAAI,KAAKxH,GAAL,CAASqC,SAAb,EAAwB;AACpB;AACAmF,qBAAW,CAACzE,SAAZ,CAAsB0E,GAAtB;AACA;AACH;;AACD,YAAI,KAAKzH,GAAL,CAASmC,QAAb,EAAuB;AACnB;AACAqF,qBAAW,CAACE,QAAZ,CAAqBD,GAArB;AACA;AACH;AACJ;AACJ;AAED;;;;;;6BAGS;AACL,UAAID,WAAW,GAAG,KAAKzG,YAAvB;;AACA,UAAIyG,WAAW,CAACrF,QAAhB,EAA0B;AACtB;AACAqF,mBAAW,CAACE,QAAZ,CAAqBC,MAArB;AACA;AACH,OAJD,MAIO;AACH;AACAH,mBAAW,CAACE,QAAZ,CAAqBD,GAArB;AACA;AACH;;AACD,UAAID,WAAW,CAACnF,SAAhB,EAA2B;AACvB;AACAmF,mBAAW,CAACzE,SAAZ,CAAsB4E,MAAtB;AACA;AACH,OAJD,MAIO;AACH;AACAH,mBAAW,CAACzE,SAAZ,CAAsB0E,GAAtB;AACA;AACH;AACJ;;;4CAEuB;AACpB,UAAI1H,EAAE,GAAG,KAAKA,EAAd;;AACA,UAAI,CAACA,EAAE,CAAC6H,iBAAH,EAAL,EAA6B;AACzB;AACH;;AACD,UAAIC,QAAQ,GAAG9H,EAAE,CAAC+H,0BAAH,CAA8B/H,EAAE,CAAC6H,iBAAH,EAA9B,CAAf;AACA,UAAIG,UAAU,GAAGhI,EAAE,CAACiI,aAAH,CAAiBH,QAAjB,CAAjB;;AACA,UAAIE,UAAU,KAAKE,4CAAnB,EAA0B;AACtB,aAAKC,MAAL;AACH;AACJ;AAED;;;;;;8BAGU;AAAA;;AACN,UAAI,CAAC,KAAKjH,WAAV,EAAuB;AACnB;AACH;;AACD,UAAIuG,WAAW,GAAG,KAAKzG,YAAvB;;AACA,UAAIyG,WAAJ,EAAiB;AACb,YAAI,KAAKxH,GAAL,CAASqC,SAAb,EAAwB;AACpB;AACAmF,qBAAW,CAACzE,SAAZ,CAAsBK,eAAtB;AACAoE,qBAAW,CAACzE,SAAZ,CAAsB4E,MAAtB;AACA;AACH;;AACD,YAAI,KAAK3H,GAAL,CAASmC,QAAb,EAAuB;AACnB;AACAqF,qBAAW,CAACE,QAAZ,CAAqBC,MAArB;AACA;AACH;AACJ;;AAED,WAAKpG,OAAL,CAAa4G,GAAb,CAAiB,CAAC,cAAD,EAAiB,aAAjB,CAAjB,EACI;AAAA,eAAM,MAAI,CAAC1G,qBAAL,EAAN;AAAA,OADJ;AAEA,WAAKR,WAAL,GAAmB,KAAnB;AACH;;;;EA3e2CmH,gD;;;AA8ehDtI,kBAAkB,CAACuI,IAAnB,GAA0B;AAACC,SAAO,EAAE;AAAV,CAA1B,C;;;;;;;;;;;;AC5fA;AAAA;AAAA;AAEexI,0HAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMyI,MAAM,GAAG,CACX,iBADW,EAEX,mBAFW,EAGX,0BAHW,CAAf;AAMA,IAAMC,GAAG,GAAG,KAAZ;AACA,IAAMC,IAAI,GAAG,MAAb;AACA,IAAMC,GAAG,GAAG,KAAZ;AACA,IAAMC,GAAG,GAAG,KAAZ;AACA,IAAMC,MAAM,GAAG,QAAf;AACA,IAAMC,EAAE,GAAG,IAAX;AACA,IAAMC,EAAE,GAAG,IAAX;AAEA;;;;IAGqBC,M;;;;;AAEjB;;;;;;AAMA,kBAAYhJ,EAAZ,EAAgBiJ,IAAhB,EAAsB;AAAA;;AAAA;;AAClB,gFAAMjJ,EAAN,EAAUgJ,MAAV;AAEA;;;;;AAIA,UAAKE,iBAAL,GAAyBC,4DAAU,CAACF,IAAI,CAACG,mBAAN,EAA2BC,+CAA3B,CAAnC;AAEA;;;;;AAIA,UAAKC,gBAAL,GAAwBH,4DAAU,CAACF,IAAI,CAACM,kBAAN,EAA0BF,+CAA1B,CAAlC;AAEA;;;;;AAIA,UAAKJ,IAAL,GAAYA,IAAZ;AAEA;;;;;AAIA,UAAKO,QAAL,GAAgBC,6DAAW,CAACR,IAAI,CAAC3B,EAAN,EAAU,EAAV,CAA3B;AAEA;;;;;AAIA,UAAKoC,UAAL,GAAkBD,6DAAW,CAACR,IAAI,CAACU,GAAN,EAAW,EAAX,CAA7B;AAEA;;;;;;AAKA,UAAKC,UAAL,GAAkBH,6DAAW,CAACR,IAAI,CAACY,SAAN,EAAiB,EAAjB,CAA7B;AAEA;;;;;;AAKA,UAAKC,WAAL,GAAmBL,6DAAW,CAACR,IAAI,CAACc,YAAN,EAAoB,EAApB,CAA9B;AAEA;;;;;;;AAMA,UAAKC,aAAL,GAAqBP,6DAAW,CAACR,IAAI,CAACgB,aAAN,EAAqB,EAArB,CAAhC;AAEA;;;;;AAIA,UAAKC,aAAL,GAAqBT,6DAAW,CAACR,IAAI,CAACkB,aAAN,EAAqB,EAArB,CAAhC;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmBX,6DAAW,CAACR,IAAI,CAACoB,WAAN,EAAmB,EAAnB,CAA9B;AAEA;;;;;AAIA,UAAKC,iBAAL,GAAyBb,6DAAW,CAACR,IAAI,CAACsB,iBAAN,EAAyB,CAAzB,CAApC;;AAEA,UAAKtJ,MAAL;;AAzEkB;AA0ErB;AAED;;;;;;;2BAGO;AACH,UAAI,KAAKC,WAAT,EAAsB;AAClB;AACH,OAHE,CAIH;;;AACA,WAAKM,OAAL,CAAaC,EAAb,CAAgB+G,MAAhB,EAAwBgC,oDAAK,CAAC,KAAKC,OAAN,EAAe,IAAf,CAA7B;AAEA,WAAKA,OAAL;AAEA;;AACA,WAAKvJ,WAAL,GAAmB,IAAnB;AACH;AAED;;;;;;;;;;;;;;;;;;;8BAgBU;AACN,UAAIlB,EAAE,GAAG,KAAKA,EAAd;;AACA,UAAI,CAACA,EAAE,CAAC0K,aAAH,EAAL,EAAyB;AACrB;AACH;;AAED,WAAKxB,iBAAL,CAAuBlJ,EAAvB,EAA2B,IAA3B;AACA,WAAKwB,OAAL,CAAasF,IAAb,CAAkB,yBAAlB,EAA6C9G,EAA7C,EAAiD,IAAjD;AAPM,UASA0J,UATA,GAWoB,IAXpB,CASAA,UATA;AAAA,UASwBiB,aATxB,GAWoB,IAXpB,CASYf,UATZ;AAAA,UASuCE,WATvC,GAWoB,IAXpB,CASuCA,WATvC;AAAA,UAUFI,aAVE,GAWoB,IAXpB,CAUFA,aAVE;AAAA,UAUaE,WAVb,GAWoB,IAXpB,CAUaA,WAVb;AAAA,UAU0BJ,aAV1B,GAWoB,IAXpB,CAU0BA,aAV1B;AAAA,UAWFM,iBAXE,GAWoB,IAXpB,CAWFA,iBAXE,EAaN;;AACA,UAAIM,QAAQ,GAAG,EAAf;AACAlB,gBAAU,CAACmB,OAAX,CAAmB,UAACC,GAAD,EAAS;AACxB,YAAIF,QAAQ,CAACjG,OAAT,CAAiBmG,GAAjB,MAA0B,CAAC,CAA/B,EAAkC;AAC9BF,kBAAQ,CAACG,IAAT,CAAcD,GAAd;AACH;AACJ,OAJD;AAMA,UAAIE,MAAM,GAAGJ,QAAQ,CAAC7I,MAAtB;AAAA,UACIyB,IAAI,GAAGxD,EAAE,CAAC8B,GAAH,GAAS0B,IADpB;AAAA,UAEIyH,SAAS,GAAG,EAFhB;;AAIA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC7B;AACA;AACA;AACAD,iBAAS,CAACF,IAAV,CACI/K,EAAE,CAACmL,oBAAH,CAAwBP,QAAQ,CAACM,CAAD,CAAhC,EAAqC,KAArC,EAA4Cd,WAA5C,CADJ;AAIA,YAAIgB,SAAS,GAAGH,SAAS,CAACC,CAAD,CAAzB,CAR6B,CAU7B;;AACA,YAAIG,MAAM,GAAG,CAAb;AAAA,YACIzB,UAAU,GAAG,EADjB;AAAA,YAEI0B,UAAU,GAAG,EAFjB;AAAA,YAGIC,MAAM,GAAG,EAHb;AAAA,YAIIC,SAAS,SAJb;AAAA,YAKIC,YAAY,GAAG,EALnB;AAAA,YAMIC,GAAG,GAAG,CANV;;AAQA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,UAAU,CAAC3H,MAA/B,EAAuC4J,CAAC,EAAxC,EAA4C;AACxC,cAAIjC,UAAU,CAACiC,CAAD,CAAV,KAAkBf,QAAQ,CAACM,CAAD,CAA9B,EAAmC;AAC/B;AACH;;AACDtB,oBAAU,CAAC8B,GAAD,CAAV,GAAkB,CAACf,aAAa,CAACgB,CAAD,CAAb,IAAoB,KAArB,EAA4BC,WAA5B,EAAlB;AACAN,oBAAU,CAACI,GAAD,CAAV,GAAkBpB,iBAAiB,CAACqB,CAAD,CAAnC;AACAJ,gBAAM,CAACG,GAAD,CAAN,GAAc,KAAKlC,QAAL,CAAcmC,CAAd,CAAd;AACAH,mBAAS,GAAGK,sDAAO,CAAC/B,WAAD,CAAP,GAAuBA,WAAW,CAAC6B,CAAD,CAAlC,GAAwC,IAApD;AACAF,sBAAY,CAACC,GAAD,CAAZ,GACI,KAAKI,eAAL,CAAqBlB,QAAQ,CAACM,CAAD,CAA7B,EAAkClB,aAAa,CAAC2B,CAAD,CAA/C,CADJ;AAEAD,aAAG;AACN;;AAED,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAApB,EAAyBK,CAAC,EAA1B,EAA8B;AAC1B;AACA,eAAKvK,OAAL,CAAasF,IAAb,CACI,oBADJ,EAEI9G,EAFJ,EAGI,IAHJ,EAII4K,QAAQ,CAACM,CAAD,CAJZ,EAKIE,SALJ,EAMIxB,UAAU,CAACmC,CAAD,CANd,EAOIT,UAAU,CAACS,CAAD,CAPd;AAUAV,gBAAM,GAAGW,MAAM,CAAC,KAAKC,IAAL,CAAUb,SAAV,EAAqBxB,UAAU,CAACmC,CAAD,CAA/B,EAAoC,IAApC,CAAD,CAAf,CAZ0B,CAc1B;;AACA,eAAKvK,OAAL,CAAasF,IAAb,CACI,aADJ,EAEI9G,EAFJ,EAGI,IAHJ,EAII4K,QAAQ,CAACM,CAAD,CAJZ,EAKIG,MALJ,EAMIzB,UAAU,CAACmC,CAAD,CANd,EAOIT,UAAU,CAACS,CAAD,CAPd,EAf0B,CAyB1B;;AACA,eAAKG,WAAL,CACIb,MADJ,EAEIE,MAAM,CAACQ,CAAD,CAFV,EAGIP,SAHJ,EAIIF,UAAU,CAACS,CAAD,CAJd,EAKIN,YAAY,CAACM,CAAD,CALhB;AAQH,SAlE4B,CAkE5B;AAED;;;AACA,YAAII,MAAM,GAAGjC,aAAa,IAAIA,aAAa,CAACgB,CAAD,CAA9B,GACT1H,IAAI,CAAC0G,aAAa,CAACgB,CAAD,CAAd,CADK,GACgB,IAD7B;;AAEA,YAAIiB,MAAJ,EAAY;AACRA,gBAAM,CAACC,KAAP,CAAaC,OAAb,GAAuB,EAAvB;AACH;AACJ,OAnGK,CAmGL;;;AAED,WAAK/C,gBAAL,CAAsBtJ,EAAtB,EAA0B,IAA1B;AACA,WAAKwB,OAAL,CAAasF,IAAb,CAAkB,wBAAlB,EAA4C9G,EAA5C,EAAgD,IAAhD;AACH;AAED;;;;;;;;;;+BAOW8H,Q,EAAsC;AAAA,UAA5B+B,SAA4B,uEAAhBpB,GAAgB;AAAA,UAAX6D,SAAW;AAC7C,UAAIlC,WAAW,GAAG,KAAKA,WAAL,IAAoB,EAAtC;AACA,UAAIa,SAAS,GAAGjL,EAAE,CAACmL,oBAAH,CAAwBrD,QAAxB,EAAkC,KAAlC,EAAyCsC,WAAzC,CAAhB;AAEA,aAAO4B,MAAM,CAAC,KAAKC,IAAL,CAAUhB,SAAV,EAAqBpB,SAArB,EAAgCyC,SAAhC,CAAD,CAAb;AACH;AAED;;;;;;;;;;;yBAQKrB,S,EAAuC;AAAA,UAA5BpB,SAA4B,uEAAhBpB,GAAgB;AAAA,UAAX6D,SAAW;AACxC,UAAIjB,MAAM,GAAG,CAAb;;AAEA,UAAIxB,SAAS,KAAKf,EAAd,IAAoBe,SAAS,KAAKd,EAAlC,IAAwCc,SAAS,KAAKhB,MAA1D,EAAkE;AAC9DoC,iBAAS,GAAG,KAAKsB,gBAAL,CAAsBtB,SAAtB,EAAiCuB,gDAAjC,CAAZ;AACH;;AAED,cAAQ3C,SAAR;AACI,aAAKnB,IAAL;AACI2C,gBAAM,GAAG,KAAKoB,QAAL,CAAcxB,SAAd,CAAT;AACA;;AACJ,aAAKxC,GAAL;AACI4C,gBAAM,GAAG,KAAKqB,OAAL,CAAazB,SAAb,CAAT;AACA;;AACJ,aAAKtC,GAAL;AACI0C,gBAAM,GAAG,KAAKsB,OAAL,CAAa1B,SAAb,CAAT;AACA;;AACJ,aAAKrC,GAAL;AACIyC,gBAAM,GAAG,KAAKuB,OAAL,CAAa3B,SAAb,CAAT;AACA;;AACJ,aAAKpC,MAAL;AACIwC,gBAAM,GAAG,KAAKwB,UAAL,CAAgB5B,SAAhB,CAAT;AACA;;AACJ,aAAKnC,EAAL;AACIuC,gBAAM,GAAG,KAAKyB,MAAL,CAAY7B,SAAZ,CAAT;AACA;;AACJ,aAAKlC,EAAL;AACIsC,gBAAM,GAAG,KAAK0B,MAAL,CAAY9B,SAAZ,CAAT;AACA;AArBR;;AAwBA,aAAO+B,sDAAO,CAACV,SAAD,CAAP,GAAqBjB,MAArB,GAA8BA,MAAM,CAAC4B,OAAP,CAAeX,SAAf,CAArC;AACH;AAED;;;;;;;;8BAKqB;AAAA,UAAbY,MAAa,uEAAJ,EAAI;;AACjB,UAAIF,sDAAO,CAACE,MAAD,CAAX,EAAqB;AACjB,eAAO,CAAP;AACH;;AACD,UAAI7B,MAAM,GAAG6B,MAAM,CAACC,MAAP,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUrB,MAAM,CAACoB,CAAD,CAAN,GAAYpB,MAAM,CAACqB,CAAD,CAA5B;AAAA,OAAd,CAAb;AACA,aAAOhC,MAAP;AACH;AAED;;;;;;;;+BAKsB;AAAA,UAAb6B,MAAa,uEAAJ,EAAI;AAClB,UAAI7B,MAAM,GAAG,KAAKqB,OAAL,CAAaQ,MAAb,IAAuBA,MAAM,CAACnL,MAA3C;AACA,aAAOiK,MAAM,CAACX,MAAD,CAAb;AACH;AAED;;;;;;;;8BAKqB;AAAA,UAAb6B,MAAa,uEAAJ,EAAI;AACjB,aAAOI,IAAI,CAACC,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBN,MAArB,CAAP;AACH;AAED;;;;;;;;8BAKqB;AAAA,UAAbA,MAAa,uEAAJ,EAAI;AACjB,aAAOI,IAAI,CAACG,GAAL,CAASD,KAAT,CAAe,IAAf,EAAqBN,MAArB,CAAP;AACH;AAED;;;;;;;;iCAKwB;AAAA,UAAbA,MAAa,uEAAJ,EAAI;AACpB,UAAIQ,QAAQ,GAAGR,MAAM,CAACnL,MAAtB;AACA,UAAI4L,GAAG,GAAG,CAAV;;AACA,UAAID,QAAQ,GAAG,CAAX,KAAiB,CAArB,EAAwB;AACpBC,WAAG,GAAGL,IAAI,CAACM,KAAL,CAAWF,QAAQ,GAAG,CAAtB,CAAN;AACA,eAAO1B,MAAM,CAACkB,MAAM,CAACS,GAAD,CAAP,CAAb;AACH;;AACD,aAAO,CAAC3B,MAAM,CAACkB,MAAM,CAACQ,QAAQ,GAAG,CAAZ,CAAP,CAAN,GACJ1B,MAAM,CAACkB,MAAM,CAAGQ,QAAQ,GAAG,CAAZ,GAAiB,CAAnB,CAAP,CADH,IACqC,CAD5C;AAEH;AAED;;;;;;;;6BAKoB;AAAA,UAAbR,MAAa,uEAAJ,EAAI;AAChB,UAAIQ,QAAQ,GAAGR,MAAM,CAACnL,MAAtB;AACA,UAAI8L,IAAI,GAAG,GAAX;AACAA,UAAI,GAAGP,IAAI,CAACM,KAAL,CAAWF,QAAQ,GAAG,CAAtB,CAAP;;AACA,UAAI,IAAIG,IAAJ,KAAaH,QAAjB,EAA2B;AACvB,eAAO,CAAC1B,MAAM,CAACkB,MAAM,CAACW,IAAI,GAAG,CAAR,CAAP,CAAN,GACJ7B,MAAM,CAACkB,MAAM,CAACW,IAAD,CAAP,CADH,IACqB,CAD5B;AAEH;;AACD,aAAO7B,MAAM,CAACkB,MAAM,CAACW,IAAD,CAAP,CAAb;AACH;AAED;;;;;;;;6BAKoB;AAAA,UAAbX,MAAa,uEAAJ,EAAI;AAChB,UAAIQ,QAAQ,GAAGR,MAAM,CAACnL,MAAtB;AACA,UAAI8L,IAAI,GAAG,GAAX;AACA,UAAIC,IAAI,GAAG,GAAX;AACAD,UAAI,GAAGP,IAAI,CAACM,KAAL,CAAWF,QAAQ,GAAG,CAAtB,CAAP;;AACA,UAAI,IAAIG,IAAJ,KAAaH,QAAjB,EAA2B;AACvBI,YAAI,GAAG,IAAID,IAAX;AACA,eAAO,CAAC7B,MAAM,CAACkB,MAAM,CAACY,IAAD,CAAP,CAAN,GACJ9B,MAAM,CAACkB,MAAM,CAACY,IAAI,GAAG,CAAR,CAAP,CADH,IACyB,CADhC;AAEH;;AACD,aAAO9B,MAAM,CAACkB,MAAM,CAACQ,QAAQ,GAAGG,IAAX,GAAkB,CAAnB,CAAP,CAAb;AACH;AAED;;;;;;;;;uCAMsC;AAAA,UAArBX,MAAqB,uEAAZ,EAAY;AAAA,UAARa,MAAQ;AAClC,aAAOb,MAAM,CAACc,IAAP,CAAYD,MAAZ,CAAP;AACH;AAED;;;;;;;;;;;;kCAUgC;AAAA,UADpB1C,MACoB,uEADX,CACW;AAAA,UADR4C,KACQ;AAAA,UADDzC,SACC,uEADW,WACX;AAAA,UAA5Bc,SAA4B,uEAAhB,CAAgB;AAAA,UAAb4B,MAAa,uEAAJ,EAAI;AAC5B,UAAIC,QAAQ,GAAGC,gDAAG,CAACH,KAAD,CAAlB;;AAEA,UAAI,CAACE,QAAL,EAAe;AACX;AACH;;AAED9C,YAAM,GAAGA,MAAM,CAAC4B,OAAP,CAAeX,SAAf,CAAT;;AACA,UAAI+B,KAAK,CAAChD,MAAD,CAAL,IAAiB,CAACiD,QAAQ,CAACjD,MAAD,CAA9B,EAAwC;AACpCA,cAAM,GAAG,EAAT;AACH,OAFD,MAEO;AACHA,cAAM,GAAGkD,oDAAY,CAACL,MAAD,CAAZ,CAAqB7C,MAArB,CAAT;AACH;;AAED,cAAQG,SAAS,CAACI,WAAV,EAAR;AACI,aAAK,WAAL;AACIuC,kBAAQ,CAACK,SAAT,GAAqBnD,MAArB;AACA;;AACJ,aAAK,UAAL;AACI8C,kBAAQ,CAACM,KAAT,GAAiBpD,MAAjB;AACA;;AACJ,aAAK,gBAAL;AACI,cAAIqD,OAAO,GAAGP,QAAQ,CAACQ,UAAvB;AACA,cAAIC,OAAO,GAAGC,uDAAU,CAACxD,MAAD,CAAxB;AACA8C,kBAAQ,CAACW,YAAT,CAAsBF,OAAtB,EAA+BF,OAA/B;AACA;AAXR;AAaH;AAED;;;;;;;;;;;oCAQgB5G,Q,EAAuB;AAAA,UAAboG,MAAa,uEAAJ,EAAI;AACnC,UAAIlO,EAAE,GAAG,KAAKA,EAAd;;AACA,UAAIA,EAAE,CAAC+O,OAAH,CAAWjH,QAAX,EAAqB,CAACkH,uDAAD,CAArB,CAAJ,EAA8C;AAC1C,YAAIC,OAAO,GAAGjP,EAAE,CAACkP,QAAH,CAAYpH,QAAZ,CAAd;;AACA,YAAImH,OAAO,CAACE,OAAR,IAAmB,CAACjB,MAAM,CAACiB,OAA/B,EAAwC;AACpCjB,gBAAM,CAACiB,OAAP,GAAiBF,OAAO,CAACE,OAAzB;AACH;;AACD,YAAIF,OAAO,CAACG,SAAR,IAAqB,CAAClB,MAAM,CAACmB,gBAAjC,EAAmD;AAC/CnB,gBAAM,CAACmB,gBAAP,GAA0BJ,OAAO,CAACG,SAAlC;AACH;AACJ,OARD,MAQO;AACHlB,cAAM,CAACiB,OAAP,GAAiBjB,MAAM,CAACiB,OAAP,IAAkB,EAAnC;AACAjB,cAAM,CAACmB,gBAAP,GAA0BnB,MAAM,CAACmB,gBAAP,IAA2B,EAArD;AACH;;AACD,aAAOnB,MAAP;AACH;AAED;;;;8BACU;AACN,UAAI,CAAC,KAAKhN,WAAV,EAAuB;AACnB;AACH,OAHK,CAIN;;;AACA,WAAKM,OAAL,CAAa4G,GAAb,CAAiBI,MAAjB,EAAyBgC,oDAAK,CAAC,KAAKC,OAAN,EAAe,IAAf,CAA9B;AAEA,WAAKvJ,WAAL,GAAmB,KAAnB;AACH;;;;EAnc+BmH,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BpC;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AAEA;;;;IAGqBiH,c;;;;;AAEjB;;;;;AAKA,0BAAYtP,EAAZ,EAAgBuP,CAAhB,EAAmB;AAAA;;AAAA;;AACf,wFAAMvP,EAAN,EAAUsP,cAAV,GADe,CAGf;;AACA,QAAIrP,GAAG,GAAG,MAAKuP,MAAf;AAEA;;;;;AAIA,UAAKC,IAAL,GAAYF,CAAC,CAACE,IAAd;AAEA;;;;;AAIA,UAAKvP,IAAL,GAAYC,6DAAW,CAACoP,CAAC,CAACnP,WAAH,EAAgB,4BAAhB,CAAvB;AAEA;;;;;AAIA,UAAKsP,MAAL,GAAc,IAAd;AAEA;;;;;AAIA,UAAKC,KAAL,GAAa,IAAb;AAEA;;;;;AAIA,UAAKC,MAAL,GAAc,IAAd;AAEA;;;;;AAIA,UAAKC,UAAL,GAAkBC,8DAAY,CAACP,CAAC,CAACQ,YAAH,EAAiB,IAAjB,CAA9B;AAEA;;;;;AAIA,UAAKC,OAAL,GAAeF,8DAAY,CAACP,CAAC,CAACS,OAAH,EAAY,IAAZ,CAA3B;AAEA;;;;;AAIA,UAAKC,UAAL,GAAkBV,CAAC,CAACW,aAAF,IAAmB,IAArC;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoBC,4DAAU,CAACb,CAAC,CAACc,aAAH,EAAkB,CAAlB,CAA9B;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmBnQ,6DAAW,CAACoP,CAAC,CAACgB,mBAAH,EAAwB,IAAxB,CAA9B;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmB/G,6DAAW,CAAC8F,CAAC,CAACkB,YAAH,EAAiB,EAAjB,CAA9B;AAEA;;;;;AAIA,UAAKC,QAAL,GAAgBvQ,6DAAW,CAACoP,CAAC,CAACoB,aAAH,EAAkB,IAAlB,CAA3B;AAEA;;;;;AAIA,UAAKC,OAAL,GAAezQ,6DAAW,CAACoP,CAAC,CAACsB,QAAH,EAAa,gBAAb,CAA1B;AAEA;;;;;AAIA,UAAKC,OAAL,GAAe3Q,6DAAW,CAACoP,CAAC,CAACwB,QAAH,EAAa,IAAb,CAA1B;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmB7Q,6DAAW,CAACoP,CAAC,CAAC0B,aAAH,EAAkB,QAAlB,CAA9B;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoB/Q,6DAAW,CAACoP,CAAC,CAAC4B,cAAH,EAAmB,OAAnB,CAA/B;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoBjR,6DAAW,CAACoP,CAAC,CAAC8B,cAAH,EAAmB,IAAnB,CAA/B;AAEA;;;;;AAIA,UAAKC,gBAAL,GAAwBnR,6DAAW,CAACoP,CAAC,CAACgC,mBAAH,EAC/B,MAAKP,WAD0B,CAAnC;AAGA;;;;;AAIA,UAAKrQ,UAAL,GAAkBR,6DAAW,CAACoP,CAAC,CAAC5O,UAAH,EAAe,oBAAf,CAA7B;AAEA;;;;;AAIA,UAAK6Q,YAAL,GAAoBrR,6DAAW,CAACoP,CAAC,CAACkC,cAAH,EAAmB,YAAnB,CAA/B;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoBvR,6DAAW,CAACoP,CAAC,CAACoC,cAAH,EAAmB,YAAnB,CAA/B;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoBzR,6DAAW,CAACF,GAAG,CAAC4R,cAAL,EAAqB,gBAArB,CAA/B;AAEA;;;;;AAIA,UAAKC,gBAAL,GAAwB3R,6DAAW,CAACF,GAAG,CAAC8R,wBAAL,EAC/B,qBAD+B,CAAnC;AAGA;;;;;AAIA,UAAKC,mBAAL,GAA2B7R,6DAAW,CAClCF,GAAG,CAACgS,iCAD8B,EAElC,yBAFkC,CAAtC;AAKA;;;;;;AAKA,UAAKC,IAAL,GAAY/R,6DAAW,CAACoP,CAAC,CAAC2C,IAAH,EAAS,MAAKrC,UAAL,GAAkB,QAAlB,GAA6B,QAAtC,CAAvB;AAEA;;;;;AAIA,UAAKsC,OAAL,GAAe1I,6DAAW,CAAC8F,CAAC,CAAC6C,QAAH,EAAa,EAAb,CAA1B;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmB5R,OAAO,CAAC8O,CAAC,CAAC+C,YAAH,CAA1B;AAEA;;;;;AAIA,UAAKC,aAAL,GAAqB9R,OAAO,CAAC8O,CAAC,CAACiD,eAAH,CAA5B;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmBtS,6DAAW,CAACoP,CAAC,CAACmD,aAAH,EAAkB,aAAlB,CAA9B;AAEA;;;;;AAIA,UAAKC,eAAL,GAAuBxS,6DAAW,CAACoP,CAAC,CAACqD,gBAAH,EAAqBC,sDAArB,CAAlC;AAEA;;;;;AAIA,UAAKC,UAAL,GAAkB,EAAlB;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoB,IAApB;AAEA;;;;;AAIA,UAAKC,QAAL,GAAgB7J,4DAAU,CAACoG,CAAC,CAAC0D,SAAH,EAAc5J,+CAAd,CAA1B;AAEA;;;;;AAIA,UAAK6J,YAAL,GAAoB/J,4DAAU,CAACoG,CAAC,CAAC4D,cAAH,EAAmB9J,+CAAnB,CAA9B;AAEA;;;;;AAIA,UAAK+J,WAAL,GAAmBjK,4DAAU,CAACoG,CAAC,CAAC8D,aAAH,EAAkBhK,+CAAlB,CAA7B;AAEA;;;;;AAIA,UAAKiK,aAAL,GAAqBnK,4DAAU,CAACoG,CAAC,CAACgE,eAAH,EAAoBlK,+CAApB,CAA/B;AAEA;;;;;AAIA,UAAKmK,YAAL,GAAoBrK,4DAAU,CAACoG,CAAC,CAACkE,cAAH,EAAmBpK,+CAAnB,CAA9B;AAEA;;;;;AAIA,UAAKqK,iBAAL,GAAyBvK,4DAAU,CAACoG,CAAC,CAACoE,oBAAH,EAAyBtK,+CAAzB,CAAnC;AAEA;;;;;AAIA,UAAKuK,gBAAL,GAAwBzK,4DAAU,CAACoG,CAAC,CAACsE,mBAAH,EAAwBxK,+CAAxB,CAAlC;AAEA;;;;;AAIA,UAAKyK,oBAAL,GAA4B3K,4DAAU,CAACoG,CAAC,CAACwE,uBAAH,EAClC1K,+CADkC,CAAtC;AAGA;;;;;AAIA,UAAK2K,mBAAL,GAA2B7K,4DAAU,CAACoG,CAAC,CAAC0E,sBAAH,EACjC5K,+CADiC,CAArC,CAjQe,CAoQf;;AACA,QAAIrJ,EAAE,CAACe,UAAP,EAAmB;AACf,YAAKkP,UAAL,GAAkBjQ,EAAE,CAAC8E,OAAH,CAAW,YAAX,EAAyBoP,OAA3C,CADe,CACqC;;AACpD,YAAK/D,YAAL,GAAoB,CAApB,CAFe,CAEQ;AAC1B,KAxQc,CA0Qf;;;AACAnQ,MAAE,UAAF,CAAUuP,CAAC,CAACE,IAAF,GAAS,OAAnB,EAA4BzP,EAAE,CAACmU,YAAH,KAAoB,MAAKxT,UAArD,EAAiE,IAAjE,EACI,MADJ;;AAGA,UAAKM,MAAL;;AA9Qe;AA+QlB;AAED;;;;;;;;8BAIUmT,G,EAAK;AACX,UAAIC,SAAS,GAAGC,wDAAS,CAACF,GAAD,CAAzB;;AAEA,aAAOC,SAAS,IAAIA,SAAS,KAAK,KAAKzE,MAAhC,IACAyE,SAAS,KAAK,KAAK1E,KAD1B,EACiC;AAC7B0E,iBAAS,GAAGA,SAAS,CAAChQ,UAAtB;AACH;;AAED,UAAIgQ,SAAS,KAAK,KAAKzE,MAAnB,IAA6ByE,SAAS,KAAK,KAAK1E,KAApD,EAA2D;AACvD,aAAKxH,MAAL;AACH;;AAED;AACH;AAED;;;;;;6BAGS;AACL;AACAoM,8DAAS,CAACpT,0CAAD,EAAO,SAAP,EAAkB,KAAK4R,YAAvB,CAAT;AAEA,UAAIyB,WAAW,GAAG,KAAK5E,MAAL,CAAYxD,KAAZ,CAAkBC,OAApC;;AAEA,UAAImI,WAAW,KAAK,QAApB,EAA8B;AAC1B,aAAKtB,YAAL,CAAkB,IAAlB;AACH;;AACD,UAAIsB,WAAW,KAAK,QAApB,EAA8B;AAC1B,aAAKlB,aAAL,CAAmB,IAAnB;AACH;;AAED,WAAK1D,MAAL,CAAYxD,KAAZ,CAAkBC,OAAlB,GAA4BmI,WAAW,KAAK,QAAhB,GACxBC,2CADwB,GACjB,QADX;;AAGA,UAAID,WAAW,KAAK,QAApB,EAA8B;AAC1B,aAAKpB,WAAL,CAAiB,IAAjB;AACAsB,6DAAM,CAACvT,0CAAD,EAAO,SAAP,EAAkB,KAAK4R,YAAvB,CAAN;AACH;;AACD,UAAIyB,WAAW,KAAK,QAApB,EAA8B;AAC1B,aAAKhB,YAAL,CAAkB,IAAlB;AACH;AACJ;AAED;;;;;;;8BAIUmB,G,EAAK;AACX,UAAIC,EAAE,GAAGD,GAAG,CAACtQ,UAAb;;AACA,UAAI,CAACuQ,EAAD,IAAO,CAACD,GAAZ,EAAiB;AACb;AACH;;AACD,UAAIE,SAAS,GAAGF,GAAG,CAAChG,UAAJ,CAAemG,OAA/B;AACA,UAAIhN,QAAQ,GAAG6M,GAAG,CAAChG,UAAJ,CAAeoG,YAAf,CAA4B,IAA5B,EAAkCC,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CAAf;AACAlN,cAAQ,GAAGvC,QAAQ,CAACuC,QAAD,EAAW,EAAX,CAAnB;;AACA,UAAI+M,SAAJ,EAAe;AACXI,6DAAQ,CAACL,EAAD,EAAK,KAAK5C,mBAAV,CAAR;AACH,OAFD,MAEO;AACHkD,gEAAW,CAACN,EAAD,EAAK,KAAK5C,mBAAV,CAAX;AACH;;AAED,UAAImD,IAAI,GAAG,KAAX;;AACA,UAAK,KAAKtF,UAAL,IAAmBgF,SAApB,IACC,CAAC,KAAKhF,UAAN,IAAoB,CAACgF,SAD1B,EACsC;AAClCM,YAAI,GAAG,IAAP;AACH;;AACD,WAAKC,SAAL,CAAetN,QAAf,EAAyBqN,IAAzB;AACH;AAED;;;;;;2BAGO;AAAA;;AACH,UAAI,KAAKjU,WAAL,IAAoB,CAAC,KAAK8O,OAA9B,EAAuC;AACnC;AACH;;AAED,WAAKxO,OAAL,CAAasF,IAAb,CAAkB,wBAAlB,EAA4C,IAA5C,EACI,CAACuO,qDAAM,CAAC,KAAK3E,QAAN,CADX;AAGA,WAAKlP,OAAL,CAAaC,EAAb,CAAgB,CAAC,aAAD,CAAhB,EACI,UAACzB,EAAD,EAAK8H,QAAL;AAAA,eAAkB,MAAI,CAACwN,OAAL,CAAaxN,QAAb,CAAlB;AAAA,OADJ;AAGA,WAAKyN,QAAL;AACA,WAAKC,YAAL;AAEA;;AACA,WAAKtU,WAAL,GAAmB,IAAnB;AAEA,WAAK6R,YAAL,GAAoB,KAAK0C,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAApB;AAEA,WAAKlU,OAAL,CAAasF,IAAb,CAAkB,gCAAlB,EAAoD,KAAK9G,EAAzD,EAA6D,IAA7D;AACA,WAAKwB,OAAL,CAAasF,IAAb,CAAkB,uBAAlB,EAA2C,IAA3C,EApBG,CAsBH;AACA;;AACA,WAAK6O,YAAL;AACH;AAED;;;;;;+BAGW;AAAA;;AACP,UAAI,KAAKhG,KAAT,EAAgB;AACZ;AACH;;AACD,UAAI3P,EAAE,GAAG,KAAKA,EAAd;AACA,UAAI4V,IAAI,GAAGC,sDAAS,CAAC,MAAD,CAApB;AACAD,UAAI,CAACE,SAAL,GAAiB,KAAKtE,YAAtB,CANO,CAQP;;AACA,UAAIuE,QAAQ,GAAG,CAAC,KAAKrF,QAAN,GACX1Q,EAAE,CAAC8E,OAAH,CAAW,SAAX,EAAsBkR,SAAtB,CAAgC,KAAKrD,eAArC,CADW,GAEXvE,gDAAG,CAAC,KAAKsC,QAAN,CAFP;;AAIA,UAAI,CAAC,KAAKA,QAAV,EAAoB;AAChB,YAAI/B,UAAU,GAAGoH,QAAQ,CAACpH,UAA1B;AACAA,kBAAU,CAACtK,UAAX,CAAsB4R,YAAtB,CAAmCL,IAAnC,EAAyCjH,UAAzC;AACH,OAHD,MAGO;AACHoH,gBAAQ,CAACG,WAAT,CAAqBN,IAArB;AACH;;AAED,UAAI,CAAC,KAAK9E,OAAV,EAAmB;AACf,YAAIqF,GAAG,GAAGN,sDAAS,CAAC,GAAD,EAAM,CAAC,MAAD,EAAS,cAAT,CAAN,CAAnB;AACAM,WAAG,CAACL,SAAJ,GAAgB,KAAK9E,WAArB;AACAmF,WAAG,CAACC,KAAJ,GAAY,KAAKlW,IAAjB;AAEAiW,WAAG,CAAC3H,SAAJ,GAAgB,KAAKoC,OAArB;AACAgF,YAAI,CAACM,WAAL,CAAiBC,GAAjB;;AACA,YAAI,CAAC,KAAK9D,WAAV,EAAuB;AACnBqC,+DAAM,CAACyB,GAAD,EAAM,OAAN,EAAe,UAAC/B,GAAD;AAAA,mBAAS,MAAI,CAACjM,MAAL,CAAYiM,GAAZ,CAAT;AAAA,WAAf,CAAN;AACH,SAFD,MAEO;AACHM,+DAAM,CAACyB,GAAD,EAAM,WAAN,EAAmB,UAAC/B,GAAD;AAAA,mBAAS,MAAI,CAACjM,MAAL,CAAYiM,GAAZ,CAAT;AAAA,WAAnB,CAAN;AACH;AACJ,OAZD,MAYO;AAAE;AACLwB,YAAI,CAACpH,SAAL,GAAiB,KAAKsC,OAAtB;AACA,YAAIuF,QAAQ,GAAGT,IAAI,CAACjH,UAApB;;AACA,YAAI,CAAC,KAAK0D,WAAV,EAAuB;AACnBqC,+DAAM,CAAC2B,QAAD,EAAW,OAAX,EAAoB,UAACjC,GAAD;AAAA,mBAAS,MAAI,CAACjM,MAAL,CAAYiM,GAAZ,CAAT;AAAA,WAApB,CAAN;AACH,SAFD,MAEO;AACHM,+DAAM,CAAC2B,QAAD,EAAW,WAAX,EAAwB,UAACjC,GAAD;AAAA,mBAAS,MAAI,CAACjM,MAAL,CAAYiM,GAAZ,CAAT;AAAA,WAAxB,CAAN;AACH;AACJ;;AAED,WAAK1E,MAAL,GAAckG,IAAd;AACA,WAAKjG,KAAL,GAAa,KAAKD,MAAL,CAAYf,UAAzB;AAEA,WAAKqE,QAAL,CAAc,IAAd;AACH;AAED;;;;;;mCAGe;AAAA;;AACX,UAAIhT,EAAE,GAAG,KAAKA,EAAd;AAEA,UAAIgW,SAAS,GAAG,CAAC,KAAK1F,WAAN,GACZuF,sDAAS,CAAC,KAAD,CADG,GAEZzH,gDAAG,CAAC,KAAKkC,WAAN,CAFP;AAGA0F,eAAS,CAACF,SAAV,GAAsB,KAAKpE,YAA3B,CANW,CAQX;;AACA,UAAI4E,YAAY,GAAGT,sDAAS,CAAC,GAAD,CAA5B;AACAS,kBAAY,CAAC9H,SAAb,GAAyB,KAAK0D,IAA9B;AACA8D,eAAS,CAACE,WAAV,CAAsBI,YAAtB,EAXW,CAaX;;AACA,UAAIC,EAAE,GAAGV,sDAAS,CAAC,IAAD,CAAlB;AACAU,QAAE,CAACT,SAAH,GAAe,KAAKlE,YAApB;AAEA,UAAI4E,GAAG,GAAG,KAAKvG,UAAL,IAAmBjQ,EAAE,CAAC8B,GAAH,EAA7B;AACA,UAAI2U,WAAW,GAAG,KAAKxG,UAAL,GACd,KAAKE,YADS,GACMnQ,EAAE,CAAC0W,kBAAH,EADxB;AAEA,UAAIC,SAAS,GAAGH,GAAG,CAAChT,IAAJ,CAASiT,WAAT,CAAhB,CApBW,CAsBX;;AACA,UAAI,KAAKlE,aAAT,EAAwB;AACpB,YAAIqC,EAAE,GAAGgC,4DAAe,CAAC,UAAU5W,EAAE,CAACsH,EAAd,EAAkB,KAAKmL,WAAvB,EACpB,KAAKA,WADe,CAAxB;AAEAwC,6DAAQ,CAACL,EAAD,EAAK,KAAK9C,gBAAV,CAAR;AACAyE,UAAE,CAACL,WAAH,CAAetB,EAAf;AACAA,UAAE,CAACiC,KAAH,CAAS/B,OAAT,GAAmB,CAAC,KAAKjF,UAAzB;AAEA6E,6DAAM,CAACE,EAAE,CAACiC,KAAJ,EAAW,OAAX,EAAoB,YAAM;AAC5B,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACjT,KAAV,CAAgB3B,MAApC,EAA4C+U,CAAC,EAA7C,EAAiD;AAC7C,gBAAIC,GAAG,GAAG3I,gDAAG,CAAC,SAAS0I,CAAT,GAAa,GAAb,GAAmB9W,EAAE,CAACsH,EAAvB,CAAb;;AACA,gBAAIyP,GAAG,IAAInC,EAAE,CAACiC,KAAH,CAAS/B,OAAT,KAAqBiC,GAAG,CAACjC,OAApC,EAA6C;AACzCiC,iBAAG,CAACC,KAAJ;AACAD,iBAAG,CAACjC,OAAJ,GAAcF,EAAE,CAACiC,KAAH,CAAS/B,OAAvB;AACH;AACJ;AACJ,SARK,CAAN;AASH;;AAED,WAAK,IAAI/I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4K,SAAS,CAACjT,KAAV,CAAgB3B,MAApC,EAA4CgK,CAAC,EAA7C,EAAiD;AAC7C,YAAIhI,IAAI,GAAG4S,SAAS,CAACjT,KAAV,CAAgBqI,CAAhB,CAAX;;AACA,YAAIkL,QAAQ,GAAG,KAAKzG,WAAL,CAAiBzE,CAAjB,KAAuB,KAAKmL,cAAL,CAAoBnT,IAApB,CAAtC;;AACA,YAAIoT,KAAK,GAAGP,4DAAe,CAAC,SAAS7K,CAAT,GAAa,GAAb,GAAmB/L,EAAE,CAACsH,EAAvB,EAA2B2P,QAA3B,EACvBA,QADuB,CAA3B;AAEAhC,6DAAQ,CAACkC,KAAD,EAAQ,KAAKrF,gBAAb,CAAR;;AACA,YAAI,CAAC,KAAKjC,UAAV,EAAsB;AAClBoF,+DAAQ,CAACkC,KAAD,EAAQ,KAAKnF,mBAAb,CAAR;AACH;;AACDuE,UAAE,CAACL,WAAH,CAAeiB,KAAf;;AACA,YAAI,CAAC,KAAKtH,UAAV,EAAsB;AAClBsH,eAAK,CAACN,KAAN,CAAY/B,OAAZ,GAAsB,IAAtB;AACH;;AAEDJ,6DAAM,CAACyC,KAAK,CAACN,KAAP,EAAc,OAAd,EAAuB,UAACzC,GAAD,EAAS;AAClC,cAAIhG,GAAG,GAAGkG,wDAAS,CAACF,GAAD,CAAnB;AACA,cAAIO,GAAG,GAAGvG,GAAG,CAAC/J,UAAd;;AACA,gBAAI,CAAC+S,SAAL,CAAezC,GAAf;AACH,SAJK,CAAN;AAKH,OA5DU,CA8DX;;;AACA,UAAI0C,CAAC,GAAGxB,sDAAS,CAAC,GAAD,EAAM,CAAC,OAAD,EAAU,QAAV,CAAN,CAAjB;AACA,UAAIM,GAAJ,CAhEW,CAiEX;;AACA,UAAI,CAAC,KAAK/E,YAAV,EAAwB;AACpB+E,WAAG,GAAGN,sDAAS,CAAC,GAAD,EAAM,CAAC,MAAD,EAAS,cAAT,CAAN,CAAf;AACAM,WAAG,CAACL,SAAJ,GAAgB,KAAKxE,gBAArB;AACA6E,WAAG,CAAC3H,SAAJ,GAAgB,KAAK0C,YAArB;AACAwD,6DAAM,CAACyB,GAAD,EAAM,OAAN,EAAe,UAAC/B,GAAD;AAAA,iBAAS,MAAI,CAACjM,MAAL,CAAYiM,GAAZ,CAAT;AAAA,SAAf,CAAN;AACAiD,SAAC,CAACnB,WAAF,CAAcC,GAAd;AACH,OAND,MAMO;AACHkB,SAAC,CAAC7I,SAAF,GAAc,KAAK4C,YAAnB;AACA+E,WAAG,GAAGkB,CAAC,CAAC1I,UAAR;AACA+F,6DAAM,CAACyB,GAAD,EAAM,OAAN,EAAe,UAAC/B,GAAD;AAAA,iBAAS,MAAI,CAACjM,MAAL,CAAYiM,GAAZ,CAAT;AAAA,SAAf,CAAN;AACH;;AAED4B,eAAS,CAACE,WAAV,CAAsBK,EAAtB;AACAP,eAAS,CAACE,WAAV,CAAsBmB,CAAtB;AAEA,WAAK1H,KAAL,CAAWtL,UAAX,CAAsB4R,YAAtB,CAAmCD,SAAnC,EAA8C,KAAKrG,KAAnD;AACA,WAAKC,MAAL,GAAcoG,SAAd;AACH;AAED;;;;;;;;8BAKUlO,Q,EAAUqN,I,EAAM;AACtB,UAAInV,EAAE,GAAG,KAAKA,EAAd;AACA,UAAIwW,GAAG,GAAGxW,EAAE,CAAC8B,GAAH,EAAV;;AAEA,UAAIqT,IAAJ,EAAU;AACN,aAAKzB,iBAAL,CAAuB,IAAvB,EAA6B5L,QAA7B;AACH,OAFD,MAEO;AACH,aAAKgM,oBAAL,CAA0B,IAA1B,EAAgChM,QAAhC;AACH;;AAED,WAAKwP,aAAL,CAAmBd,GAAnB,EAAwB1O,QAAxB,EAAkCqN,IAAlC;;AACA,UAAI,KAAKlF,UAAT,EAAqB;AACjB,aAAKqH,aAAL,CAAmB,KAAKrH,UAAxB,EAAoCnI,QAApC,EAA8CqN,IAA9C;AACH;;AAED,UAAIrC,UAAU,GAAG,KAAKA,UAAtB;AACA,UAAIyE,SAAS,GAAGzE,UAAU,CAACnO,OAAX,CAAmBmD,QAAnB,CAAhB;;AACA,UAAIqN,IAAJ,EAAU;AACN,YAAIoC,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAClB,eAAKzE,UAAL,CAAgB/H,IAAhB,CAAqBjD,QAArB;AACH;AACJ,OAJD,MAIO;AACH,YAAIyP,SAAS,KAAK,CAAC,CAAnB,EAAsB;AAClB,eAAKzE,UAAL,CAAgB0E,MAAhB,CAAuBD,SAAvB,EAAkC,CAAlC;AACH;AACJ;;AAED,UAAIpC,IAAJ,EAAU;AACN,aAAKvB,gBAAL,CAAsB,IAAtB,EAA4B9L,QAA5B;AACA,aAAKtG,OAAL,CAAasF,IAAb,CAAkB,eAAlB,EAAmC9G,EAAnC,EAAuC,IAAvC,EAA6C8H,QAA7C,EACI,KAAKgL,UADT;AAEH,OAJD,MAIO;AACH,aAAKkB,mBAAL,CAAyB,IAAzB,EAA+BlM,QAA/B;AACA,aAAKtG,OAAL,CAAasF,IAAb,CAAkB,cAAlB,EAAkC9G,EAAlC,EAAsC,IAAtC,EAA4C8H,QAA5C,EACI,KAAKgL,UADT;AAEH;AACJ;AAED;;;;;;;4BAIQhL,Q,EAAU;AACd,UAAI2P,sDAAO,CAAC3P,QAAD,CAAP,IAAqB,CAAC,KAAK4P,WAAL,CAAiB5P,QAAjB,CAA1B,EAAsD;AAClD;AACH;;AACD,UAAI,KAAKkI,OAAL,IAAgB,KAAKJ,MAAzB,EAAiC;AAC7B,YAAImH,GAAG,GAAG3I,gDAAG,CAAC,SAAStG,QAAT,GAAoB,GAApB,GAA0B,KAAK9H,EAAL,CAAQsH,EAAnC,CAAb;;AACA,YAAIyP,GAAJ,EAAS;AACLA,aAAG,CAACC,KAAJ;AACH;AACJ,OALD,MAKO;AACH,aAAK5B,SAAL,CAAetN,QAAf,EAAyB,KAAzB;AACH;AACJ;AAED;;;;;;;4BAIQA,Q,EAAU;AACd,UAAI2P,sDAAO,CAAC3P,QAAD,CAAP,IAAqB,KAAK4P,WAAL,CAAiB5P,QAAjB,CAAzB,EAAqD;AACjD;AACH;;AACD,UAAI,KAAKkI,OAAL,IAAgB,KAAKJ,MAAzB,EAAiC;AAC7B,YAAImH,GAAG,GAAG3I,gDAAG,CAAC,SAAStG,QAAT,GAAoB,GAApB,GAA0B,KAAK9H,EAAL,CAAQsH,EAAnC,CAAb;;AACA,YAAIyP,GAAJ,EAAS;AACLA,aAAG,CAACC,KAAJ;AACH;AACJ,OALD,MAKO;AACH,aAAK5B,SAAL,CAAetN,QAAf,EAAyB,IAAzB;AACH;AACJ;AAED;;;;;;;gCAIYA,Q,EAAU;AAClB,UAAI,KAAKgL,UAAL,CAAgBnO,OAAhB,CAAwBmD,QAAxB,MAAsC,CAAC,CAA3C,EAA8C;AAC1C,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH;AAED;;;;;;;8BAIUA,Q,EAAU;AAChB,UAAI2P,sDAAO,CAAC3P,QAAD,CAAP,IAAqB,KAAK4P,WAAL,CAAiB5P,QAAjB,CAAzB,EAAqD;AACjD,aAAK6P,OAAL,CAAa7P,QAAb;AACH,OAFD,MAEO;AACH,aAAKwN,OAAL,CAAaxN,QAAb;AACH;AACJ;AAED;;;;;;;oCAIgB;AACZ,aAAO,KAAKgL,UAAZ;AACH;AAED;;;;;;8BAGU;AAAA;;AACN,UAAI,CAAC,KAAK5R,WAAV,EAAuB;AACnB;AACH;;AACD,UAAIkN,gDAAG,CAAC,KAAKkC,WAAN,CAAP,EAA2B;AACvBlC,wDAAG,CAAC,KAAKkC,WAAN,CAAH,CAAsB9B,SAAtB,GAAkC,EAAlC;AACH,OAFD,MAEO;AACH,aAAKoB,MAAL,CAAYpB,SAAZ,GAAwB,EAAxB;AACAoJ,8DAAS,CAAC,KAAKhI,MAAN,CAAT;AACA,aAAKA,MAAL,GAAc,IAAd;AACH;;AACD,WAAKD,KAAL,CAAWnB,SAAX,GAAuB,EAAvB;AACAoJ,4DAAS,CAAC,KAAKjI,KAAN,CAAT;AACA,WAAKA,KAAL,GAAa,IAAb;AAEA,WAAKnO,OAAL,CAAa4G,GAAb,CAAiB,CAAC,aAAD,CAAjB,EACI,UAACpI,EAAD,EAAK8H,QAAL;AAAA,eAAkB,MAAI,CAACwN,OAAL,CAAaxN,QAAb,CAAlB;AAAA,OADJ;AAGA,WAAKiL,YAAL,GAAoB,IAApB;AAEA,WAAK7R,WAAL,GAAmB,KAAnB;AACH;;;mCAEc6C,I,EAAM;AACjB,UAAI,CAACA,IAAI,CAAC8T,aAAV,EAAyB;AACrB,eAAO,EAAP;AACH;;AAED,WAAK,IAAI9L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhI,IAAI,CAAC+T,UAAL,CAAgB/V,MAApC,EAA4CgK,CAAC,EAA7C,EAAiD;AAC7C,YAAIgM,CAAC,GAAGhU,IAAI,CAAC+T,UAAL,CAAgB/L,CAAhB,CAAR;;AACA,YAAIgM,CAAC,CAACC,QAAF,KAAe,CAAnB,EAAsB;AAClB,iBAAOD,CAAC,CAACE,SAAT;AACH,SAFD,MAEO,IAAIF,CAAC,CAACC,QAAF,KAAe,CAAnB,EAAsB;AACzB,cAAID,CAAC,CAACzQ,EAAF,IAAQyQ,CAAC,CAACzQ,EAAF,CAAK3C,OAAL,CAAa,OAAb,MAA0B,CAAC,CAAvC,EAA0C;AACtC;AACH,WAFD,MAEO;AACH,mBAAOuT,oDAAO,CAACH,CAAD,CAAd;AACH;AACJ;;AACD;AACH;;AACD,aAAO,EAAP;AACH;;;kCAEavB,G,EAAK2B,M,EAAQhD,I,EAAM;AAC7B,WAAKiD,UAAL,CAAgB5B,GAAhB,EAAqB2B,MAArB,EAA6BhD,IAA7B;;AACA,WAAKkD,QAAL,CAAc7B,GAAd,EAAmB2B,MAAnB,EAA2BhD,IAA3B;AACH;;;+BAEUqB,G,EAAK2B,M,EAAQhD,I,EAAM;AAC1B,WAAK,IAAIpJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyK,GAAG,CAAChT,IAAJ,CAASzB,MAA7B,EAAqCgK,CAAC,EAAtC,EAA0C;AACtC,YAAIxI,GAAG,GAAGiT,GAAG,CAAChT,IAAJ,CAASuI,CAAT,CAAV;AACA,YAAIhI,IAAI,GAAGR,GAAG,CAACG,KAAJ,CAAUyU,MAAV,CAAX;;AACA,YAAIpU,IAAJ,EAAU;AACNA,cAAI,CAACqI,KAAL,CAAWC,OAAX,GAAqB8I,IAAI,GAAGV,2CAAH,GAAU,EAAnC;AACH;AACJ;AACJ;;;6BAEQ+B,G,EAAK2B,M,EAAQhD,I,EAAM;AACxB,UAAImD,OAAO,GAAGzW,gDAAG,CAAC2U,GAAD,EAAM,KAAN,CAAjB;;AACA,UAAI8B,OAAO,CAACvW,MAAR,KAAmB,CAAvB,EAA0B;AACtB;AACH;;AACDuW,aAAO,CAACH,MAAD,CAAP,CAAgB/L,KAAhB,CAAsBC,OAAtB,GAAgC8I,IAAI,GAAGV,2CAAH,GAAU,EAA9C;AACH;;;mCAEc;AAAA;;AACX,WAAKtC,OAAL,CAAatH,OAAb,CAAqB,UAACsN,MAAD,EAAY;AAC7B,cAAI,CAAC7C,OAAL,CAAa6C,MAAb;AACH,OAFD;AAGH;;;;EAlsBuC9P,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB5C;AACA;AACA;AACA;AACA;AAGA;AAEA;;;;IAGqBkQ,iB;;;;;AAEjB;;;;;AAKA,6BAAYvY,EAAZ,EAAgBuP,CAAhB,EAAmB;AAAA;;AAAA;;AACf,2FAAMvP,EAAN,EAAUuY,iBAAV;AAEA;;;;;AAIA,UAAK9I,IAAL,GAAYF,CAAC,CAACE,IAAd;AAEA;;;;;AAIA,UAAKvP,IAAL,GAAYC,6DAAW,CAACoP,CAAC,CAACnP,WAAH,EACnB,gCADmB,CAAvB;AAGA;;;;;AAIA,UAAKO,UAAL,GAAkBR,6DAAW,CAACoP,CAAC,CAAC5O,UAAH,EAAgB,uBAAhB,CAA7B;AAEA;;;;;AAIA,UAAK6X,SAAL,GAAiBrY,6DAAW,CAACoP,CAAC,CAACkJ,gBAAH,EAAqB,aAArB,CAA5B;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmBvY,6DAAW,CAACoP,CAAC,CAACoJ,kBAAH,EAAuB,aAAvB,CAA9B;AAEA;;;;;AAIA,UAAK/I,MAAL,GAAc,IAAd;AAEA;;;;;AAIA,UAAKD,KAAL,GAAa,IAAb;AAEA;;;;;AAIA,UAAKiJ,aAAL,GAAqB,eAAe5Y,EAAE,CAAC6Y,UAAlB,GAA+B,MAAKL,SAApC,GACjB,0BADJ;AAGA;;;;;AAIA,UAAKM,eAAL,GAAuB,eAAe9Y,EAAE,CAAC6Y,UAAlB,GAA+B,MAAKH,WAApC,GACnB,4BADJ;AAGA;;;;;AAIA,UAAKK,WAAL,GAAmB,gBAAnB;AAEA;;;;;AAIA,UAAKC,QAAL,GAAgBzJ,CAAC,CAAC0J,SAAF,IAAe,IAA/B;AAEA;;;;;AAIA,UAAKC,UAAL,GAAkBpJ,8DAAY,CAACP,CAAC,CAAC4J,WAAH,EAAgB,IAAhB,CAA9B;AAEA;;;;;AAIA,UAAKvI,OAAL,GAAezQ,6DAAW,CAACoP,CAAC,CAACsB,QAAH,EAAa,EAAb,CAA1B;AAEA;;;;;AAIA,UAAKuI,eAAL,GAAuB,MAAKF,UAAL,GACnB,MAAKJ,eAAL,GAAuB,MAAKlI,OADT,GAEnB,MAAKA,OAAL,IAAgB,MAAKmI,WAFzB;AAIA;;;;;AAIA,UAAKM,aAAL,GAAqB,MAAKH,UAAL,GACjB,MAAKN,aAAL,GAAqB,MAAKhI,OADT,GAEjB,MAAKA,OAAL,IAAgB,MAAKmI,WAFzB;AAIA;;;;;AAIA,UAAKjI,OAAL,GAAe3Q,6DAAW,CAACoP,CAAC,CAACwB,QAAH,EAAa,IAAb,CAA1B;AAEA;;;;;AAIA,UAAKC,WAAL,GAAmB7Q,6DAAW,CAACoP,CAAC,CAAC0B,aAAH,EAAkB,cAAlB,CAA9B;AAEA;;;;;AAIA,UAAKS,YAAL,GAAoBvR,6DAAW,CAACoP,CAAC,CAACoC,cAAH,EAAmB,WAAnB,CAA/B;AAEA;;;;;AAIA,UAAK2H,eAAL,GAAuBlJ,4DAAU,CAACb,CAAC,CAACgK,iBAAH,EAC7BvZ,EAAE,CAACwZ,kBAAH,EAD6B,CAAjC;AAGA;;;;;AAIA,UAAKC,cAAL,GAAsBrJ,4DAAU,CAACb,CAAC,CAACmK,gBAAH,EAAqB,IAArB,CAAhC;AAEA;;;;;AAIA,UAAK/G,eAAL,GAAuBxS,6DAAW,CAACoP,CAAC,CAACqD,gBAAH,EAAqBC,sDAArB,CAAlC;AAEA;;;;;AAIA,UAAK8G,YAAL,GAAoBxQ,4DAAU,CAACoG,CAAC,CAACqK,cAAH,EAAmBvQ,+CAAnB,CAA9B;AAEA;;;;;AAIA,UAAKwQ,WAAL,GAAmB1Q,4DAAU,CAACoG,CAAC,CAACuK,aAAH,EAAkBzQ,+CAAlB,CAA7B;AAEA;;;;;AAIA,UAAK0Q,YAAL,GAAoB5Q,4DAAU,CAACoG,CAAC,CAACyK,cAAH,EAAmB3Q,+CAAnB,CAA9B;AAEA;;;;;AAIA,UAAK4Q,WAAL,GAAmB9Q,4DAAU,CAACoG,CAAC,CAAC2K,aAAH,EAAkB7Q,+CAAlB,CAA7B,CA/Je,CAiKf;;AACArJ,MAAE,UAAF,CAAUuP,CAAC,CAACE,IAAF,GAAS,OAAnB,EAA4BzP,EAAE,CAACmU,YAAH,KAAoB,MAAKxT,UAArD,EAAiE,IAAjE,EACI,MADJ;;AAGA,UAAKM,MAAL;;AArKe;AAsKlB;AAED;;;;;;;2BAGO;AAAA;;AACH,UAAI,KAAKC,WAAT,EAAsB;AAClB;AACH;;AAED,WAAKM,OAAL,CAAasF,IAAb,CAAkB,wBAAlB,EAA4C,IAA5C,EACI,CAACuO,qDAAM,CAAC,KAAK2D,QAAN,CADX;AAGA,WAAKmB,OAAL;AAEA;;AACA,WAAKjZ,WAAL,GAAmB,IAAnB;AAEA,WAAKM,OAAL,CAAaC,EAAb,CAAgB,CAAC,cAAD,CAAhB,EAAkC,UAACzB,EAAD,EAAKoa,OAAL;AAAA,eAAiB,MAAI,CAACC,IAAL,CAAUD,OAAV,CAAjB;AAAA,OAAlC;AACA,WAAK5Y,OAAL,CAAasF,IAAb,CAAkB,gCAAlB,EAAoD,KAAK9G,EAAzD,EAA6D,IAA7D;AACA,WAAKwB,OAAL,CAAasF,IAAb,CAAkB,uBAAlB,EAA2C,IAA3C;AACH;AAED;;;;;;8BAGU;AAAA;;AACN,UAAI9G,EAAE,GAAG,KAAKA,EAAd;AACA,UAAI4V,IAAI,GAAGC,sDAAS,CAAC,MAAD,CAApB;AACAD,UAAI,CAACE,SAAL,GAAiB,KAAKpE,YAAtB,CAHM,CAKN;;AACA,UAAIqE,QAAQ,GAAG,CAAC,KAAKiD,QAAN,GACXhZ,EAAE,CAAC8E,OAAH,CAAW,SAAX,EAAsBkR,SAAtB,CAAgC,KAAKrD,eAArC,CADW,GAEXvE,gDAAG,CAAC,KAAK4K,QAAN,CAFP;;AAIA,UAAI,CAAC,KAAKA,QAAV,EAAoB;AAChB,YAAIrK,UAAU,GAAGoH,QAAQ,CAACpH,UAA1B;AACAA,kBAAU,CAACtK,UAAX,CAAsB4R,YAAtB,CAAmCL,IAAnC,EAAyCjH,UAAzC;AACH,OAHD,MAGO;AACHoH,gBAAQ,CAACG,WAAT,CAAqBN,IAArB;AACH;;AAED,UAAIO,GAAJ;;AACA,UAAI,CAAC,KAAKrF,OAAV,EAAmB;AACfqF,WAAG,GAAGN,sDAAS,CAAC,GAAD,EAAM,CAAC,MAAD,EAAS,qBAAT,CAAN,CAAf;AACAM,WAAG,CAACL,SAAJ,GAAgB,KAAK9E,WAArB;AACAmF,WAAG,CAACC,KAAJ,GAAY,KAAKxF,OAAL,IAAgB,KAAKmI,WAAjC;AACA5C,WAAG,CAAC3H,SAAJ,GAAgB,KAAK4K,eAArB;AACAxD,YAAI,CAACM,WAAL,CAAiBC,GAAjB;AACH,OAND,MAMO;AAAE;AACLP,YAAI,CAACpH,SAAL,GAAiB,KAAKsC,OAAtB;AACAqF,WAAG,GAAGP,IAAI,CAACjH,UAAX;AACH;;AAED+F,2DAAM,CAACyB,GAAD,EAAM,OAAN,EAAe;AAAA,eAAM,MAAI,CAAChO,MAAL,EAAN;AAAA,OAAf,CAAN;AAEA,WAAKyH,MAAL,GAAcgG,IAAd;AACA,WAAKjG,KAAL,GAAawG,GAAb;;AAEA,UAAI,CAAC,KAAKsD,cAAV,EAA0B;AACtB,aAAKtR,MAAL;AACH;AACJ;AAED;;;;;;6BAGS;AACL,UAAInI,EAAE,GAAG,KAAKA,EAAd;AACA,UAAIwW,GAAG,GAAGxW,EAAE,CAACe,UAAH,GAAgBf,EAAE,CAAC8E,OAAH,CAAW,YAAX,EAAyBoP,OAAzC,GAAmDlU,EAAE,CAAC8B,GAAH,EAA7D;AACA,UAAIwY,MAAM,GAAG9D,GAAG,CAAChT,IAAJ,CAAS,KAAK8V,eAAd,CAAb;AACA,UAAIiB,WAAW,GAAGD,MAAM,CAAClO,KAAP,CAAaC,OAAb,KAAyB,EAA3C;AAEA,WAAKgO,IAAL,CAAU,CAACE,WAAX;AACH;AAED;;;;;;;;2BAKqB;AAAA,UAAhBH,OAAgB,uEAAN,IAAM;AACjB,UAAIpa,EAAE,GAAG,KAAKA,EAAd;AACA,UAAIwW,GAAG,GAAGxW,EAAE,CAACe,UAAH,GAAgBf,EAAE,CAAC8E,OAAH,CAAW,YAAX,EAAyBoP,OAAzC,GAAmDlU,EAAE,CAAC8B,GAAH,EAA7D;AACA,UAAIwY,MAAM,GAAG9D,GAAG,CAAChT,IAAJ,CAAS,KAAK8V,eAAd,CAAb;;AAEA,UAAIc,OAAJ,EAAa;AACT,aAAKT,YAAL,CAAkB,IAAlB;AACH;;AACD,UAAI,CAACS,OAAL,EAAc;AACV,aAAKL,YAAL,CAAkB,IAAlB;AACH;;AAEDO,YAAM,CAAClO,KAAP,CAAaC,OAAb,GAAuB+N,OAAO,GAAG,EAAH,GAAQ,MAAtC;;AACA,UAAI,KAAKlB,UAAL,IAAmB,CAAC,KAAKpI,OAA7B,EAAsC;AAClC,aAAKnB,KAAL,CAAWnB,SAAX,GAAuB4L,OAAO,GAC1B,KAAKhB,eADqB,GACH,KAAKC,aADhC;AAEH;;AAED,UAAIe,OAAJ,EAAa;AACT,aAAKP,WAAL,CAAiB,IAAjB;AACH;;AACD,UAAI,CAACO,OAAL,EAAc;AACV,aAAKH,WAAL,CAAiB,IAAjB;AACH;;AAED,WAAKzY,OAAL,CAAasF,IAAb,CAAkB,iBAAlB,EAAqC9G,EAArC,EAAyC,IAAzC,EAA+Coa,OAA/C;AACH;AAED;;;;;;8BAGU;AAAA;;AACN,UAAI,CAAC,KAAKlZ,WAAV,EAAuB;AACnB;AACH;;AAED,WAAKM,OAAL,CAAa4G,GAAb,CAAiB,CAAC,cAAD,CAAjB,EAAmC,UAACpI,EAAD,EAAKoa,OAAL;AAAA,eAAiB,MAAI,CAACC,IAAL,CAAUD,OAAV,CAAjB;AAAA,OAAnC;AAEA,WAAKzK,KAAL,CAAWnB,SAAX,GAAuB,EAAvB;AACAoJ,4DAAS,CAAC,KAAKjI,KAAN,CAAT;AACA,WAAKA,KAAL,GAAa,IAAb;AAEA,WAAKC,MAAL,CAAYpB,SAAZ,GAAwB,EAAxB;AACAoJ,4DAAS,CAAC,KAAKhI,MAAN,CAAT;AACA,WAAKA,MAAL,GAAc,IAAd;AACA,WAAK1O,WAAL,GAAmB,KAAnB;AACH;;;;EA7S0CmH,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ/C;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;;;;IAGqBmS,oB;;;;;AAEjB;;;;;AAKA,gCAAYxa,EAAZ,EAAgBiJ,IAAhB,EAAsB;AAAA;;AAAA;;AAClB,8FAAMjJ,EAAN,EAAUwa,oBAAV;AAEA;;;;;AAIA,UAAK/K,IAAL,GAAYxG,IAAI,CAACwG,IAAjB;AAEA;;;;;AAIA,UAAKvP,IAAL,GAAYC,6DAAW,CAAC8I,IAAI,CAAC7I,WAAN,EAAmB,gBAAnB,CAAvB;AAEA;;;;;;AAKA,UAAKqa,MAAL,GAAc,KAAd;AAEA;;;;;AAIA,UAAKC,SAAL,GAAiBjR,6DAAW,CAACR,IAAI,CAAC0R,KAAN,EAAa3a,EAAE,CAACkP,QAAhB,CAA5B;AAEA;;;;;;AAKA,UAAK0L,cAAL,GAAsBnR,6DAAW,CAACR,IAAI,CAAC4R,iBAAN,EAAyB,IAAzB,CAAjC;AAEA;;;;;AAIA,UAAKC,SAAL,GAAiBra,OAAO,CAACwI,IAAI,CAAC8R,UAAN,CAAxB;AAEA;;;;;AAIA,UAAKC,UAAL,GAAkBvR,6DAAW,CAACR,IAAI,CAACgS,WAAN,EAAmB,EAAnB,CAA7B,CA7CkB,CA+ClB;AACA;;AACA;;;;;AAIA,UAAKC,OAAL,GAAe/a,6DAAW,CAAC8I,IAAI,CAACkS,WAAN,EAAmBnb,EAAE,CAAC6Y,UAAtB,CAA1B;AAEA;;;;;AAIA,UAAKuC,QAAL,GAAgBjb,6DAAW,CAAC8I,IAAI,CAACoS,WAAN,EAAmB,WAAnB,CAA3B;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoBnb,6DAAW,CAAC8I,IAAI,CAACsS,gBAAN,EAAwB,YAAxB,CAA/B;AAEA;;;;;AAIA,UAAKC,eAAL,GAAuBrb,6DAAW,CAAC8I,IAAI,CAACwS,oBAAN,EAC9B,WAD8B,CAAlC;AAGA;;;;;AAIA,UAAKC,gBAAL,GAAwBvb,6DAAW,CAAC8I,IAAI,CAAC0S,qBAAN,EAC/B,YAD+B,CAAnC;AAGA;;;;;AAIA,UAAKC,SAAL,GAAiBzb,6DAAW,CAAC8I,IAAI,CAAC4S,UAAN,EAAkB,iBAAlB,CAA5B;AAEA;;;;;AAIA,UAAKC,YAAL,GAAoB3S,4DAAU,CAACF,IAAI,CAAC8S,cAAN,EAAsB1S,+CAAtB,CAA9B;AAEA;;;;;AAIA,UAAK2S,YAAL,GAAoB7S,4DAAU,CAACF,IAAI,CAACgT,cAAN,EAAsB5S,+CAAtB,CAA9B;AAEA;;;;;AAIA,UAAK6S,WAAL,GAAmB/S,4DAAU,CAACF,IAAI,CAACkT,aAAN,EAAqB9S,+CAArB,CAA7B;AAEA;;;;;AAIA,UAAK+S,GAAL,GAAW,IAAX;;AAEA,UAAKnb,MAAL;;AA/GkB;AAgHrB;AAED;;;;;;;2BAGO;AACH,UAAI,KAAKC,WAAT,EAAsB;AAClB;AACH;;AACD,UAAIlB,EAAE,GAAG,KAAKA,EAAd;AACA,UAAIqc,IAAI,GAAG,IAAX,CALG,CAOH;;AACA,UAAI5E,sDAAO,CAAC6E,aAAD,CAAX,EAA4B;AACxB,cAAM,IAAI9U,KAAJ,CAAU,gCAAV,CAAN;AACH,OAVE,CAYH;;;AACA,WAAKhG,OAAL,CAAasF,IAAb,CAAkB,uBAAlB,EAA2C,KAAK9G,EAAhD,EAAoD,KAAK0a,SAAzD;AAEA,WAAK6B,qBAAL;AACA,WAAKC,YAAL;AAEA,WAAKV,YAAL,CAAkB9b,EAAlB,EAAsB,IAAtB;AAEA;;AACA,WAAKoc,GAAL,CAASK,YAAT,GAAwB,YAAY;AAChCJ,YAAI,CAACL,YAAL,CAAkBhc,EAAlB,EAAsBqc,IAAI,CAACD,GAAL,CAASM,UAA/B;AAEA;;AACA,YAAI1c,EAAE,CAAC6E,MAAP,EAAe;AACX7E,YAAE,CAAC8E,OAAH,CAAW,QAAX,EAAqB6X,OAArB;AACH;AACJ,OAPD;;AASA,WAAKP,GAAL,CAASQ,MAAT,GAAkB,YAAY;AAC1BP,YAAI,CAAC5B,MAAL,GAAc,IAAd,CAD0B,CAG1B;;AACA,YAAIza,EAAE,CAAC6E,MAAP,EAAe;AACX,cAAIgY,SAAS,GAAG7c,EAAE,CAAC8E,OAAH,CAAW,QAAX,CAAhB,CADW,CAEX;;AACA9E,YAAE,CAAC8c,YAAH,CAAgB,IAAhB;AACAD,mBAAS,CAAC5b,MAAV;AACA4b,mBAAS,CAACnX,OAAV,CAAkBmX,SAAS,CAACE,OAAV,EAAlB;AACH;;AAEDV,YAAI,CAACH,WAAL,CAAiBlc,EAAjB,EAAqBqc,IAAI,CAACD,GAAL,CAASM,UAA9B,EAA0CL,IAAI,CAACD,GAAL,CAASY,UAAnD;AACAX,YAAI,CAAC7a,OAAL,CAAasF,IAAb,CAAkB,eAAlB,EAAmC9G,EAAnC,EAAuCqc,IAAI,CAACD,GAAL,CAASM,UAAhD,EACIL,IAAI,CAACD,GAAL,CAASY,UADb;AAEH,OAfD,CA9BG,CA+CH;;;AACA,UAAIpC,cAAc,GAAGyB,IAAI,CAACzB,cAA1B;;AACA,UAAIA,cAAJ,EAAoB;AAChB,aAAKwB,GAAL,CAASpO,IAAT,CAAc4M,cAAc,CAAC,CAAD,CAA5B,EAAiCA,cAAc,CAAC,CAAD,CAA/C;AACH;;AAED,WAAKpZ,OAAL,CAAaC,EAAb,CAAgB,CAAC,MAAD,CAAhB,EAA0B+I,oDAAK,CAAC,KAAKyS,wBAAN,EAAgC,IAAhC,CAA/B;AAEA;;AACA,WAAK/b,WAAL,GAAmB,IAAnB;AAEA,WAAKM,OAAL,CAAasF,IAAb,CAAkB,kBAAlB,EAAsC9G,EAAtC,EAA0C,IAA1C;AACH;AAED;;;;;;;;sCAKkBmY,M,EAAQjY,I,EAAM;AAC5B,WAAKkc,GAAL,CAASpO,IAAT,CAAcmK,MAAd,EAAsBjY,IAAtB;AACH;AAED;;;;6CACyBF,E,EAAImY,M,EAAQjY,I,EAAM;AACvC,WAAKgd,iBAAL,CAAuB/E,MAAvB,EAA+BjY,IAA/B;AACH;AAED;;;;;;4CAGwB;AACpB,UAAImc,IAAI,GAAG,IAAX;AAAA,UACIrc,EAAE,GAAG,KAAKA,EADd;AAGA;;;;;AAIAsc,mBAAa,CAACa,SAAd,CAAwBC,aAAxB,GAAwC,UAAUhJ,GAAV,EAAe;AACnD,YAAI,CAACiI,IAAI,CAACnb,WAAV,EAAuB;AACnB;AACH,SAHkD,CAKnD;;;AACA,YAAImc,EAAE,GAAGjJ,GAAG,CAACkJ,MAAJ,IAAclJ,GAAG,CAACmJ,UAA3B;;AAEA,eAAOF,EAAE,CAACG,OAAH,KAAeC,+CAAf,IAA2BJ,EAAE,CAACG,OAAH,KAAeE,iDAAjD,EAA6D;AACzDL,YAAE,GAAGA,EAAE,CAAChZ,UAAR;AACH;;AAED,aAAK2J,IAAL,CACIsO,aAAa,CAACqB,IAAd,GACIrB,aAAa,CAACsB,YAAd,CAA2BP,EAA3B,CADJ,GACqCA,EAAE,CAAC/Z,SAF5C;AAIH,OAhBD;AAkBA;;;;;;;;AAMAgZ,mBAAa,CAACsB,YAAd,GAA6B,UAAUC,GAAV,EAAe;AACxC,YAAIna,KAAK,GAAGma,GAAG,CAACxZ,UAAJ,CAAeX,KAA3B;AAAA,YACIoa,CAAC,GAAGpa,KAAK,CAAC3B,MADd;AAAA,YACsBgK,CADtB;;AAEA,aAAKA,CAAC,GAAG,CAAT,EAAYrI,KAAK,CAACqI,CAAD,CAAL,KAAa8R,GAAb,IAAoB9R,CAAC,GAAG+R,CAApC,EAAuC/R,CAAC,EAAxC,EAA4C,CAAG;;AAC/C,eAAOA,CAAP;AACH,OALD;AAOA;;;;;;AAIAuQ,mBAAa,CAACa,SAAd,CAAwBY,UAAxB,GAAqC,UAAUC,UAAV,EAAsB;AACvD,YAAI5B,GAAG,GAAG,IAAV;;AACA,YAAI,CAACA,GAAG,CAAC6B,KAAT,EAAgB;AACZ,cAAIje,EAAE,CAACe,UAAP,EAAmB;AACfqb,eAAG,CAAC6B,KAAJ,GAAYje,EAAE,CAAC8E,OAAH,CAAW,YAAX,EAAyBoP,OAAzB,CAAiC+J,KAA7C;AACH,WAFD,MAEO;AACH;AACH;AACJ;;AAED7B,WAAG,CAAC8B,UAAJ,GAAiBle,EAAE,CAACke,UAApB;AACA,YAAIxa,KAAK,GAAG0Y,GAAG,CAAC6B,KAAJ,CAAUza,IAAV,CAAe4Y,GAAG,CAAC8B,UAAnB,EAA+Bxa,KAA3C;AACA0Y,WAAG,CAAC1B,SAAJ,GAAgBsD,UAAU,IAAI,EAA9B;AACA,YAAIF,CAAC,GAAGpa,KAAK,CAAC3B,MAAd;AACA,YAAIoc,GAAJ,EAASC,CAAT;;AAEA,aAAK,IAAIrS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+R,CAApB,EAAuB/R,CAAC,EAAxB,EAA4B;AACxBqS,WAAC,GAAG1a,KAAK,CAACqI,CAAD,CAAT;;AACA,cAAIqQ,GAAG,CAAC1B,SAAJ,CAAc3O,CAAd,MAAqB,IAArB,IAA6BqQ,GAAG,CAAC1B,SAAJ,CAAc3O,CAAd,MAAqB,MAAtD,EAA8D;AAC1DqS,aAAC,CAAChS,KAAF,CAAQiS,MAAR,GAAiB,SAAjB;AACAF,eAAG,GAAGtI,sDAAS,CAAC,KAAD,EACX,CAAC,KAAD,EAAQwG,IAAI,CAACnB,OAAL,GAAemB,IAAI,CAACjB,QAA5B,CADW,CAAf;AAEAgD,aAAC,CAAClI,WAAF,CAAciI,GAAd;;AACA,gBAAI/B,GAAG,CAAC1B,SAAJ,CAAc3O,CAAd,MAAqB,IAAzB,EAA+B;AAC3BqS,eAAC,CAACE,YAAF,CAAe,WAAf,EAA4BlC,GAAG,CAAC1B,SAAJ,CAAc3O,CAAd,CAA5B;AACH;;AACD2I,iEAAM,CAAC0J,CAAD,EAAI,OAAJ,EAAahC,GAAG,CAACmC,cAAjB,CAAN;AACH,WATD,MASO;AACHH,aAAC,CAACE,YAAF,CAAe,WAAf,EAA4BN,UAAU,CAACjS,CAAD,CAAtC;AACAqS,aAAC,CAACI,SAAF,GAAc,MAAd;AACH;AACJ;;AACDpC,WAAG,CAACqC,kBAAJ;AACH,OAjCD;AAmCA;;;;;AAGAnC,mBAAa,CAACa,SAAd,CAAwBsB,kBAAxB,GAA6C,YAAY;AACrD,YAAIrC,GAAG,GAAG,IAAV;AACA,YAAI1Y,KAAJ,EAAWoa,CAAX,EAAcK,GAAd,CAFqD,CAIrD;;AACA,YAAI9B,IAAI,CAACvB,SAAL,IAAkBuB,IAAI,CAACrB,UAAL,CAAgBjZ,MAAhB,GAAyB,CAA/C,EAAkD;AAC9C,cAAI2c,QAAQ,GAAGrC,IAAI,CAACrB,UAApB;AACAtX,eAAK,GAAG,EAAR;AACAoa,WAAC,GAAGY,QAAQ,CAAC3c,MAAb;;AACA,eAAK,IAAI4c,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,CAApB,EAAuBa,CAAC,EAAxB,EAA4B;AACxBjb,iBAAK,CAACqH,IAAN,CAAWqD,gDAAG,CAACsQ,QAAQ,CAACC,CAAD,CAAT,CAAd;AACH;AACJ,SAPD,MAOO;AACH,cAAI,CAAC,KAAKV,KAAV,EAAiB;AACb;AACH;;AACDva,eAAK,GAAG0Y,GAAG,CAAC6B,KAAJ,CAAUza,IAAV,CAAe4Y,GAAG,CAAC8B,UAAnB,EAA+Bxa,KAAvC;AACAoa,WAAC,GAAGpa,KAAK,CAAC3B,MAAV;AACH;;AACD,aAAK,IAAIgK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+R,CAApB,EAAuB/R,CAAC,EAAxB,EAA4B;AACxB,cAAIhI,IAAI,GAAGL,KAAK,CAACqI,CAAD,CAAhB;;AACA,cAAI,CAAChI,IAAL,EAAW;AACP;AACH;;AACD,cAAI6a,QAAQ,GAAG7a,IAAI,CAACgR,YAAL,CAAkB,WAAlB,CAAf;;AACA,cAAI6J,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,MAAtC,EAA8C;AAC1CT,eAAG,GAAGpa,IAAI,CAAC8a,SAAL,IAAkB9a,IAAxB;;AACA,gBAAIoa,GAAG,CAAC7Z,QAAJ,CAAasH,WAAb,OAA+B,KAAnC,EAA0C;AACtCuS,iBAAG,GAAGtI,sDAAS,CAAC,KAAD,EACX,CAAC,KAAD,EAAQwG,IAAI,CAACnB,OAAL,GAAemB,IAAI,CAACjB,QAA5B,CADW,CAAf;AAEArX,kBAAI,CAACmS,WAAL,CAAiBiI,GAAjB;AACH;;AACD,gBAAIpS,CAAC,KAAKqQ,GAAG,CAACM,UAAd,EAA0B;AACtByB,iBAAG,CAACrI,SAAJ,GAAgBuG,IAAI,CAACf,YAAL,GAAoB,GAApB,IACX,KAAK0B,UAAL,GACGX,IAAI,CAACX,gBADR,GAEGW,IAAI,CAACb,eAHG,CAAhB;AAIH,aALD,MAKO;AACH2C,iBAAG,CAACrI,SAAJ,GAAgBuG,IAAI,CAACf,YAArB;AACH;AACJ;AACJ;AACJ,OA1CD;AA4CA;;;;;;;;;AAOAgB,mBAAa,CAACa,SAAd,CAAwB2B,WAAxB,GAAsC,UAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAClE,YAAI7C,GAAG,GAAG,IAAV,CADkE,CAElE;;AACA,YAAI8C,YAAY,GAAG9C,GAAG,CAAC+C,aAAJ,CAAkBH,KAAlB,CAAnB;;AACA,YAAIE,YAAY,IAAIA,YAAY,CAACJ,WAAjC,EAA8C;AAC1C,iBAAOI,YAAY,CAACJ,WAAb,CAAyBC,IAAzB,EAA+BE,OAA/B,CAAP;AACH;;AACD,YAAIb,CAAC,GAAGW,IAAI,CAACrb,KAAL,CAAWub,OAAX,CAAR;AACA,YAAIG,CAAC,GAAG9C,aAAa,CAAC+C,YAAd,CAA2BjB,CAA3B,CAAR;AACA,eAAOhC,GAAG,CAACkD,kBAAJ,CAAuBF,CAAvB,EAA0BJ,KAA1B,CAAP;AACH,OAVD;AAYA;;;;;;;;AAMA1C,mBAAa,CAAC+C,YAAd,GAA6B,UAAUtb,IAAV,EAAgB;AACzC,YAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,YAAIA,IAAI,CAACgR,YAAL,CAAkBsH,IAAI,CAACT,SAAvB,CAAJ,EAAuC;AACnC,iBAAO7X,IAAI,CAACgR,YAAL,CAAkBsH,IAAI,CAACT,SAAvB,CAAP;AACH,SAFD,MAEO;AACH,iBAAO5b,EAAE,CAACuf,YAAH,CAAgBxb,IAAhB,CAAP;AACH;AACJ,OATD;AAUH;AAED;;;;;;kCAGqB;AAAA,wCAANmC,IAAM;AAANA,YAAM;AAAA;;AACjB;AADiB,UAEZoB,EAFY,GAEuBpB,IAFvB;AAAA,UAERsZ,MAFQ,GAEuBtZ,IAFvB;AAAA,UAEA6H,MAFA,GAEuB7H,IAFvB;AAAA,UAEQ4Y,WAFR,GAEuB5Y,IAFvB;AAGjBoW,mBAAa,CAACa,SAAd,CAAwBsC,WAAxB,CAAoCnY,EAApC,EAAwCkY,MAAxC,EAAgDzR,MAAhD,EAAwD+Q,WAAxD;AACH;AAED;;;;;;;mCAIe;AAAA;;AACX,UAAI9e,EAAE,GAAG,KAAKA,EAAd;AAAA,UACI0a,SAAS,GAAG,KAAKA,SADrB;AAAA,UAEIgF,UAAU,GAAG,EAFjB;AAIA1f,QAAE,CAAC2f,OAAH,CAAW,UAAC5T,CAAD,EAAO;AACd,YAAIkD,OAAJ;;AACA,YAAIyL,SAAS,CAAC3O,CAAD,CAAb,EAAkB;AACdkD,iBAAO,GAAGyL,SAAS,CAAC3O,CAAD,CAAnB;;AACA,cAAI6T,oDAAK,CAAC3Q,OAAD,CAAT,EAAoB;AAChB,gBAAIA,OAAO,CAAC4Q,IAAR,KAAiBC,2CAArB,EAA2B;AACvB7Q,qBAAO,GAAG,MAAI,CAAC8Q,YAAL,CAAkBhU,CAAlB,EAAqB2O,SAArB,CAAV;AACH,aAFD,MAGK,IAAIzL,OAAO,CAAC4Q,IAAR,KAAiB7Q,uDAArB,EAAuC;AACxC,kBAAIG,OAAO,GAAGF,OAAO,CAACE,OAAR,IAAmBnP,EAAE,CAACggB,gBAApC;AACA/Q,qBAAO,GAAG,MAAI,CAACgR,cAAL,CAAoBlU,CAApB,EAAuBoD,OAAvB,CAAV;AACH;AACJ,WARD,MAQO;AACHF,mBAAO,GAAGA,OAAO,CAACrD,WAAR,EAAV;;AACA,gBAAIqD,OAAO,KAAK6Q,2CAAhB,EAAsB;AAClB7Q,qBAAO,GAAG,MAAI,CAAC8Q,YAAL,CAAkBhU,CAAlB,EAAqB2O,SAArB,CAAV;AACH,aAFD,MAGK,IAAIzL,OAAO,KAAKD,uDAAZ,IACLC,OAAO,KAAKiR,6CADX,EACmB;AACpBjR,qBAAO,GAAG,MAAI,CAACgR,cAAL,CAAoBlU,CAApB,EAAuB/L,EAAE,CAACggB,gBAA1B,CAAV;AACH,aAHI,MAIA,IAAI/Q,OAAO,KAAKwF,2CAAhB,EAAsB;AACvB;AACAxF,qBAAO,GAAG,MAAV;AACH;AACJ;AACJ,SAxBD,MAwBO;AACHA,iBAAO,GAAGkR,6CAAV;AACH;;AACDT,kBAAU,CAAC3U,IAAX,CAAgBkE,OAAhB;AACH,OA9BD,EALW,CAqCX;AAEA;;AACA,WAAKwQ,WAAL,CAAiB,uBAAjB,EAA0CnD,aAAa,CAAC8D,WAAxD;AACA,WAAKX,WAAL,CAAiBU,6CAAjB;AACA,WAAKV,WAAL,CAAiBY,iDAAjB,EAA6BC,SAA7B,EAAwCC,MAAxC;AAEA,WAAKnE,GAAL,GAAW,IAAIE,aAAJ,CAAkBtc,EAAE,CAAC8B,GAAH,EAAlB,EAA4B4d,UAA5B,CAAX;AAEA;;AACA,UAAI,KAAK5E,SAAL,IAAkB,KAAKE,UAAL,CAAgBjZ,MAAhB,GAAyB,CAA/C,EAAkD;AAAA;AAC9C,cAAI2c,QAAQ,GAAG,MAAI,CAAC1D,UAApB;;AACA,eAAK,IAAI2D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAAC3c,MAA7B,EAAqC4c,CAAC,EAAtC,EAA0C;AACtC,gBAAID,QAAQ,CAACC,CAAD,CAAR,KAAgB,IAApB,EAA0B;AACtB;AACH;;AACD,gBAAI6B,OAAO,GAAGpS,gDAAG,CAACsQ,QAAQ,CAACC,CAAD,CAAT,CAAjB;;AACA,gBAAI6B,OAAJ,EAAa;AACTA,qBAAO,CAACpU,KAAR,CAAciS,MAAd,GAAuB,SAAvB;AAEA3J,mEAAM,CAAC8L,OAAD,EAAU,OAAV,EAAmB,UAACpM,GAAD,EAAS;AAC9B,oBAAIhG,GAAG,GAAGgG,GAAG,CAACkJ,MAAd;;AACA,oBAAI,CAAC,MAAI,CAACtd,EAAL,CAAQgO,IAAb,EAAmB;AACf;AACH;;AACD,sBAAI,CAACoO,GAAL,CAAStB,SAAT,CAAmB4D,QAAQ,CAAC/Z,OAAT,CAAiByJ,GAAG,CAAC9G,EAArB,CAAnB;AACH,eANK,CAAN;AAOAkZ,qBAAO,CAAClC,YAAR,CAAqB,WAArB,EAAkCoB,UAAU,CAACf,CAAD,CAA5C;AACH;AACJ;AAnB6C;AAoBjD;AACJ;;;iCAEY7W,Q,EAAU6S,K,EAAO;AAC1B,UAAI3a,EAAE,GAAG,KAAKA,EAAd;AACA,UAAIygB,QAAQ,GAAGzgB,EAAE,CAAC8E,OAAH,CAAW,UAAX,CAAf;AACA,UAAI4b,MAAM,GAAGD,QAAQ,CAACE,UAAT,CAAoB7Y,QAApB,EAA8B6S,KAA9B,EAAqC+F,MAArC,IAA+C1gB,EAAE,CAAC0gB,MAA/D;AACA,UAAIzR,OAAO,aAAM6Q,2CAAN,cAAcY,MAAd,CAAX;AAEA,WAAKjB,WAAL,CAAiBxQ,OAAjB,EAA0B,UAACR,KAAD,EAAW;AACjC,YAAImS,UAAU,GAAGH,QAAQ,CAACI,KAAT,CAAepS,KAAf,EAAsBiS,MAAtB,CAAjB,CADiC,CAEjC;;AACA,eAAOrS,KAAK,CAAC,CAACuS,UAAF,CAAL,GAAqB,IAAIE,IAAJ,CAAS,CAAC,cAAV,CAArB,GAAiDF,UAAxD;AACH,OAJD;AAKA,aAAO3R,OAAP;AACH;;;mCAEcnH,Q,EAAUqH,O,EAAS;AAC9B,UAAIF,OAAO,aAAMD,uDAAN,SAAyBG,OAAO,KAAK,GAAZ,GAAkB,EAAlB,GAAuB,SAAhD,CAAX;AAEA,WAAKsQ,WAAL,CAAiBxQ,OAAjB,EAA0B,UAACR,KAAD,EAAW;AACjC,eAAOsS,qDAAO,CAACtS,KAAD,EAAQU,OAAR,CAAd;AACH,OAFD;AAGA,aAAOF,OAAP;AACH;AAED;;;;;;8BAGU;AACN,UAAI,CAAC,KAAK/N,WAAV,EAAuB;AACnB;AACH;;AACD,UAAIlB,EAAE,GAAG,KAAKA,EAAd;AACA,WAAKwB,OAAL,CAAa4G,GAAb,CAAiB,CAAC,MAAD,CAAjB,EAA2BoC,oDAAK,CAAC,KAAKyS,wBAAN,EAAgC,IAAhC,CAAhC;AACA,WAAKxC,MAAL,GAAc,KAAd;AACA,WAAK2B,GAAL,CAASrV,OAAT;AAEA,UAAIia,GAAG,GAAGhhB,EAAE,CAACihB,YAAH,EAAV;;AACA,WAAK,IAAIvV,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGsV,GAAG,CAACjf,MAA5B,EAAoC2J,GAAG,EAAvC,EAA2C;AACvC,YAAIwV,MAAM,GAAGlhB,EAAE,CAACmhB,gBAAH,CAAoBzV,GAApB,CAAb;AACA,YAAIyS,GAAG,GAAGtc,gDAAG,CAACqf,MAAD,EAAS,KAAT,CAAb;;AAEA,YAAI/C,GAAG,CAACpc,MAAJ,KAAe,CAAnB,EAAsB;AAClBmf,gBAAM,CAACE,WAAP,CAAmBjD,GAAG,CAAC,CAAD,CAAtB;AACH;AACJ;;AACD,WAAKjd,WAAL,GAAmB,KAAnB;AACH;;;;EA5e6CmH,gD;;;AAgflDmS,oBAAoB,CAAClS,IAArB,GAA4B;AAACC,SAAO,EAAE;AAAV,CAA5B,C,CAEA;;AACA,SAAS+X,SAAT,CAAmB7R,KAAnB,EAA0B;AACtB,MAAI4S,IAAI,GAAG5S,KAAK,CAACuG,KAAN,CAAY,GAAZ,CAAX,CADsB,CAEtB;;AACA,OAAK,IAAI5H,CAAT,IAAciU,IAAd,EAAoB;AAChB,QAAIvW,GAAG,GAAGuW,IAAI,CAACjU,CAAD,CAAd;;AACA,WAAO,IAAItC,GAAG,CAAC/I,MAAf,EAAuB;AACnB+I,SAAG,GAAG,MAAMA,GAAZ;AACH;;AACDuW,QAAI,CAACjU,CAAD,CAAJ,GAAUtC,GAAV;AACH;;AACD,SAAOuW,IAAI,CAACC,IAAL,CAAU,GAAV,CAAP;AACH;;AAED,SAASf,MAAT,CAAgBgB,CAAhB,EAAmBC,CAAnB,EAAsB;AAClB,MAAIC,EAAE,GAAGnB,SAAS,CAACiB,CAAC,CAAC9S,KAAF,CAAQ7C,WAAR,EAAD,CAAlB;AACA,MAAI8V,EAAE,GAAGpB,SAAS,CAACkB,CAAC,CAAC/S,KAAF,CAAQ7C,WAAR,EAAD,CAAlB;;AACA,MAAI6V,EAAE,KAAKC,EAAX,EAAe;AACX,WAAO,CAAP;AACH,GAFD,MAEO,IAAID,EAAE,GAAGC,EAAT,EAAa;AAChB,WAAO,CAAC,CAAR;AACH,GAFM,MAEA;AACH,WAAO,CAAP;AACH;AACJ,C;;;;;;;;;;;;ACxhBD;AAAA;AAAA;AAAA;AACA;;AAEA,IAAI,CAACvgB,0CAAI,CAACmb,aAAV,EAAyB;AACrBqF,qBAAO,CAAC,kGAAD,CAAP;AACH;;AAEcnH,4HAAf,E","file":"tf-0-e9d0316c2fa3401a7cae.js","sourcesContent":["\nmodule.exports = formatter;\nmodule.exports.default = formatter;\n\nfunction formatter(options) {\n  options = options || {};\n\n\n  // *********************************************************************************************\n  // Set defaults for negatives\n  // options.negative, options.negativeOut, options.separator retained for backward compatibility\n  // *********************************************************************************************\n\n  // type of negative; default left\n  options.negativeType = options.negativeType || (options.negative === 'R' ? 'right' : 'left')\n\n  // negative symbols '-' or '()'\n  if (typeof options.negativeLeftSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'left':\n        options.negativeLeftSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeLeftSymbol = '(';\n        break;\n      default:\n        options.negativeLeftSymbol = '';\n    }\n  }\n  if (typeof options.negativeRightSymbol !== 'string') {\n    switch (options.negativeType) {\n      case 'right':\n        options.negativeRightSymbol = '-';\n        break;\n      case 'brackets':\n        options.negativeRightSymbol = ')';\n        break;\n      default:\n        options.negativeRightSymbol = '';\n    }\n  }\n\n  // whether negative symbol should be inside/outside prefix and suffix\n\n  if (typeof options.negativeLeftOut !== \"boolean\") {\n    options.negativeLeftOut = (options.negativeOut === false ? false : true);\n  }\n  if (typeof options.negativeRightOut !== \"boolean\") {\n    options.negativeRightOut = (options.negativeOut === false ? false : true);\n  }\n\n  //prefix and suffix\n  options.prefix = options.prefix || '';\n  options.suffix = options.suffix || '';\n\n  //separators\n  if (typeof options.integerSeparator !== 'string') {\n    options.integerSeparator = (typeof options.separator === 'string' ? options.separator : ',');\n  }\n  options.decimalsSeparator = typeof options.decimalsSeparator === 'string' ? options.decimalsSeparator : '';\n  options.decimal = options.decimal || '.';\n\n  //padders\n  options.padLeft = options.padLeft || -1 //default no padding\n  options.padRight = options.padRight || -1 //default no padding\n\n  function format(number, overrideOptions) {\n    overrideOptions = overrideOptions || {};\n\n    if (number || number === 0) {\n      number = '' + number;//convert number to string if it isn't already\n    } else {\n      return '';\n    }\n\n    //identify a negative number and make it absolute\n    var output = [];\n    var negative = number.charAt(0) === '-';\n    number = number.replace(/^\\-/g, '');\n\n    //Prepare output with left hand negative and/or prefix\n    if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n    if (negative) {\n      output.push(options.negativeLeftSymbol);\n    }\n    if (options.negativeLeftOut && !overrideOptions.noUnits) {\n      output.push(options.prefix);\n    }\n\n    //Format core number\n    number = number.split('.');\n    if (options.round != null) round(number, options.round);\n    if (options.truncate != null) number[1] = truncate(number[1], options.truncate);\n    if (options.padLeft > 0) number[0] = padLeft(number[0], options.padLeft);\n    if (options.padRight > 0) number[1] = padRight(number[1], options.padRight);\n    if (!overrideOptions.noSeparator && number[1]) number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n    if (!overrideOptions.noSeparator && number[0]) number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n    output.push(number[0]);\n    if (number[1]) {\n      output.push(options.decimal);\n      output.push(number[1]);\n    }\n\n    //Prepare output with right hand negative and/or prefix\n    if (options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n    if (negative) {\n      output.push(options.negativeRightSymbol);\n    }\n    if (!options.negativeRightOut && !overrideOptions.noUnits) {\n      output.push(options.suffix);\n    }\n\n    //join output and return\n    return output.join('');\n  }\n\n  format.negative = options.negative;\n  format.negativeOut = options.negativeOut;\n  format.negativeType = options.negativeType;\n  format.negativeLeftOut = options.negativeLeftOut;\n  format.negativeLeftSymbol = options.negativeLeftSymbol;\n  format.negativeRightOut = options.negativeRightOut;\n  format.negativeRightSymbol = options.negativeRightSymbol;\n  format.prefix = options.prefix;\n  format.suffix = options.suffix;\n  format.separate = options.separate;\n  format.integerSeparator = options.integerSeparator;\n  format.decimalsSeparator = options.decimalsSeparator;\n  format.decimal = options.decimal;\n  format.padLeft = options.padLeft;\n  format.padRight = options.padRight;\n  format.truncate = options.truncate;\n  format.round = options.round;\n\n  function unformat(number, allowedSeparators) {\n    allowedSeparators = allowedSeparators || [];\n    if (options.allowedSeparators) {\n      options.allowedSeparators.forEach(function (s) { allowedSeparators.push (s); });\n    }\n    allowedSeparators.push(options.integerSeparator);\n    allowedSeparators.push(options.decimalsSeparator);\n    number = number.replace(options.prefix, '');\n    number = number.replace(options.suffix, '');\n    var newNumber = number;\n    do {\n      number = newNumber;\n      for (var i = 0; i < allowedSeparators.length; i++) {\n        newNumber = newNumber.replace(allowedSeparators[i], '');\n      }\n    } while (newNumber != number);\n    return number;\n  }\n  format.unformat = unformat;\n\n  function validate(number, allowedSeparators) {\n    number = unformat(number, allowedSeparators);\n    number = number.split(options.decimal);\n    if (number.length > 2) {\n      return false;\n    } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n      return false;\n    }  else if (options.round != null && number[1] && number[1].length > options.round) {\n      return false;\n    } else {\n      return /^-?\\d+\\.?\\d*$/.test(number);\n    }\n  }\n  return format;\n}\n\n//where x is already the integer part of the number\nfunction addIntegerSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is already the decimal part of the number\nfunction addDecimalSeparators(x, separator) {\n  x += '';\n  if (!separator) return x;\n  var rgx = /(\\d{3})(\\d+)/;\n  while (rgx.test(x)) {\n    x = x.replace(rgx, '$1' + separator + '$2');\n  }\n  return x;\n}\n\n//where x is the integer part of the number\nfunction padLeft(x, padding) {\n  x = x + '';\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return buf.join('') + x;\n}\n\n//where x is the decimals part of the number\nfunction padRight(x, padding) {\n  if (x) {\n    x += '';\n  } else {\n    x = '';\n  }\n  var buf = [];\n  while (buf.length + x.length < padding) {\n    buf.push('0');\n  }\n  return x + buf.join('');\n}\nfunction truncate(x, length) {\n  if (x) {\n    x += '';\n  }\n  if (x && x.length > length) {\n    return x.substr(0, length);\n  } else {\n    return x;\n  }\n}\n\n//where number is an array with 0th item as integer string and 1st item as decimal string (no negatives)\nfunction round(number, places) {\n  if (number[1] && places >= 0 && number[1].length > places) {\n    //truncate to correct number of decimal places\n    var decim = number[1].slice(0, places);\n    //if next digit was >= 5 we need to round up\n    if (+(number[1].substr(places, 1)) >= 5) {\n      //But first count leading zeros as converting to a number will loose them\n      var leadingzeros = \"\";\n      while (decim.charAt(0)===\"0\") {\n        leadingzeros = leadingzeros + \"0\";\n        decim = decim.substr(1);\n      }\n      //Then we can change decim to a number and add 1 before replacing leading zeros\n      decim = (+decim + 1) + '';\n      decim = leadingzeros + decim;\n      if (decim.length > places) {\n        //adding one has made it longer\n        number[0] = (+number[0]+ +decim.charAt(0)) + ''; //add value of firstchar to the integer part\n        decim = decim.substring(1);   //ignore the 1st char at the beginning which is the carry to the integer part\n      }\n    }\n    number[1] = decim;\n  }\n  return number;\n}\n","module.exports = \"/*----------------------------------------------------------------------------\\\\\\n|                            Sortable Table 1.12                              |\\n|-----------------------------------------------------------------------------|\\n|                         Created by Erik Arvidsson                           |\\n|                  (http://webfx.eae.net/contact.html#erik)                   |\\n|                      For WebFX (http://webfx.eae.net/)                      |\\n|-----------------------------------------------------------------------------|\\n| A DOM 1 based script that allows an ordinary HTML table to be sortable.     |\\n|-----------------------------------------------------------------------------|\\n|                  Copyright (c) 1998 - 2006 Erik Arvidsson                   |\\n|-----------------------------------------------------------------------------|\\n| Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not |\\n| use this file except in compliance with the License.  You may obtain a copy |\\n| of the License at http://www.apache.org/licenses/LICENSE-2.0                |\\n| - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - |\\n| Unless  required  by  applicable law or  agreed  to  in  writing,  software |\\n| distributed under the License is distributed on an  \\\"AS IS\\\" BASIS,  WITHOUT |\\n| WARRANTIES OR  CONDITIONS OF ANY KIND,  either express or implied.  See the |\\n| License  for the  specific language  governing permissions  and limitations |\\n| under the License.                                                          |\\n|-----------------------------------------------------------------------------|\\n| 2003-01-10 | First version                                                  |\\n| 2003-01-19 | Minor changes to the date parsing                              |\\n| 2003-01-28 | JScript 5.0 fixes (no support for 'in' operator)               |\\n| 2003-02-01 | Sloppy typo like error fixed in getInnerText                   |\\n| 2003-07-04 | Added workaround for IE cellIndex bug.                         |\\n| 2003-11-09 | The bDescending argument to sort was not correctly working     |\\n|            | Using onclick DOM0 event if no support for addEventListener    |\\n|            | or attachEvent                                                 |\\n| 2004-01-13 | Adding addSortType and removeSortType which makes it a lot     |\\n|            | easier to add new, custom sort types.                          |\\n| 2004-01-27 | Switch to use descending = false as the default sort order.    |\\n|            | Change defaultDescending to suit your needs.                   |\\n| 2004-03-14 | Improved sort type None look and feel a bit                    |\\n| 2004-08-26 | Made the handling of tBody and tHead more flexible. Now you    |\\n|            | can use another tHead or no tHead, and you can chose some      |\\n|            | other tBody.                                                   |\\n| 2006-04-25 | Changed license to Apache Software License 2.0                 |\\n|-----------------------------------------------------------------------------|\\n| Created 2003-01-10 | All changes are in the log above. | Updated 2006-04-25 |\\n\\\\----------------------------------------------------------------------------*/\\n\\n\\nfunction SortableTable(oTable, oSortTypes) {\\n\\n\\tthis.sortTypes = oSortTypes || [];\\n\\n\\tthis.sortColumn = null;\\n\\tthis.descending = null;\\n\\n\\tvar oThis = this;\\n\\tthis._headerOnclick = function (e) {\\n\\t\\toThis.headerOnclick(e);\\n\\t};\\n\\n\\tif (oTable) {\\n\\t\\tthis.setTable( oTable );\\n\\t\\tthis.document = oTable.ownerDocument || oTable.document;\\n\\t}\\n\\telse {\\n\\t\\tthis.document = document;\\n\\t}\\n\\n\\n\\t// only IE needs this\\n\\tvar win = this.document.defaultView || this.document.parentWindow;\\n\\tthis._onunload = function () {\\n\\t\\toThis.destroy();\\n\\t};\\n\\tif (win && typeof win.attachEvent != \\\"undefined\\\") {\\n\\t\\twin.attachEvent(\\\"onunload\\\", this._onunload);\\n\\t}\\n}\\n\\nSortableTable.gecko = navigator.product == \\\"Gecko\\\";\\nSortableTable.msie = /msie/i.test(navigator.userAgent);\\n// Mozilla is faster when doing the DOM manipulations on\\n// an orphaned element. MSIE is not\\nSortableTable.removeBeforeSort = SortableTable.gecko;\\n\\nSortableTable.prototype.onsort = function () {};\\n\\n// default sort order. true -> descending, false -> ascending\\nSortableTable.prototype.defaultDescending = false;\\n\\n// shared between all instances. This is intentional to allow external files\\n// to modify the prototype\\nSortableTable.prototype._sortTypeInfo = {};\\n\\nSortableTable.prototype.setTable = function (oTable) {\\n\\tif ( this.tHead )\\n\\t\\tthis.uninitHeader();\\n\\tthis.element = oTable;\\n\\tthis.setTHead( oTable.tHead );\\n\\tthis.setTBody( oTable.tBodies[0] );\\n};\\n\\nSortableTable.prototype.setTHead = function (oTHead) {\\n\\tif (this.tHead && this.tHead != oTHead )\\n\\t\\tthis.uninitHeader();\\n\\tthis.tHead = oTHead;\\n\\tthis.initHeader( this.sortTypes );\\n};\\n\\nSortableTable.prototype.setTBody = function (oTBody) {\\n\\tthis.tBody = oTBody;\\n};\\n\\nSortableTable.prototype.setSortTypes = function ( oSortTypes ) {\\n\\tif ( this.tHead )\\n\\t\\tthis.uninitHeader();\\n\\tthis.sortTypes = oSortTypes || [];\\n\\tif ( this.tHead )\\n\\t\\tthis.initHeader( this.sortTypes );\\n};\\n\\n// adds arrow containers and events\\n// also binds sort type to the header cells so that reordering columns does\\n// not break the sort types\\nSortableTable.prototype.initHeader = function (oSortTypes) {\\n\\tif (!this.tHead) return;\\n\\tvar cells = this.tHead.rows[0].cells;\\n\\tvar doc = this.tHead.ownerDocument || this.tHead.document;\\n\\tthis.sortTypes = oSortTypes || [];\\n\\tvar l = cells.length;\\n\\tvar img, c;\\n\\tfor (var i = 0; i < l; i++) {\\n\\t\\tc = cells[i];\\n\\t\\tif (this.sortTypes[i] != null && this.sortTypes[i] != \\\"None\\\") {\\n\\t\\t\\timg = doc.createElement(\\\"IMG\\\");\\n\\t\\t\\timg.src = \\\"images/blank.png\\\";\\n\\t\\t\\tc.appendChild(img);\\n\\t\\t\\tif (this.sortTypes[i] != null)\\n\\t\\t\\t\\tc._sortType = this.sortTypes[i];\\n\\t\\t\\tif (typeof c.addEventListener != \\\"undefined\\\")\\n\\t\\t\\t\\tc.addEventListener(\\\"click\\\", this._headerOnclick, false);\\n\\t\\t\\telse if (typeof c.attachEvent != \\\"undefined\\\")\\n\\t\\t\\t\\tc.attachEvent(\\\"onclick\\\", this._headerOnclick);\\n\\t\\t\\telse\\n\\t\\t\\t\\tc.onclick = this._headerOnclick;\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tc.setAttribute( \\\"_sortType\\\", oSortTypes[i] );\\n\\t\\t\\tc._sortType = \\\"None\\\";\\n\\t\\t}\\n\\t}\\n\\tthis.updateHeaderArrows();\\n};\\n\\n// remove arrows and events\\nSortableTable.prototype.uninitHeader = function () {\\n\\tif (!this.tHead) return;\\n\\tvar cells = this.tHead.rows[0].cells;\\n\\tvar l = cells.length;\\n\\tvar c;\\n\\tfor (var i = 0; i < l; i++) {\\n\\t\\tc = cells[i];\\n\\t\\tif (c._sortType != null && c._sortType != \\\"None\\\") {\\n\\t\\t\\tc.removeChild(c.lastChild);\\n\\t\\t\\tif (typeof c.removeEventListener != \\\"undefined\\\")\\n\\t\\t\\t\\tc.removeEventListener(\\\"click\\\", this._headerOnclick, false);\\n\\t\\t\\telse if (typeof c.detachEvent != \\\"undefined\\\")\\n\\t\\t\\t\\tc.detachEvent(\\\"onclick\\\", this._headerOnclick);\\n\\t\\t\\tc._sortType = null;\\n\\t\\t\\tc.removeAttribute( \\\"_sortType\\\" );\\n\\t\\t}\\n\\t}\\n};\\n\\nSortableTable.prototype.updateHeaderArrows = function () {\\n\\tif (!this.tHead) return;\\n\\tvar cells = this.tHead.rows[0].cells;\\n\\tvar l = cells.length;\\n\\tvar img;\\n\\tfor (var i = 0; i < l; i++) {\\n\\t\\tif (cells[i]._sortType != null && cells[i]._sortType != \\\"None\\\") {\\n\\t\\t\\timg = cells[i].lastChild;\\n\\t\\t\\tif (i == this.sortColumn)\\n\\t\\t\\t\\timg.className = \\\"sort-arrow \\\" + (this.descending ? \\\"descending\\\" : \\\"ascending\\\");\\n\\t\\t\\telse\\n\\t\\t\\t\\timg.className = \\\"sort-arrow\\\";\\n\\t\\t}\\n\\t}\\n};\\n\\nSortableTable.prototype.headerOnclick = function (e) {\\n\\t// find TD element\\n\\tvar el = e.target || e.srcElement;\\n\\twhile (el.tagName != \\\"TD\\\")\\n\\t\\tel = el.parentNode;\\n\\n\\tthis.sort(SortableTable.msie ? SortableTable.getCellIndex(el) : el.cellIndex);\\n};\\n\\n// IE returns wrong cellIndex when columns are hidden\\nSortableTable.getCellIndex = function (oTd) {\\n\\tvar cells = oTd.parentNode.childNodes\\n\\tvar l = cells.length;\\n\\tvar i;\\n\\tfor (i = 0; cells[i] != oTd && i < l; i++)\\n\\t\\t;\\n\\treturn i;\\n};\\n\\nSortableTable.prototype.getSortType = function (nColumn) {\\n\\treturn this.sortTypes[nColumn] || \\\"String\\\";\\n};\\n\\n// only nColumn is required\\n// if bDescending is left out the old value is taken into account\\n// if sSortType is left out the sort type is found from the sortTypes array\\n\\nSortableTable.prototype.sort = function (nColumn, bDescending, sSortType) {\\n\\tif (!this.tBody) return;\\n\\tif (sSortType == null)\\n\\t\\tsSortType = this.getSortType(nColumn);\\n\\n\\t// exit if None\\n\\tif (sSortType == \\\"None\\\")\\n\\t\\treturn;\\n\\n\\tif (bDescending == null) {\\n\\t\\tif (this.sortColumn != nColumn)\\n\\t\\t\\tthis.descending = this.defaultDescending;\\n\\t\\telse\\n\\t\\t\\tthis.descending = !this.descending;\\n\\t}\\n\\telse\\n\\t\\tthis.descending = bDescending;\\n\\n\\tthis.sortColumn = nColumn;\\n\\n\\tif (typeof this.onbeforesort == \\\"function\\\")\\n\\t\\tthis.onbeforesort();\\n\\n\\tvar f = this.getSortFunction(sSortType, nColumn);\\n\\tvar a = this.getCache(sSortType, nColumn);\\n\\tvar tBody = this.tBody;\\n\\n\\ta.sort(f);\\n\\n\\tif (this.descending)\\n\\t\\ta.reverse();\\n\\n\\tif (SortableTable.removeBeforeSort) {\\n\\t\\t// remove from doc\\n\\t\\tvar nextSibling = tBody.nextSibling;\\n\\t\\tvar p = tBody.parentNode;\\n\\t\\tp.removeChild(tBody);\\n\\t}\\n\\n\\t// insert in the new order\\n\\tvar l = a.length;\\n\\tfor (var i = 0; i < l; i++)\\n\\t\\ttBody.appendChild(a[i].element);\\n\\n\\tif (SortableTable.removeBeforeSort) {\\n\\t\\t// insert into doc\\n\\t\\tp.insertBefore(tBody, nextSibling);\\n\\t}\\n\\n\\tthis.updateHeaderArrows();\\n\\n\\tthis.destroyCache(a);\\n\\n\\tif (typeof this.onsort == \\\"function\\\")\\n\\t\\tthis.onsort();\\n};\\n\\nSortableTable.prototype.asyncSort = function (nColumn, bDescending, sSortType) {\\n\\tvar oThis = this;\\n\\tthis._asyncsort = function () {\\n\\t\\toThis.sort(nColumn, bDescending, sSortType);\\n\\t};\\n\\twindow.setTimeout(this._asyncsort, 1);\\n};\\n\\nSortableTable.prototype.getCache = function (sType, nColumn) {\\n\\tif (!this.tBody) return [];\\n\\tvar rows = this.tBody.rows;\\n\\tvar l = rows.length;\\n\\tvar a = new Array(l);\\n\\tvar r;\\n\\tfor (var i = 0; i < l; i++) {\\n\\t\\tr = rows[i];\\n\\t\\ta[i] = {\\n\\t\\t\\tvalue:\\t\\tthis.getRowValue(r, sType, nColumn),\\n\\t\\t\\telement:\\tr\\n\\t\\t};\\n\\t};\\n\\treturn a;\\n};\\n\\nSortableTable.prototype.destroyCache = function (oArray) {\\n\\tvar l = oArray.length;\\n\\tfor (var i = 0; i < l; i++) {\\n\\t\\toArray[i].value = null;\\n\\t\\toArray[i].element = null;\\n\\t\\toArray[i] = null;\\n\\t}\\n};\\n\\nSortableTable.prototype.getRowValue = function (oRow, sType, nColumn) {\\n\\t// if we have defined a custom getRowValue use that\\n\\tif (this._sortTypeInfo[sType] && this._sortTypeInfo[sType].getRowValue)\\n\\t\\treturn this._sortTypeInfo[sType].getRowValue(oRow, nColumn);\\n\\n\\tvar s;\\n\\tvar c = oRow.cells[nColumn];\\n\\tif (typeof c.innerText != \\\"undefined\\\")\\n\\t\\ts = c.innerText;\\n\\telse\\n\\t\\ts = SortableTable.getInnerText(c);\\n\\treturn this.getValueFromString(s, sType);\\n};\\n\\nSortableTable.getInnerText = function (oNode) {\\n\\tvar s = \\\"\\\";\\n\\tvar cs = oNode.childNodes;\\n\\tvar l = cs.length;\\n\\tfor (var i = 0; i < l; i++) {\\n\\t\\tswitch (cs[i].nodeType) {\\n\\t\\t\\tcase 1: //ELEMENT_NODE\\n\\t\\t\\t\\ts += SortableTable.getInnerText(cs[i]);\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\tcase 3:\\t//TEXT_NODE\\n\\t\\t\\t\\ts += cs[i].nodeValue;\\n\\t\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\treturn s;\\n};\\n\\nSortableTable.prototype.getValueFromString = function (sText, sType) {\\n\\tif (this._sortTypeInfo[sType])\\n\\t\\treturn this._sortTypeInfo[sType].getValueFromString( sText );\\n\\treturn sText;\\n\\t/*\\n\\tswitch (sType) {\\n\\t\\tcase \\\"Number\\\":\\n\\t\\t\\treturn Number(sText);\\n\\t\\tcase \\\"CaseInsensitiveString\\\":\\n\\t\\t\\treturn sText.toUpperCase();\\n\\t\\tcase \\\"Date\\\":\\n\\t\\t\\tvar parts = sText.split(\\\"-\\\");\\n\\t\\t\\tvar d = new Date(0);\\n\\t\\t\\td.setFullYear(parts[0]);\\n\\t\\t\\td.setDate(parts[2]);\\n\\t\\t\\td.setMonth(parts[1] - 1);\\n\\t\\t\\treturn d.valueOf();\\n\\t}\\n\\treturn sText;\\n\\t*/\\n\\t};\\n\\nSortableTable.prototype.getSortFunction = function (sType, nColumn) {\\n\\tif (this._sortTypeInfo[sType])\\n\\t\\treturn this._sortTypeInfo[sType].compare;\\n\\treturn SortableTable.basicCompare;\\n};\\n\\nSortableTable.prototype.destroy = function () {\\n\\tthis.uninitHeader();\\n\\tvar win = this.document.parentWindow;\\n\\tif (win && typeof win.detachEvent != \\\"undefined\\\") {\\t// only IE needs this\\n\\t\\twin.detachEvent(\\\"onunload\\\", this._onunload);\\n\\t}\\n\\tthis._onunload = null;\\n\\tthis.element = null;\\n\\tthis.tHead = null;\\n\\tthis.tBody = null;\\n\\tthis.document = null;\\n\\tthis._headerOnclick = null;\\n\\tthis.sortTypes = null;\\n\\tthis._asyncsort = null;\\n\\tthis.onsort = null;\\n};\\n\\n// Adds a sort type to all instance of SortableTable\\n// sType : String - the identifier of the sort type\\n// fGetValueFromString : function ( s : string ) : T - A function that takes a\\n//    string and casts it to a desired format. If left out the string is just\\n//    returned\\n// fCompareFunction : function ( n1 : T, n2 : T ) : Number - A normal JS sort\\n//    compare function. Takes two values and compares them. If left out less than,\\n//    <, compare is used\\n// fGetRowValue : function( oRow : HTMLTRElement, nColumn : int ) : T - A function\\n//    that takes the row and the column index and returns the value used to compare.\\n//    If left out then the innerText is first taken for the cell and then the\\n//    fGetValueFromString is used to convert that string the desired value and type\\n\\nSortableTable.prototype.addSortType = function (sType, fGetValueFromString, fCompareFunction, fGetRowValue) {\\n\\tthis._sortTypeInfo[sType] = {\\n\\t\\ttype:\\t\\t\\t\\tsType,\\n\\t\\tgetValueFromString:\\tfGetValueFromString || SortableTable.idFunction,\\n\\t\\tcompare:\\t\\t\\tfCompareFunction || SortableTable.basicCompare,\\n\\t\\tgetRowValue:\\t\\tfGetRowValue\\n\\t};\\n};\\n\\n// this removes the sort type from all instances of SortableTable\\nSortableTable.prototype.removeSortType = function (sType) {\\n\\tdelete this._sortTypeInfo[sType];\\n};\\n\\nSortableTable.basicCompare = function compare(n1, n2) {\\n\\tif (n1.value < n2.value)\\n\\t\\treturn -1;\\n\\tif (n2.value < n1.value)\\n\\t\\treturn 1;\\n\\treturn 0;\\n};\\n\\nSortableTable.idFunction = function (x) {\\n\\treturn x;\\n};\\n\\nSortableTable.toUpperCase = function (s) {\\n\\treturn s.toUpperCase();\\n};\\n\\nSortableTable.toDate = function (s) {\\n\\tvar parts = s.split(\\\"-\\\");\\n\\tvar d = new Date(0);\\n\\td.setFullYear(parts[0]);\\n\\td.setDate(parts[2]);\\n\\td.setMonth(parts[1] - 1);\\n\\treturn d.valueOf();\\n};\\n\\n\\n// add sort types\\nSortableTable.prototype.addSortType(\\\"Number\\\", Number);\\nSortableTable.prototype.addSortType(\\\"CaseInsensitiveString\\\", SortableTable.toUpperCase);\\nSortableTable.prototype.addSortType(\\\"Date\\\", SortableTable.toDate);\\nSortableTable.prototype.addSortType(\\\"String\\\");\\n// None is a special case\\n\"","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","require(\"!!/Users/sps/Sites/_opensource/TableFilter/node_modules/script-loader/addScript.js\")(require(\"!!/Users/sps/Sites/_opensource/TableFilter/node_modules/raw-loader/index.js!/Users/sps/Sites/_opensource/TableFilter/libs/sortabletable.js\")+\"\\n\\n// SCRIPT-LOADER FOOTER\\n//# sourceURL=script:///Users/sps/Sites/_opensource/TableFilter/libs/sortabletable.js\")","var map = {\n\t\"./array\": \"./src/array.js\",\n\t\"./array.js\": \"./src/array.js\",\n\t\"./const\": \"./src/const.js\",\n\t\"./const.js\": \"./src/const.js\",\n\t\"./cookie\": \"./src/cookie.js\",\n\t\"./cookie.js\": \"./src/cookie.js\",\n\t\"./dom\": \"./src/dom.js\",\n\t\"./dom.js\": \"./src/dom.js\",\n\t\"./emitter\": \"./src/emitter.js\",\n\t\"./emitter.js\": \"./src/emitter.js\",\n\t\"./event\": \"./src/event.js\",\n\t\"./event.js\": \"./src/event.js\",\n\t\"./extensions/advancedGrid/adapterEzEditTable\": \"./src/extensions/advancedGrid/adapterEzEditTable.js\",\n\t\"./extensions/advancedGrid/adapterEzEditTable.js\": \"./src/extensions/advancedGrid/adapterEzEditTable.js\",\n\t\"./extensions/advancedGrid/advancedGrid\": \"./src/extensions/advancedGrid/advancedGrid.js\",\n\t\"./extensions/advancedGrid/advancedGrid.js\": \"./src/extensions/advancedGrid/advancedGrid.js\",\n\t\"./extensions/colOps/colOps\": \"./src/extensions/colOps/colOps.js\",\n\t\"./extensions/colOps/colOps.js\": \"./src/extensions/colOps/colOps.js\",\n\t\"./extensions/colsVisibility/colsVisibility\": \"./src/extensions/colsVisibility/colsVisibility.js\",\n\t\"./extensions/colsVisibility/colsVisibility.js\": \"./src/extensions/colsVisibility/colsVisibility.js\",\n\t\"./extensions/filtersVisibility/filtersVisibility\": \"./src/extensions/filtersVisibility/filtersVisibility.js\",\n\t\"./extensions/filtersVisibility/filtersVisibility.js\": \"./src/extensions/filtersVisibility/filtersVisibility.js\",\n\t\"./extensions/sort/adapterSortabletable\": \"./src/extensions/sort/adapterSortabletable.js\",\n\t\"./extensions/sort/adapterSortabletable.js\": \"./src/extensions/sort/adapterSortabletable.js\",\n\t\"./extensions/sort/sort\": \"./src/extensions/sort/sort.js\",\n\t\"./extensions/sort/sort.js\": \"./src/extensions/sort/sort.js\",\n\t\"./feature\": \"./src/feature.js\",\n\t\"./feature.js\": \"./src/feature.js\",\n\t\"./modules/alternateRows\": \"./src/modules/alternateRows.js\",\n\t\"./modules/alternateRows.js\": \"./src/modules/alternateRows.js\",\n\t\"./modules/baseDropdown\": \"./src/modules/baseDropdown.js\",\n\t\"./modules/baseDropdown.js\": \"./src/modules/baseDropdown.js\",\n\t\"./modules/checkList\": \"./src/modules/checkList.js\",\n\t\"./modules/checkList.js\": \"./src/modules/checkList.js\",\n\t\"./modules/clearButton\": \"./src/modules/clearButton.js\",\n\t\"./modules/clearButton.js\": \"./src/modules/clearButton.js\",\n\t\"./modules/dateType\": \"./src/modules/dateType.js\",\n\t\"./modules/dateType.js\": \"./src/modules/dateType.js\",\n\t\"./modules/dropdown\": \"./src/modules/dropdown.js\",\n\t\"./modules/dropdown.js\": \"./src/modules/dropdown.js\",\n\t\"./modules/gridLayout\": \"./src/modules/gridLayout.js\",\n\t\"./modules/gridLayout.js\": \"./src/modules/gridLayout.js\",\n\t\"./modules/hash\": \"./src/modules/hash.js\",\n\t\"./modules/hash.js\": \"./src/modules/hash.js\",\n\t\"./modules/help\": \"./src/modules/help.js\",\n\t\"./modules/help.js\": \"./src/modules/help.js\",\n\t\"./modules/highlightKeywords\": \"./src/modules/highlightKeywords.js\",\n\t\"./modules/highlightKeywords.js\": \"./src/modules/highlightKeywords.js\",\n\t\"./modules/loader\": \"./src/modules/loader.js\",\n\t\"./modules/loader.js\": \"./src/modules/loader.js\",\n\t\"./modules/markActiveColumns\": \"./src/modules/markActiveColumns.js\",\n\t\"./modules/markActiveColumns.js\": \"./src/modules/markActiveColumns.js\",\n\t\"./modules/noResults\": \"./src/modules/noResults.js\",\n\t\"./modules/noResults.js\": \"./src/modules/noResults.js\",\n\t\"./modules/paging\": \"./src/modules/paging.js\",\n\t\"./modules/paging.js\": \"./src/modules/paging.js\",\n\t\"./modules/popupFilter\": \"./src/modules/popupFilter.js\",\n\t\"./modules/popupFilter.js\": \"./src/modules/popupFilter.js\",\n\t\"./modules/rowsCounter\": \"./src/modules/rowsCounter.js\",\n\t\"./modules/rowsCounter.js\": \"./src/modules/rowsCounter.js\",\n\t\"./modules/state\": \"./src/modules/state.js\",\n\t\"./modules/state.js\": \"./src/modules/state.js\",\n\t\"./modules/statusBar\": \"./src/modules/statusBar.js\",\n\t\"./modules/statusBar.js\": \"./src/modules/statusBar.js\",\n\t\"./modules/storage\": \"./src/modules/storage.js\",\n\t\"./modules/storage.js\": \"./src/modules/storage.js\",\n\t\"./modules/toolbar\": \"./src/modules/toolbar.js\",\n\t\"./modules/toolbar.js\": \"./src/modules/toolbar.js\",\n\t\"./number\": \"./src/number.js\",\n\t\"./number.js\": \"./src/number.js\",\n\t\"./root\": \"./src/root.js\",\n\t\"./root.js\": \"./src/root.js\",\n\t\"./settings\": \"./src/settings.js\",\n\t\"./settings.js\": \"./src/settings.js\",\n\t\"./sort\": \"./src/sort.js\",\n\t\"./sort.js\": \"./src/sort.js\",\n\t\"./string\": \"./src/string.js\",\n\t\"./string.js\": \"./src/string.js\",\n\t\"./tablefilter\": \"./src/tablefilter.js\",\n\t\"./tablefilter.js\": \"./src/tablefilter.js\",\n\t\"./types\": \"./src/types.js\",\n\t\"./types.js\": \"./src/types.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.\\\\/.*$\";","import {Feature} from '../../feature';\nimport {tag} from '../../dom';\nimport {INPUT} from '../../const';\nimport {defaultsStr} from '../../settings';\nimport {root} from '../../root';\n\nconst INSTANTIATION_ERROR = `Failed to instantiate EditTable object.\n    \\n\"ezEditTable\" dependency not found.`;\n\n/**\n * Adapter module for ezEditTable, an external library providing advanced\n * grid features (selection and edition):\n * http://codecanyon.net/item/ezedittable-enhance-html-tables/2425123?ref=koalyptus\n */\nexport default class AdapterEzEditTable extends Feature {\n\n    /**\n     * Creates an instance of AdapterEzEditTable\n     *\n     * @param {TableFilter} tf TableFilter instance\n     * @param {Object} cfg Configuration options for ezEditTable library\n     */\n    constructor(tf, cfg) {\n        super(tf, AdapterEzEditTable);\n\n        /**\n         * Module description\n         * @type {String}\n         */\n        this.desc = defaultsStr(cfg.description, 'ezEditTable adapter');\n\n        /**\n         * Filename of ezEditTable library\n         * @type {String}\n         */\n        this.filename = defaultsStr(cfg.filename, 'ezEditTable.js');\n\n        /**\n         * Path to ezEditTable library\n         * @type {String}\n         */\n        this.vendorPath = cfg.vendor_path;\n\n        /**\n         * Load ezEditTable stylesheet\n         * @type {Boolean}\n         */\n        this.loadStylesheet = Boolean(cfg.load_stylesheet);\n\n        /**\n         * Path to ezEditTable stylesheet\n         * @type {String}\n         */\n        this.stylesheet = defaultsStr(cfg.stylesheet,\n            this.vendorPath + 'ezEditTable.css');\n\n        /**\n         * Name of ezEditTable stylesheet\n         * @type {String}\n         */\n        this.stylesheetName = defaultsStr(cfg.stylesheet_name,\n            'ezEditTableCss');\n\n        // Enable the ezEditTable's scroll into view behaviour if grid layout on\n        cfg.scroll_into_view = cfg.scroll_into_view === false ?\n            false : tf.gridLayout;\n\n        /**\n         * ezEditTable instance\n         * @type {EditTable}\n         * @private\n         */\n        this._ezEditTable = null;\n\n        /**\n         * ezEditTable configuration\n         * @private\n         */\n        this.cfg = cfg;\n\n        this.enable();\n    }\n\n    /**\n     * Conditionally load ezEditTable library and set advanced grid\n     */\n    init() {\n        if (this.initialized) {\n            return;\n        }\n        let tf = this.tf;\n        if (root.EditTable) {\n            this._setAdvancedGrid();\n        } else {\n            let path = this.vendorPath + this.filename;\n            tf.import(this.filename, path, () => this._setAdvancedGrid());\n        }\n        if (this.loadStylesheet && !tf.isImported(this.stylesheet, 'link')) {\n            tf.import(this.stylesheetName, this.stylesheet, null, 'link');\n        }\n\n        // TODO: hack to prevent ezEditTable enter key event hijaking.\n        // Needs to be fixed in the vendor's library\n        this.emitter.on(['filter-focus', 'filter-blur'],\n            () => this._toggleForInputFilter());\n\n        /**\n         * @inherited\n         */\n        this.initialized = true;\n    }\n\n    /**\n     * Instantiate ezEditTable component for advanced grid features\n     * @private\n     */\n    _setAdvancedGrid() {\n        let tf = this.tf;\n\n        //start row for EditTable constructor needs to be calculated\n        let startRow,\n            cfg = this.cfg,\n            thead = tag(tf.dom(), 'thead');\n\n        //if thead exists and startRow not specified, startRow is calculated\n        //automatically by EditTable\n        if (thead.length > 0 && !cfg.startRow) {\n            startRow = undefined;\n        }\n        //otherwise startRow config property if any or TableFilter refRow\n        else {\n            startRow = cfg.startRow || tf.refRow;\n        }\n\n        cfg.base_path = cfg.base_path || tf.basePath + 'ezEditTable/';\n        let editable = cfg.editable;\n        let selectable = cfg.selection;\n\n        if (selectable) {\n            cfg.default_selection = cfg.default_selection || 'row';\n        }\n        //CSS Styles\n        cfg.active_cell_css = cfg.active_cell_css || 'ezETSelectedCell';\n\n        let _lastValidRowIndex = 0;\n        let _lastRowIndex = 0;\n\n        if (selectable) {\n            //Row navigation needs to be calculated according to TableFilter's\n            //validRowsIndex array\n            let onAfterSelection = function (et, selectedElm, e) {\n                let slc = et.Selection;\n                //Next valid filtered row needs to be selected\n                let doSelect = function (nextRowIndex) {\n                    if (et.defaultSelection === 'row') {\n                        /* eslint-disable */\n                        slc.SelectRowByIndex(nextRowIndex);\n                        /* eslint-enable */\n                    } else {\n                        /* eslint-disable */\n                        et.ClearSelections();\n                        /* eslint-enable */\n                        let cellIndex = selectedElm.cellIndex,\n                            row = tf.dom().rows[nextRowIndex];\n                        if (et.defaultSelection === 'both') {\n                            /* eslint-disable */\n                            slc.SelectRowByIndex(nextRowIndex);\n                            /* eslint-enable */\n                        }\n                        if (row) {\n                            /* eslint-disable */\n                            slc.SelectCell(row.cells[cellIndex]);\n                            /* eslint-enable */\n                        }\n                    }\n                    //Table is filtered\n                    if (tf.validRowsIndex.length !== tf.getRowsNb()) {\n                        let r = tf.dom().rows[nextRowIndex];\n                        if (r) {\n                            r.scrollIntoView(false);\n                        }\n                        if (cell) {\n                            if (cell.cellIndex === (tf.getCellsNb() - 1) &&\n                                tf.gridLayout) {\n                                tf.tblCont.scrollLeft = 100000000;\n                            }\n                            else if (cell.cellIndex === 0 && tf.gridLayout) {\n                                tf.tblCont.scrollLeft = 0;\n                            } else {\n                                cell.scrollIntoView(false);\n                            }\n                        }\n                    }\n                };\n\n                //table is not filtered\n                if (!tf.validRowsIndex) {\n                    return;\n                }\n                let validIndexes = tf.validRowsIndex,\n                    validIdxLen = validIndexes.length,\n                    row = et.defaultSelection !== 'row' ?\n                        selectedElm.parentNode : selectedElm,\n                    //cell for default_selection = 'both' or 'cell'\n                    cell = selectedElm.nodeName === 'TD' ? selectedElm : null,\n                    /* eslint-disable */\n                    keyCode = e !== undefined ? et.Event.GetKey(e) : 0,\n                    /* eslint-enable */\n                    isRowValid = validIndexes.indexOf(row.rowIndex) !== -1,\n                    nextRowIndex,\n                    paging = tf.feature('paging'),\n                    //pgup/pgdown keys\n                    d = keyCode === 34 || keyCode === 33 ?\n                        (paging && paging.pageLength || et.nbRowsPerPage) :\n                        1;\n\n                //If next row is not valid, next valid filtered row needs to be\n                //calculated\n                if (!isRowValid) {\n                    //Selection direction up/down\n                    if (row.rowIndex > _lastRowIndex) {\n                        //last row\n                        if (row.rowIndex >= validIndexes[validIdxLen - 1]) {\n                            nextRowIndex = validIndexes[validIdxLen - 1];\n                        } else {\n                            let calcRowIndex = (_lastValidRowIndex + d);\n                            if (calcRowIndex > (validIdxLen - 1)) {\n                                nextRowIndex = validIndexes[validIdxLen - 1];\n                            } else {\n                                nextRowIndex = validIndexes[calcRowIndex];\n                            }\n                        }\n                    } else {\n                        //first row\n                        if (row.rowIndex <= validIndexes[0]) {\n                            nextRowIndex = validIndexes[0];\n                        } else {\n                            let v = validIndexes[_lastValidRowIndex - d];\n                            nextRowIndex = v ? v : validIndexes[0];\n                        }\n                    }\n                    _lastRowIndex = row.rowIndex;\n                    doSelect(nextRowIndex);\n                } else {\n                    //If filtered row is valid, special calculation for\n                    //pgup/pgdown keys\n                    if (keyCode !== 34 && keyCode !== 33) {\n                        _lastValidRowIndex = validIndexes.indexOf(row.rowIndex);\n                        _lastRowIndex = row.rowIndex;\n                    } else {\n                        if (keyCode === 34) { //pgdown\n                            //last row\n                            if ((_lastValidRowIndex + d) <= (validIdxLen - 1)) {\n                                nextRowIndex = validIndexes[\n                                    _lastValidRowIndex + d];\n                            } else {\n                                nextRowIndex = [validIdxLen - 1];\n                            }\n                        } else { //pgup\n                            //first row\n                            if ((_lastValidRowIndex - d) <= validIndexes[0]) {\n                                nextRowIndex = validIndexes[0];\n                            } else {\n                                nextRowIndex = validIndexes[\n                                    _lastValidRowIndex - d];\n                            }\n                        }\n                        _lastRowIndex = nextRowIndex;\n                        _lastValidRowIndex = validIndexes.indexOf(nextRowIndex);\n                        doSelect(nextRowIndex);\n                    }\n                }\n            };\n\n            //Page navigation has to be enforced whenever selected row is out of\n            //the current page range\n            let onBeforeSelection = function (et, selectedElm) {\n                let row = et.defaultSelection !== 'row' ?\n                    selectedElm.parentNode : selectedElm;\n                if (tf.paging) {\n                    if (tf.feature('paging').nbPages > 1) {\n                        let paging = tf.feature('paging');\n                        //page length is re-assigned in case it has changed\n                        et.nbRowsPerPage = paging.pageLength;\n                        let validIndexes = tf.validRowsIndex,\n                            validIdxLen = validIndexes.length,\n                            pagingEndRow = parseInt(paging.startPagingRow, 10) +\n                                parseInt(paging.pageLength, 10);\n                        let rowIndex = row.rowIndex;\n\n                        if ((rowIndex === validIndexes[validIdxLen - 1]) &&\n                            paging.currentPageNb !== paging.nbPages) {\n                            paging.setPage('last');\n                        }\n                        else if ((rowIndex === validIndexes[0]) &&\n                            paging.currentPageNb !== 1) {\n                            paging.setPage('first');\n                        }\n                        else if (rowIndex > validIndexes[pagingEndRow - 1] &&\n                            rowIndex < validIndexes[validIdxLen - 1]) {\n                            paging.setPage('next');\n                        }\n                        else if (\n                            rowIndex < validIndexes[paging.startPagingRow] &&\n                            rowIndex > validIndexes[0]) {\n                            paging.setPage('previous');\n                        }\n                    }\n                }\n            };\n\n            //Selected row needs to be visible when paging is activated\n            if (tf.paging) {\n                tf.feature('paging').onAfterChangePage = function (paging) {\n                    let advGrid = paging.tf.extension('advancedGrid');\n                    let et = advGrid._ezEditTable;\n                    let slc = et.Selection;\n                    /* eslint-disable */\n                    let row = slc.GetActiveRow();\n                    /* eslint-enable */\n                    if (row) {\n                        row.scrollIntoView(false);\n                    }\n                    /* eslint-disable */\n                    let cell = slc.GetActiveCell();\n                    /* eslint-enable */\n                    if (cell) {\n                        cell.scrollIntoView(false);\n                    }\n                };\n            }\n\n            //Rows navigation when rows are filtered is performed with the\n            //EditTable row selection callback events\n            if (cfg.default_selection === 'row') {\n                let fnB = cfg.on_before_selected_row;\n                cfg.on_before_selected_row = function () {\n                    var args = arguments;\n                    onBeforeSelection(args[0], args[1], args[2]);\n                    if (fnB) {\n                        fnB.call(null, args[0], args[1], args[2]);\n                    }\n                };\n                let fnA = cfg.on_after_selected_row;\n                cfg.on_after_selected_row = function () {\n                    var args = arguments;\n                    onAfterSelection(args[0], args[1], args[2]);\n                    if (fnA) {\n                        fnA.call(null, args[0], args[1], args[2]);\n                    }\n                };\n            } else {\n                let fnD = cfg.on_before_selected_cell;\n                cfg.on_before_selected_cell = function () {\n                    var args = arguments;\n                    onBeforeSelection(args[0], args[1], args[2]);\n                    if (fnD) {\n                        fnD.call(null, args[0], args[1], args[2]);\n                    }\n                };\n                let fnC = cfg.on_after_selected_cell;\n                cfg.on_after_selected_cell = function () {\n                    var args = arguments;\n                    onAfterSelection(args[0], args[1], args[2]);\n                    if (fnC) {\n                        fnC.call(null, args[0], args[1], args[2]);\n                    }\n                };\n            }\n        }\n        if (editable) {\n            //Added or removed rows, TF rows number needs to be re-calculated\n            let fnE = cfg.on_added_dom_row;\n            cfg.on_added_dom_row = function () {\n                var args = arguments;\n                tf.nbFilterableRows++;\n                if (!tf.paging) {\n                    tf.emitter.emit('rows-changed', tf, this);\n                } else {\n                    tf.nbFilterableRows++;\n                    tf.paging = false;\n                    tf.feature('paging').destroy();\n                    tf.feature('paging').reset();\n                }\n                if (tf.alternateRows) {\n                    tf.feature('alternateRows').init();\n                }\n                if (fnE) {\n                    fnE.call(null, args[0], args[1], args[2]);\n                }\n            };\n            if (cfg.actions && cfg.actions['delete']) {\n                let fnF = cfg.actions['delete'].on_after_submit;\n                cfg.actions['delete'].on_after_submit = function () {\n                    var args = arguments;\n                    tf.nbFilterableRows--;\n                    if (!tf.paging) {\n                        tf.emitter.emit('rows-changed', tf, this);\n                    } else {\n                        tf.nbFilterableRows--;\n                        tf.paging = false;\n                        tf.feature('paging').destroy();\n                        tf.feature('paging').reset(false);\n                    }\n                    if (tf.alternateRows) {\n                        tf.feature('alternateRows').init();\n                    }\n                    if (fnF) {\n                        fnF.call(null, args[0], args[1]);\n                    }\n                };\n            }\n        }\n\n        try {\n            /* eslint-disable */\n            this._ezEditTable = new EditTable(tf.id, cfg, startRow);\n            this._ezEditTable.Init();\n            /* eslint-enable */\n        } catch (e) { throw new Error(INSTANTIATION_ERROR); }\n\n        this.initialized = true;\n    }\n\n    /**\n     * Reset advanced grid when previously removed\n     */\n    reset() {\n        let ezEditTable = this._ezEditTable;\n        if (ezEditTable) {\n            if (this.cfg.selection) {\n                /* eslint-disable */\n                ezEditTable.Selection.Set();\n                /* eslint-enable */\n            }\n            if (this.cfg.editable) {\n                /* eslint-disable */\n                ezEditTable.Editable.Set();\n                /* eslint-enable */\n            }\n        }\n    }\n\n    /**\n     * Toggle behaviour\n     */\n    toggle() {\n        let ezEditTable = this._ezEditTable;\n        if (ezEditTable.editable) {\n            /* eslint-disable */\n            ezEditTable.Editable.Remove();\n            /* eslint-enable */\n        } else {\n            /* eslint-disable */\n            ezEditTable.Editable.Set();\n            /* eslint-enable */\n        }\n        if (ezEditTable.selection) {\n            /* eslint-disable */\n            ezEditTable.Selection.Remove();\n            /* eslint-enable */\n        } else {\n            /* eslint-disable */\n            ezEditTable.Selection.Set();\n            /* eslint-enable */\n        }\n    }\n\n    _toggleForInputFilter() {\n        let tf = this.tf;\n        if (!tf.getActiveFilterId()) {\n            return;\n        }\n        let colIndex = tf.getColumnIndexFromFilterId(tf.getActiveFilterId());\n        let filterType = tf.getFilterType(colIndex);\n        if (filterType === INPUT) {\n            this.toggle();\n        }\n    }\n\n    /**\n     * Remove advanced grid\n     */\n    destroy() {\n        if (!this.initialized) {\n            return;\n        }\n        let ezEditTable = this._ezEditTable;\n        if (ezEditTable) {\n            if (this.cfg.selection) {\n                /* eslint-disable */\n                ezEditTable.Selection.ClearSelections();\n                ezEditTable.Selection.Remove();\n                /* eslint-enable */\n            }\n            if (this.cfg.editable) {\n                /* eslint-disable */\n                ezEditTable.Editable.Remove();\n                /* eslint-enable */\n            }\n        }\n\n        this.emitter.off(['filter-focus', 'filter-blur'],\n            () => this._toggleForInputFilter());\n        this.initialized = false;\n    }\n}\n\nAdapterEzEditTable.meta = {altName: 'advancedGrid'};\n","import AdapterEzEditTable from './adapterEzEditTable';\n\nexport default AdapterEzEditTable;","import {Feature} from '../../feature';\nimport {createText, elm} from '../../dom';\nimport {isArray, isEmpty, EMPTY_FN} from '../../types';\nimport {numSortAsc} from '../../sort';\nimport {FORMATTED_NUMBER} from '../../const';\nimport formatNumber from 'format-number';\nimport {defaultsFn, defaultsArr} from '../../settings';\nimport {bound} from '../../event';\n\nconst EVENTS = [\n    'after-filtering',\n    'after-page-change',\n    'after-page-length-change'\n];\n\nconst SUM = 'sum';\nconst MEAN = 'mean';\nconst MIN = 'min';\nconst MAX = 'max';\nconst MEDIAN = 'median';\nconst Q1 = 'q1';\nconst Q3 = 'q3';\n\n/**\n * Column calculations extension\n */\nexport default class ColOps extends Feature {\n\n    /**\n     * Creates an instance of ColOps\n     *\n     * @param {TableFilter} tf TableFilter instance\n     * @param {Object} opts Configuration object\n     */\n    constructor(tf, opts) {\n        super(tf, ColOps);\n\n        /**\n         * Callback fired before columns operations start\n         * @type {Function}\n         */\n        this.onBeforeOperation = defaultsFn(opts.on_before_operation, EMPTY_FN);\n\n        /**\n         * Callback fired after columns operations are completed\n         * @type {Function}\n         */\n        this.onAfterOperation = defaultsFn(opts.on_after_operation, EMPTY_FN);\n\n        /**\n         * Configuration options\n         * @type {Object}\n         */\n        this.opts = opts;\n\n        /**\n         * List of DOM element IDs containing column's calculation result\n         * @type {Array}\n         */\n        this.labelIds = defaultsArr(opts.id, []);\n\n        /**\n         * List of columns' indexes for calculations\n         * @type {Array}\n         */\n        this.colIndexes = defaultsArr(opts.col, []);\n\n        /**\n         * List of operations - possible values: 'sum', 'mean', 'min', 'max',\n         * 'median', 'q1', 'q3'\n         * @type {Array}\n         */\n        this.operations = defaultsArr(opts.operation, []);\n\n        /**\n         * List of write methods used to write the result - possible values:\n         * 'innerHTML', 'setValue', 'createTextNode'\n         * @type {Array}\n         */\n        this.outputTypes = defaultsArr(opts.write_method, []);\n\n        /**\n         * List of format objects used for formatting the result -\n         * refer to https://github.com/componitable/format-number to check\n         * configuration options\n         * @type {Array}\n         */\n        this.formatResults = defaultsArr(opts.format_result, []);\n\n        /**\n         * List of row indexes displaying the results\n         * @type {Array}\n         */\n        this.totRowIndexes = defaultsArr(opts.tot_row_index, []);\n\n        /**\n         * List of row indexes excluded from calculations\n         * @type {Array}\n         */\n        this.excludeRows = defaultsArr(opts.exclude_row, []);\n\n        /**\n         * List of decimal precision for calculation results\n         * @type {Array}\n         */\n        this.decimalPrecisions = defaultsArr(opts.decimal_precision, 2);\n\n        this.enable();\n    }\n\n    /**\n     * Initializes ColOps instance\n     */\n    init() {\n        if (this.initialized) {\n            return;\n        }\n        // subscribe to events\n        this.emitter.on(EVENTS, bound(this.calcAll, this));\n\n        this.calcAll();\n\n        /** @inherited */\n        this.initialized = true;\n    }\n\n    /**\n     * Calculates columns' values\n     * Configuration options are stored in 'opts' property\n     * - 'id' contains ids of elements showing result (array)\n     * - 'col' contains the columns' indexes (array)\n     * - 'operation' contains operation type (array, values: 'sum', 'mean',\n     *   'min', 'max', 'median', 'q1', 'q3')\n     * - 'write_method' array defines which method to use for displaying the\n     *    result (innerHTML, setValue, createTextNode) - default: 'innerHTML'\n     * - 'tot_row_index' defines in which row results are displayed\n     *   (integers array)\n     *\n     * - changes made by Nuovella:\n     * (1) optimized the routine (now it will only process each column once),\n     * (2) added calculations for the median, lower and upper quartile.\n     */\n    calcAll() {\n        let tf = this.tf;\n        if (!tf.isInitialized()) {\n            return;\n        }\n\n        this.onBeforeOperation(tf, this);\n        this.emitter.emit('before-column-operation', tf, this);\n\n        let { colIndexes, operations: colOperations, outputTypes,\n            totRowIndexes, excludeRows, formatResults,\n            decimalPrecisions } = this;\n\n        //nuovella: determine unique list of columns to operate on\n        let uIndexes = [];\n        colIndexes.forEach((val) => {\n            if (uIndexes.indexOf(val) === -1) {\n                uIndexes.push(val);\n            }\n        });\n\n        let nbCols = uIndexes.length,\n            rows = tf.dom().rows,\n            colValues = [];\n\n        for (let u = 0; u < nbCols; u++) {\n            //this retrieves col values\n            //use uIndexes because we only want to pass through this loop\n            //once for each column get the values in this unique column\n            colValues.push(\n                tf.getVisibleColumnData(uIndexes[u], false, excludeRows)\n            );\n\n            let curValues = colValues[u];\n\n            //next: calculate all operations for this column\n            let result = 0,\n                operations = [],\n                precisions = [],\n                labels = [],\n                writeType,\n                formatResult = [],\n                idx = 0;\n\n            for (let k = 0; k < colIndexes.length; k++) {\n                if (colIndexes[k] !== uIndexes[u]) {\n                    continue;\n                }\n                operations[idx] = (colOperations[k] || 'sum').toLowerCase();\n                precisions[idx] = decimalPrecisions[k];\n                labels[idx] = this.labelIds[k];\n                writeType = isArray(outputTypes) ? outputTypes[k] : null;\n                formatResult[idx] =\n                    this.configureFormat(uIndexes[u], formatResults[k]);\n                idx++;\n            }\n\n            for (let i = 0; i < idx; i++) {\n                // emit values before column calculation\n                this.emitter.emit(\n                    'before-column-calc',\n                    tf,\n                    this,\n                    uIndexes[u],\n                    curValues,\n                    operations[i],\n                    precisions[i]\n                );\n\n                result = Number(this.calc(curValues, operations[i], null));\n\n                // emit column calculation result\n                this.emitter.emit(\n                    'column-calc',\n                    tf,\n                    this,\n                    uIndexes[u],\n                    result,\n                    operations[i],\n                    precisions[i]\n                );\n\n                // write result in expected DOM element\n                this.writeResult(\n                    result,\n                    labels[i],\n                    writeType,\n                    precisions[i],\n                    formatResult[i]\n                );\n\n            }//for i\n\n            // row(s) with result are always visible\n            let totRow = totRowIndexes && totRowIndexes[u] ?\n                rows[totRowIndexes[u]] : null;\n            if (totRow) {\n                totRow.style.display = '';\n            }\n        }//for u\n\n        this.onAfterOperation(tf, this);\n        this.emitter.emit('after-column-operation', tf, this);\n    }\n\n    /**\n     * Make desired calculation on specified column.\n     * @param {Number} colIndex Column index\n     * @param {String} [operation=SUM] Operation type\n     * @param {Number} precision Decimal precision\n     * @returns {Number}\n     */\n    columnCalc(colIndex, operation = SUM, precision) {\n        let excludeRows = this.excludeRows || [];\n        let colValues = tf.getVisibleColumnData(colIndex, false, excludeRows);\n\n        return Number(this.calc(colValues, operation, precision));\n    }\n\n    /**\n     * Make calculation on passed values.\n     * @param {Array} values List of values\n     * @param {String} [operation=SUM] Optional operation type\n     * @param {Number} precision Optional result precision\n     * @returns {Number}\n     * @private\n     */\n    calc(colValues, operation = SUM, precision) {\n        let result = 0;\n\n        if (operation === Q1 || operation === Q3 || operation === MEDIAN) {\n            colValues = this.sortColumnValues(colValues, numSortAsc);\n        }\n\n        switch (operation) {\n            case MEAN:\n                result = this.calcMean(colValues);\n                break;\n            case SUM:\n                result = this.calcSum(colValues);\n                break;\n            case MIN:\n                result = this.calcMin(colValues);\n                break;\n            case MAX:\n                result = this.calcMax(colValues);\n                break;\n            case MEDIAN:\n                result = this.calcMedian(colValues);\n                break;\n            case Q1:\n                result = this.calcQ1(colValues);\n                break;\n            case Q3:\n                result = this.calcQ3(colValues);\n                break;\n        }\n\n        return isEmpty(precision) ? result : result.toFixed(precision);\n    }\n\n    /**\n     * Calculate the sum of passed values.\n     * @param {Array} [values=[]] List of values\n     * @returns {Number}\n     */\n    calcSum(values = []) {\n        if (isEmpty(values)) {\n            return 0;\n        }\n        let result = values.reduce((x, y) => Number(x) + Number(y));\n        return result;\n    }\n\n    /**\n     * Calculate the mean of passed values.\n     * @param {Array} [values=[]] List of values\n     * @returns {Number}\n     */\n    calcMean(values = []) {\n        let result = this.calcSum(values) / values.length;\n        return Number(result);\n    }\n\n    /**\n     * Calculate the max value of passed values.\n     * @param {Array} [values=[]] List of values\n     * @returns {Number}\n     */\n    calcMax(values = []) {\n        return Math.max.apply(null, values);\n    }\n\n    /**\n     * Calculate the min value of passed values.\n     * @param {Array} [values=[]] List of values\n     * @returns {Number}\n     */\n    calcMin(values = []) {\n        return Math.min.apply(null, values);\n    }\n\n    /**\n     * Calculate the median of passed values.\n     * @param {Array} [values=[]] List of values\n     * @returns {Number}\n     */\n    calcMedian(values = []) {\n        let nbValues = values.length;\n        let aux = 0;\n        if (nbValues % 2 === 1) {\n            aux = Math.floor(nbValues / 2);\n            return Number(values[aux]);\n        }\n        return (Number(values[nbValues / 2]) +\n            Number(values[((nbValues / 2) - 1)])) / 2;\n    }\n\n    /**\n     * Calculate the lower quartile of passed values.\n     * @param {Array} [values=[]] List of values\n     * @returns {Number}\n     */\n    calcQ1(values = []) {\n        let nbValues = values.length;\n        let posa = 0.0;\n        posa = Math.floor(nbValues / 4);\n        if (4 * posa === nbValues) {\n            return (Number(values[posa - 1]) +\n                Number(values[posa])) / 2;\n        }\n        return Number(values[posa]);\n    }\n\n    /**\n     * Calculate the upper quartile of passed values.\n     * @param {Array} [values=[]] List of values\n     * @returns {Number}\n     */\n    calcQ3(values = []) {\n        let nbValues = values.length;\n        let posa = 0.0;\n        let posb = 0.0;\n        posa = Math.floor(nbValues / 4);\n        if (4 * posa === nbValues) {\n            posb = 3 * posa;\n            return (Number(values[posb]) +\n                Number(values[posb - 1])) / 2;\n        }\n        return Number(values[nbValues - posa - 1]);\n    }\n\n    /**\n     * Sort passed values with supplied sorter function.\n     * @param {Array} [values=[]] List of values to be sorted\n     * @param {Function} sorter Sorter function\n     * @returns {Array}\n     */\n    sortColumnValues(values = [], sorter) {\n        return values.sort(sorter);\n    }\n\n    /**\n     * Write calculation result in passed DOM element with supplied write method\n     * and decimal precision.\n     * @param {Number} [result=0] Calculation result\n     * @param {DOMElement} label DOM element\n     * @param {String} [writeType='innerhtml'] Write method\n     * @param {Number} [precision=2] Applied decimal precision\n     * @private\n     */\n    writeResult(result = 0, label, writeType = 'innerhtml',\n        precision = 2, format = {}) {\n        let labelElm = elm(label);\n\n        if (!labelElm) {\n            return;\n        }\n\n        result = result.toFixed(precision);\n        if (isNaN(result) || !isFinite(result)) {\n            result = '';\n        } else {\n            result = formatNumber(format)(result);\n        }\n\n        switch (writeType.toLowerCase()) {\n            case 'innerhtml':\n                labelElm.innerHTML = result;\n                break;\n            case 'setvalue':\n                labelElm.value = result;\n                break;\n            case 'createtextnode':\n                let oldNode = labelElm.firstChild;\n                let txtNode = createText(result);\n                labelElm.replaceChild(txtNode, oldNode);\n                break;\n        }\n    }\n\n    /**\n     * Configure the format options used to format the operation result based\n     * on column type.\n     * @param {Number} colIndex Column index\n     * @param {Object} [format={}] Format object\n     * @returns {Object}\n     * @private\n     */\n    configureFormat(colIndex, format = {}) {\n        let tf = this.tf;\n        if (tf.hasType(colIndex, [FORMATTED_NUMBER])) {\n            let colType = tf.colTypes[colIndex];\n            if (colType.decimal && !format.decimal) {\n                format.decimal = colType.decimal;\n            }\n            if (colType.thousands && !format.integerSeparator) {\n                format.integerSeparator = colType.thousands;\n            }\n        } else {\n            format.decimal = format.decimal || '';\n            format.integerSeparator = format.integerSeparator || '';\n        }\n        return format;\n    }\n\n    /** Remove extension */\n    destroy() {\n        if (!this.initialized) {\n            return;\n        }\n        // unsubscribe to events\n        this.emitter.off(EVENTS, bound(this.calcAll, this));\n\n        this.initialized = false;\n    }\n\n}\n","import {Feature} from '../../feature';\nimport {\n    addClass, removeClass, createCheckItem, createElm, elm, removeElm,\n    getText, tag\n} from '../../dom';\nimport {isUndef, EMPTY_FN, isNull} from '../../types';\nimport {addEvt, targetEvt, removeEvt} from '../../event';\nimport {root} from '../../root';\nimport {NONE} from '../../const';\nimport {\n    defaultsBool, defaultsStr, defaultsFn, defaultsNb, defaultsArr\n} from '../../settings';\nimport {RIGHT} from '../../modules/toolbar';\n\n/**\n * Columns Visibility extension\n */\nexport default class ColsVisibility extends Feature {\n\n    /**\n     * Creates an instance of ColsVisibility\n     * @param {TableFilter} tf TableFilter instance\n     * @param {Object} Configuration object\n     */\n    constructor(tf, f) {\n        super(tf, ColsVisibility);\n\n        // Configuration object\n        let cfg = this.config;\n\n        /**\n         * Module name\n         * @type {String}\n         */\n        this.name = f.name;\n\n        /**\n         * Module description\n         * @type {String}\n         */\n        this.desc = defaultsStr(f.description, 'Columns visibility manager');\n\n        /**\n         * show/hide columns container element\n         * @private\n         */\n        this.spanEl = null;\n\n        /**\n         * show/hide columns button element\n         * @private\n         */\n        this.btnEl = null;\n\n        /**\n         * show/hide columns main container element\n         * @private\n         */\n        this.contEl = null;\n\n        /**\n         * Enable tick to hide a column, defaults to true\n         * @type {Boolean}\n         */\n        this.tickToHide = defaultsBool(f.tick_to_hide, true);\n\n        /**\n         * Enable columns manager UI, defaults to true\n         * @type {Boolean}\n         */\n        this.manager = defaultsBool(f.manager, true);\n\n        /**\n         * Headers HTML table reference only if headers are external\n         * @type {DOMElement}\n         */\n        this.headersTbl = f.headers_table || null;\n\n        /**\n         * Headers row index only if headers are external\n         * @type {Number}\n         */\n        this.headersIndex = defaultsNb(f.headers_index, 1);\n\n        /**\n         * ID of main container element\n         * @type {String}\n         */\n        this.contElTgtId = defaultsStr(f.container_target_id, null);\n\n        /**\n         * Alternative text for column headers in column manager UI\n         * @type {Array}\n         */\n        this.headersText = defaultsArr(f.headers_text, []);\n\n        /**\n         * ID of button's container element\n         * @type {String}\n         */\n        this.btnTgtId = defaultsStr(f.btn_target_id, null);\n\n        /**\n         * Button's text, defaults to Columns&#9660;\n         * @type {String}\n         */\n        this.btnText = defaultsStr(f.btn_text, 'Columns&#9660;');\n\n        /**\n         * Button's inner HTML\n         * @type {String}\n         */\n        this.btnHtml = defaultsStr(f.btn_html, null);\n\n        /**\n         * Css class for button\n         * @type {String}\n         */\n        this.btnCssClass = defaultsStr(f.btn_css_class, 'colVis');\n\n        /**\n         * Columns manager UI close link text, defaults to 'Close'\n         * @type {String}\n         */\n        this.btnCloseText = defaultsStr(f.btn_close_text, 'Close');\n\n        /**\n         * Columns manager UI close link HTML\n         * @type {String}\n         */\n        this.btnCloseHtml = defaultsStr(f.btn_close_html, null);\n\n        /**\n         * Css for columns manager UI close link\n         * @type {String}\n         */\n        this.btnCloseCssClass = defaultsStr(f.btn_close_css_class,\n            this.btnCssClass);\n\n        /**\n         * Extension's stylesheet filename\n         * @type {String}\n         */\n        this.stylesheet = defaultsStr(f.stylesheet, 'colsVisibility.css');\n\n        /**\n         * Css for columns manager UI span\n         * @type {String}\n         */\n        this.spanCssClass = defaultsStr(f.span_css_class, 'colVisSpan');\n\n        /**\n         * Css for columns manager UI main container\n         * @type {String}\n         */\n        this.contCssClass = defaultsStr(f.cont_css_class, 'colVisCont');\n\n        /**\n         * Css for columns manager UI checklist (ul)\n         * @type {String}\n         */\n        this.listCssClass = defaultsStr(cfg.list_css_class, 'cols_checklist');\n\n        /**\n         * Css for columns manager UI checklist item (li)\n         * @type {String}\n         */\n        this.listItemCssClass = defaultsStr(cfg.checklist_item_css_class,\n            'cols_checklist_item');\n\n        /**\n         * Css for columns manager UI checklist item selected state (li)\n         * @type {String}\n         */\n        this.listSlcItemCssClass = defaultsStr(\n            cfg.checklist_selected_item_css_class,\n            'cols_checklist_slc_item'\n        );\n\n        /**\n         * Text preceding the columns list, defaults to 'Hide' or 'Show'\n         * depending on tick mode (tick_to_hide option)\n         * @type {String}\n         */\n        this.text = defaultsStr(f.text, this.tickToHide ? 'Hide: ' : 'Show: ');\n\n        /**\n         * List of columns indexes to be hidden at initialization\n         * @type {Array}\n         */\n        this.atStart = defaultsArr(f.at_start, []);\n\n        /**\n         * Enable hover behaviour on columns manager button/link\n         * @type {Boolean}\n         */\n        this.enableHover = Boolean(f.enable_hover);\n\n        /**\n         * Enable select all option, disabled by default\n         * @type {Boolean}\n         */\n        this.enableTickAll = Boolean(f.enable_tick_all);\n\n        /**\n         * Text for select all option, defaults to 'Select all:'\n         * @type {String}\n         */\n        this.tickAllText = defaultsStr(f.tick_all_text, 'Select all:');\n\n        /**\n         * Default position in toolbar ('left'|'center'|'right')\n         * @type {String}\n         */\n        this.toolbarPosition = defaultsStr(f.toolbar_position, RIGHT);\n\n        /**\n         * List of indexes of hidden columns\n         * @private\n         */\n        this.hiddenCols = [];\n\n        /**\n         * Bound mouseup wrapper\n         * @private\n         */\n        this.boundMouseup = null;\n\n        /**\n         * Callback fired when the extension is initialized\n         * @type {Function}\n         */\n        this.onLoaded = defaultsFn(f.on_loaded, EMPTY_FN);\n\n        /**\n         * Callback fired before the columns manager is opened\n         * @type {Function}\n         */\n        this.onBeforeOpen = defaultsFn(f.on_before_open, EMPTY_FN);\n\n        /**\n         * Callback fired after the columns manager is opened\n         * @type {Function}\n         */\n        this.onAfterOpen = defaultsFn(f.on_after_open, EMPTY_FN);\n\n        /**\n         * Callback fired before the columns manager is closed\n         * @type {Function}\n         */\n        this.onBeforeClose = defaultsFn(f.on_before_close, EMPTY_FN);\n\n        /**\n         * Callback fired after the columns manager is closed\n         * @type {Function}\n         */\n        this.onAfterClose = defaultsFn(f.on_after_close, EMPTY_FN);\n\n        /**\n         * Callback fired before a column is hidden\n         * @type {Function}\n         */\n        this.onBeforeColHidden = defaultsFn(f.on_before_col_hidden, EMPTY_FN);\n\n        /**\n         * Callback fired after a column is hidden\n         * @type {Function}\n         */\n        this.onAfterColHidden = defaultsFn(f.on_after_col_hidden, EMPTY_FN);\n\n        /**\n         * Callback fired before a column is displayed\n         * @type {Function}\n         */\n        this.onBeforeColDisplayed = defaultsFn(f.on_before_col_displayed,\n            EMPTY_FN);\n\n        /**\n         * Callback fired after a column is displayed\n         * @type {Function}\n         */\n        this.onAfterColDisplayed = defaultsFn(f.on_after_col_displayed,\n            EMPTY_FN);\n\n        //Grid layout support\n        if (tf.gridLayout) {\n            this.headersTbl = tf.feature('gridLayout').headTbl; //headers table\n            this.headersIndex = 0; //headers index\n        }\n\n        //Loads extension stylesheet\n        tf.import(f.name + 'Style', tf.getStylePath() + this.stylesheet, null,\n            'link');\n\n        this.enable();\n    }\n\n    /**\n     * Mouse-up event handler handling popup auto-close behaviour\n     * @private\n     */\n    onMouseup(evt) {\n        let targetElm = targetEvt(evt);\n\n        while (targetElm && targetElm !== this.contEl\n            && targetElm !== this.btnEl) {\n            targetElm = targetElm.parentNode;\n        }\n\n        if (targetElm !== this.contEl && targetElm !== this.btnEl) {\n            this.toggle();\n        }\n\n        return;\n    }\n\n    /**\n     * Toggle columns manager UI\n     */\n    toggle() {\n        // ensure mouseup event handler is removed\n        removeEvt(root, 'mouseup', this.boundMouseup);\n\n        let contDisplay = this.contEl.style.display;\n\n        if (contDisplay !== 'inline') {\n            this.onBeforeOpen(this);\n        }\n        if (contDisplay === 'inline') {\n            this.onBeforeClose(this);\n        }\n\n        this.contEl.style.display = contDisplay === 'inline' ?\n            NONE : 'inline';\n\n        if (contDisplay !== 'inline') {\n            this.onAfterOpen(this);\n            addEvt(root, 'mouseup', this.boundMouseup);\n        }\n        if (contDisplay === 'inline') {\n            this.onAfterClose(this);\n        }\n    }\n\n    /**\n     * Check an item in columns manager UI\n     * @private\n     */\n    checkItem(lbl) {\n        let li = lbl.parentNode;\n        if (!li || !lbl) {\n            return;\n        }\n        let isChecked = lbl.firstChild.checked;\n        let colIndex = lbl.firstChild.getAttribute('id').split('_')[1];\n        colIndex = parseInt(colIndex, 10);\n        if (isChecked) {\n            addClass(li, this.listSlcItemCssClass);\n        } else {\n            removeClass(li, this.listSlcItemCssClass);\n        }\n\n        let hide = false;\n        if ((this.tickToHide && isChecked) ||\n            (!this.tickToHide && !isChecked)) {\n            hide = true;\n        }\n        this.setHidden(colIndex, hide);\n    }\n\n    /**\n     * Initializes ColsVisibility instance\n     */\n    init() {\n        if (this.initialized || !this.manager) {\n            return;\n        }\n\n        this.emitter.emit('initializing-extension', this,\n            !isNull(this.btnTgtId));\n\n        this.emitter.on(['hide-column'],\n            (tf, colIndex) => this.hideCol(colIndex));\n\n        this.buildBtn();\n        this.buildManager();\n\n        /** @inherited */\n        this.initialized = true;\n\n        this.boundMouseup = this.onMouseup.bind(this);\n\n        this.emitter.emit('columns-visibility-initialized', this.tf, this);\n        this.emitter.emit('extension-initialized', this);\n\n        // Hide columns at start at very end of initialization, do not move\n        // as order is important\n        this._hideAtStart();\n    }\n\n    /**\n     * Build main button UI\n     */\n    buildBtn() {\n        if (this.btnEl) {\n            return;\n        }\n        let tf = this.tf;\n        let span = createElm('span');\n        span.className = this.spanCssClass;\n\n        // Container element (rdiv or custom element)\n        let targetEl = !this.btnTgtId ?\n            tf.feature('toolbar').container(this.toolbarPosition) :\n            elm(this.btnTgtId);\n\n        if (!this.btnTgtId) {\n            let firstChild = targetEl.firstChild;\n            firstChild.parentNode.insertBefore(span, firstChild);\n        } else {\n            targetEl.appendChild(span);\n        }\n\n        if (!this.btnHtml) {\n            let btn = createElm('a', ['href', 'javascript:;']);\n            btn.className = this.btnCssClass;\n            btn.title = this.desc;\n\n            btn.innerHTML = this.btnText;\n            span.appendChild(btn);\n            if (!this.enableHover) {\n                addEvt(btn, 'click', (evt) => this.toggle(evt));\n            } else {\n                addEvt(btn, 'mouseover', (evt) => this.toggle(evt));\n            }\n        } else { // Custom html\n            span.innerHTML = this.btnHtml;\n            let colVisEl = span.firstChild;\n            if (!this.enableHover) {\n                addEvt(colVisEl, 'click', (evt) => this.toggle(evt));\n            } else {\n                addEvt(colVisEl, 'mouseover', (evt) => this.toggle(evt));\n            }\n        }\n\n        this.spanEl = span;\n        this.btnEl = this.spanEl.firstChild;\n\n        this.onLoaded(this);\n    }\n\n    /**\n     * Build columns manager UI\n     */\n    buildManager() {\n        let tf = this.tf;\n\n        let container = !this.contElTgtId ?\n            createElm('div') :\n            elm(this.contElTgtId);\n        container.className = this.contCssClass;\n\n        //Extension description\n        let extNameLabel = createElm('p');\n        extNameLabel.innerHTML = this.text;\n        container.appendChild(extNameLabel);\n\n        //Headers list\n        let ul = createElm('ul');\n        ul.className = this.listCssClass;\n\n        let tbl = this.headersTbl || tf.dom();\n        let headerIndex = this.headersTbl ?\n            this.headersIndex : tf.getHeadersRowIndex();\n        let headerRow = tbl.rows[headerIndex];\n\n        //Tick all option\n        if (this.enableTickAll) {\n            let li = createCheckItem('col__' + tf.id, this.tickAllText,\n                this.tickAllText);\n            addClass(li, this.listItemCssClass);\n            ul.appendChild(li);\n            li.check.checked = !this.tickToHide;\n\n            addEvt(li.check, 'click', () => {\n                for (let h = 0; h < headerRow.cells.length; h++) {\n                    let itm = elm('col_' + h + '_' + tf.id);\n                    if (itm && li.check.checked !== itm.checked) {\n                        itm.click();\n                        itm.checked = li.check.checked;\n                    }\n                }\n            });\n        }\n\n        for (let i = 0; i < headerRow.cells.length; i++) {\n            let cell = headerRow.cells[i];\n            let cellText = this.headersText[i] || this._getHeaderText(cell);\n            let liElm = createCheckItem('col_' + i + '_' + tf.id, cellText,\n                cellText);\n            addClass(liElm, this.listItemCssClass);\n            if (!this.tickToHide) {\n                addClass(liElm, this.listSlcItemCssClass);\n            }\n            ul.appendChild(liElm);\n            if (!this.tickToHide) {\n                liElm.check.checked = true;\n            }\n\n            addEvt(liElm.check, 'click', (evt) => {\n                let elm = targetEvt(evt);\n                let lbl = elm.parentNode;\n                this.checkItem(lbl);\n            });\n        }\n\n        //separator\n        let p = createElm('p', ['align', 'center']);\n        let btn;\n        //Close link\n        if (!this.btnCloseHtml) {\n            btn = createElm('a', ['href', 'javascript:;']);\n            btn.className = this.btnCloseCssClass;\n            btn.innerHTML = this.btnCloseText;\n            addEvt(btn, 'click', (evt) => this.toggle(evt));\n            p.appendChild(btn);\n        } else {\n            p.innerHTML = this.btnCloseHtml;\n            btn = p.firstChild;\n            addEvt(btn, 'click', (evt) => this.toggle(evt));\n        }\n\n        container.appendChild(ul);\n        container.appendChild(p);\n\n        this.btnEl.parentNode.insertBefore(container, this.btnEl);\n        this.contEl = container;\n    }\n\n    /**\n     * Hide or show specified columns\n     * @param {Number} colIndex Column index\n     * @param {Boolean} hide    Hide column if true or show if false\n     */\n    setHidden(colIndex, hide) {\n        let tf = this.tf;\n        let tbl = tf.dom();\n\n        if (hide) {\n            this.onBeforeColHidden(this, colIndex);\n        } else {\n            this.onBeforeColDisplayed(this, colIndex);\n        }\n\n        this._hideElements(tbl, colIndex, hide);\n        if (this.headersTbl) {\n            this._hideElements(this.headersTbl, colIndex, hide);\n        }\n\n        let hiddenCols = this.hiddenCols;\n        let itemIndex = hiddenCols.indexOf(colIndex);\n        if (hide) {\n            if (itemIndex === -1) {\n                this.hiddenCols.push(colIndex);\n            }\n        } else {\n            if (itemIndex !== -1) {\n                this.hiddenCols.splice(itemIndex, 1);\n            }\n        }\n\n        if (hide) {\n            this.onAfterColHidden(this, colIndex);\n            this.emitter.emit('column-hidden', tf, this, colIndex,\n                this.hiddenCols);\n        } else {\n            this.onAfterColDisplayed(this, colIndex);\n            this.emitter.emit('column-shown', tf, this, colIndex,\n                this.hiddenCols);\n        }\n    }\n\n    /**\n     * Show specified column\n     * @param  {Number} colIndex Column index\n     */\n    showCol(colIndex) {\n        if (isUndef(colIndex) || !this.isColHidden(colIndex)) {\n            return;\n        }\n        if (this.manager && this.contEl) {\n            let itm = elm('col_' + colIndex + '_' + this.tf.id);\n            if (itm) {\n                itm.click();\n            }\n        } else {\n            this.setHidden(colIndex, false);\n        }\n    }\n\n    /**\n     * Hide specified column\n     * @param  {Number} colIndex Column index\n     */\n    hideCol(colIndex) {\n        if (isUndef(colIndex) || this.isColHidden(colIndex)) {\n            return;\n        }\n        if (this.manager && this.contEl) {\n            let itm = elm('col_' + colIndex + '_' + this.tf.id);\n            if (itm) {\n                itm.click();\n            }\n        } else {\n            this.setHidden(colIndex, true);\n        }\n    }\n\n    /**\n     * Determine if specified column is hidden\n     * @param  {Number} colIndex Column index\n     */\n    isColHidden(colIndex) {\n        if (this.hiddenCols.indexOf(colIndex) !== -1) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Toggle visibility of specified column\n     * @param  {Number} colIndex Column index\n     */\n    toggleCol(colIndex) {\n        if (isUndef(colIndex) || this.isColHidden(colIndex)) {\n            this.showCol(colIndex);\n        } else {\n            this.hideCol(colIndex);\n        }\n    }\n\n    /**\n     * Return the indexes of the columns currently hidden\n     * @return {Array} column indexes\n     */\n    getHiddenCols() {\n        return this.hiddenCols;\n    }\n\n    /**\n     * Remove the columns manager\n     */\n    destroy() {\n        if (!this.initialized) {\n            return;\n        }\n        if (elm(this.contElTgtId)) {\n            elm(this.contElTgtId).innerHTML = '';\n        } else {\n            this.contEl.innerHTML = '';\n            removeElm(this.contEl);\n            this.contEl = null;\n        }\n        this.btnEl.innerHTML = '';\n        removeElm(this.btnEl);\n        this.btnEl = null;\n\n        this.emitter.off(['hide-column'],\n            (tf, colIndex) => this.hideCol(colIndex));\n\n        this.boundMouseup = null;\n\n        this.initialized = false;\n    }\n\n    _getHeaderText(cell) {\n        if (!cell.hasChildNodes) {\n            return '';\n        }\n\n        for (let i = 0; i < cell.childNodes.length; i++) {\n            let n = cell.childNodes[i];\n            if (n.nodeType === 3) {\n                return n.nodeValue;\n            } else if (n.nodeType === 1) {\n                if (n.id && n.id.indexOf('popUp') !== -1) {\n                    continue;\n                } else {\n                    return getText(n);\n                }\n            }\n            continue;\n        }\n        return '';\n    }\n\n    _hideElements(tbl, colIdx, hide) {\n        this._hideCells(tbl, colIdx, hide);\n        this._hideCol(tbl, colIdx, hide);\n    }\n\n    _hideCells(tbl, colIdx, hide) {\n        for (let i = 0; i < tbl.rows.length; i++) {\n            let row = tbl.rows[i];\n            let cell = row.cells[colIdx];\n            if (cell) {\n                cell.style.display = hide ? NONE : '';\n            }\n        }\n    }\n\n    _hideCol(tbl, colIdx, hide) {\n        let colElms = tag(tbl, 'col');\n        if (colElms.length === 0) {\n            return;\n        }\n        colElms[colIdx].style.display = hide ? NONE : '';\n    }\n\n    _hideAtStart() {\n        this.atStart.forEach((colIdx) => {\n            this.hideCol(colIdx);\n        });\n    }\n}\n","import {Feature} from '../../feature';\nimport {createElm, removeElm, elm} from '../../dom';\nimport {EMPTY_FN, isNull} from '../../types';\nimport {addEvt} from '../../event';\nimport {\n    defaultsBool, defaultsStr, defaultsFn, defaultsNb,\n} from '../../settings';\nimport {RIGHT} from '../../modules/toolbar';\n\n/**\n * Filters Visibility extension\n */\nexport default class FiltersVisibility extends Feature {\n\n    /**\n     * Creates an instance of FiltersVisibility\n     * @param {TableFilter} tf TableFilter instance\n     * @param {Object} Configuration object\n     */\n    constructor(tf, f) {\n        super(tf, FiltersVisibility);\n\n        /**\n         * Module name\n         * @type {String}\n         */\n        this.name = f.name;\n\n        /**\n         * Module description\n         * @type {String}\n         */\n        this.desc = defaultsStr(f.description,\n            'Filters row visibility manager');\n\n        /**\n         * Extension's stylesheet filename\n         * @type {String}\n         */\n        this.stylesheet = defaultsStr(f.stylesheet , 'filtersVisibility.css');\n\n        /**\n         * Expand icon filename\n         * @type {String}\n         */\n        this.icnExpand = defaultsStr(f.expand_icon_name, 'icn_exp.png');\n\n        /**\n         * Collapse icon filename\n         * @type {String}\n         */\n        this.icnCollapse = defaultsStr(f.collapse_icon_name, 'icn_clp.png');\n\n        /**\n         * Main container element\n         * @private\n         */\n        this.contEl = null;\n\n        /**\n         * Button element\n         * @private\n         */\n        this.btnEl = null;\n\n        /**\n         * Expand icon HTML\n         * @private\n         */\n        this.icnExpandHtml = '<img src=\"' + tf.themesPath + this.icnExpand +\n            '\" alt=\"Expand filters\" >';\n\n        /**\n         * Collapse icon HTML\n         * @private\n         */\n        this.icnCollapseHtml = '<img src=\"' + tf.themesPath + this.icnCollapse +\n            '\" alt=\"Collapse filters\" >';\n\n        /**\n         * Default text\n         * @private\n         */\n        this.defaultText = 'Toggle filters';\n\n        /**\n         * ID of main container element\n         * @type {String}\n         */\n        this.targetId = f.target_id || null;\n\n        /**\n         * Enable expand/collapse icon, defaults to true\n         * @type {Boolean}\n         */\n        this.enableIcon = defaultsBool(f.enable_icon, true);\n\n        /**\n         * Custom text for button\n         * @type {String}\n         */\n        this.btnText = defaultsStr(f.btn_text, '');\n\n        /**\n         * Collapse button HTML\n         * @private\n         */\n        this.collapseBtnHtml = this.enableIcon ?\n            this.icnCollapseHtml + this.btnText :\n            this.btnText || this.defaultText;\n\n        /**\n         * Expand button HTML\n         * @private\n         */\n        this.expandBtnHtml = this.enableIcon ?\n            this.icnExpandHtml + this.btnText :\n            this.btnText || this.defaultText;\n\n        /**\n         * Button's custom HTML\n         * @type {String}\n         */\n        this.btnHtml = defaultsStr(f.btn_html, null);\n\n        /**\n         * Css class for expand/collapse filters button\n         * @type {String}\n         */\n        this.btnCssClass = defaultsStr(f.btn_css_class, 'btnExpClpFlt');\n\n        /**\n         * Css class for main container\n         * @type {String}\n         */\n        this.contCssClass = defaultsStr(f.cont_css_class, 'expClpFlt');\n\n        /**\n         * Filters row index\n         * @type {Number}\n         */\n        this.filtersRowIndex = defaultsNb(f.filters_row_index,\n            tf.getFiltersRowIndex());\n\n        /**\n         * Make filters visible at initialization, defaults to true\n         * @type {Boolean}\n         */\n        this.visibleAtStart = defaultsNb(f.visible_at_start, true);\n\n        /**\n         * Default position in toolbar ('left'|'center'|'right')\n         * @type {String}\n         */\n        this.toolbarPosition = defaultsStr(f.toolbar_position, RIGHT);\n\n        /**\n         * Callback fired before filters row is shown\n         * @type {Function}\n         */\n        this.onBeforeShow = defaultsFn(f.on_before_show, EMPTY_FN);\n\n        /**\n         * Callback fired after filters row is shown\n         * @type {Function}\n         */\n        this.onAfterShow = defaultsFn(f.on_after_show, EMPTY_FN);\n\n        /**\n         * Callback fired before filters row is hidden\n         * @type {Function}\n         */\n        this.onBeforeHide = defaultsFn(f.on_before_hide, EMPTY_FN);\n\n        /**\n         * Callback fired after filters row is hidden\n         * @type {Function}\n         */\n        this.onAfterHide = defaultsFn(f.on_after_hide, EMPTY_FN);\n\n        //Import extension's stylesheet\n        tf.import(f.name + 'Style', tf.getStylePath() + this.stylesheet, null,\n            'link');\n\n        this.enable();\n    }\n\n    /**\n     * Initialise extension\n     */\n    init() {\n        if (this.initialized) {\n            return;\n        }\n\n        this.emitter.emit('initializing-extension', this,\n            !isNull(this.targetId));\n\n        this.buildUI();\n\n        /** @inherited */\n        this.initialized = true;\n\n        this.emitter.on(['show-filters'], (tf, visible) => this.show(visible));\n        this.emitter.emit('filters-visibility-initialized', this.tf, this);\n        this.emitter.emit('extension-initialized', this);\n    }\n\n    /**\n     * Build UI elements\n     */\n    buildUI() {\n        let tf = this.tf;\n        let span = createElm('span');\n        span.className = this.contCssClass;\n\n        // Container element (rdiv or custom element)\n        let targetEl = !this.targetId ?\n            tf.feature('toolbar').container(this.toolbarPosition) :\n            elm(this.targetId);\n\n        if (!this.targetId) {\n            let firstChild = targetEl.firstChild;\n            firstChild.parentNode.insertBefore(span, firstChild);\n        } else {\n            targetEl.appendChild(span);\n        }\n\n        let btn;\n        if (!this.btnHtml) {\n            btn = createElm('a', ['href', 'javascript:void(0);']);\n            btn.className = this.btnCssClass;\n            btn.title = this.btnText || this.defaultText;\n            btn.innerHTML = this.collapseBtnHtml;\n            span.appendChild(btn);\n        } else { // Custom html\n            span.innerHTML = this.btnHtml;\n            btn = span.firstChild;\n        }\n\n        addEvt(btn, 'click', () => this.toggle());\n\n        this.contEl = span;\n        this.btnEl = btn;\n\n        if (!this.visibleAtStart) {\n            this.toggle();\n        }\n    }\n\n    /**\n     * Toggle filters visibility\n     */\n    toggle() {\n        let tf = this.tf;\n        let tbl = tf.gridLayout ? tf.feature('gridLayout').headTbl : tf.dom();\n        let fltRow = tbl.rows[this.filtersRowIndex];\n        let isDisplayed = fltRow.style.display === '';\n\n        this.show(!isDisplayed);\n    }\n\n    /**\n     * Show or hide filters\n     *\n     * @param {boolean} [visible=true] Visibility flag\n     */\n    show(visible = true) {\n        let tf = this.tf;\n        let tbl = tf.gridLayout ? tf.feature('gridLayout').headTbl : tf.dom();\n        let fltRow = tbl.rows[this.filtersRowIndex];\n\n        if (visible) {\n            this.onBeforeShow(this);\n        }\n        if (!visible) {\n            this.onBeforeHide(this);\n        }\n\n        fltRow.style.display = visible ? '' : 'none';\n        if (this.enableIcon && !this.btnHtml) {\n            this.btnEl.innerHTML = visible ?\n                this.collapseBtnHtml : this.expandBtnHtml;\n        }\n\n        if (visible) {\n            this.onAfterShow(this);\n        }\n        if (!visible) {\n            this.onAfterHide(this);\n        }\n\n        this.emitter.emit('filters-toggled', tf, this, visible);\n    }\n\n    /**\n     * Destroy the UI\n     */\n    destroy() {\n        if (!this.initialized) {\n            return;\n        }\n\n        this.emitter.off(['show-filters'], (tf, visible) => this.show(visible));\n\n        this.btnEl.innerHTML = '';\n        removeElm(this.btnEl);\n        this.btnEl = null;\n\n        this.contEl.innerHTML = '';\n        removeElm(this.contEl);\n        this.contEl = null;\n        this.initialized = false;\n    }\n\n}\n","import {Feature} from '../../feature';\nimport {isUndef, isObj, EMPTY_FN} from '../../types';\nimport {createElm, elm, tag} from '../../dom';\nimport {addEvt, bound} from '../../event';\nimport {parse as parseNb} from '../../number';\nimport {\n    NONE, CELL_TAG, HEADER_TAG, STRING, NUMBER, DATE, FORMATTED_NUMBER,\n    IP_ADDRESS\n} from '../../const';\nimport {defaultsStr, defaultsFn, defaultsArr} from '../../settings';\n\n/**\n * SortableTable Adapter module\n */\nexport default class AdapterSortableTable extends Feature {\n\n    /**\n     * Creates an instance of AdapterSortableTable\n     * @param {TableFilter} tf TableFilter instance\n     * @param {Object} opts Configuration object\n     */\n    constructor(tf, opts) {\n        super(tf, AdapterSortableTable);\n\n        /**\n         * Module name\n         * @type {String}\n         */\n        this.name = opts.name;\n\n        /**\n         * Module description\n         * @type {String}\n         */\n        this.desc = defaultsStr(opts.description, 'Sortable table');\n\n        /**\n         * Indicate whether table previously sorted\n         * @type {Boolean}\n         * @private\n         */\n        this.sorted = false;\n\n        /**\n         * List of sort type per column basis\n         * @type {Array}\n         */\n        this.sortTypes = defaultsArr(opts.types, tf.colTypes);\n\n        /**\n         * Column to be sorted at initialization, ie:\n         * sort_col_at_start: [1, true]\n         * @type {Array}\n         */\n        this.sortColAtStart = defaultsArr(opts.sort_col_at_start, null);\n\n        /**\n         * Enable asynchronous sort, if triggers are external\n         * @type {Boolean}\n         */\n        this.asyncSort = Boolean(opts.async_sort);\n\n        /**\n         * List of element IDs triggering sort on a per column basis\n         * @type {Array}\n         */\n        this.triggerIds = defaultsArr(opts.trigger_ids, []);\n\n        // edit .sort-arrow.descending / .sort-arrow.ascending in\n        // tablefilter.css to reflect any path change\n        /**\n         * Path to images\n         * @type {String}\n         */\n        this.imgPath = defaultsStr(opts.images_path, tf.themesPath);\n\n        /**\n         * Blank image file name\n         * @type {String}\n         */\n        this.imgBlank = defaultsStr(opts.image_blank, 'blank.png');\n\n        /**\n         * Css class for sort indicator image\n         * @type {String}\n         */\n        this.imgClassName = defaultsStr(opts.image_class_name, 'sort-arrow');\n\n        /**\n         * Css class for ascending sort indicator image\n         * @type {String}\n         */\n        this.imgAscClassName = defaultsStr(opts.image_asc_class_name,\n            'ascending');\n\n        /**\n         * Css class for descending sort indicator image\n         * @type {String}\n         */\n        this.imgDescClassName = defaultsStr(opts.image_desc_class_name,\n            'descending');\n\n        /**\n         * Cell attribute key storing custom value used for sorting\n         * @type {String}\n         */\n        this.customKey = defaultsStr(opts.custom_key, 'data-tf-sortKey');\n\n        /**\n         * Callback fired when sort extension is instanciated\n         * @type {Function}\n         */\n        this.onSortLoaded = defaultsFn(opts.on_sort_loaded, EMPTY_FN);\n\n        /**\n         * Callback fired before a table column is sorted\n         * @type {Function}\n         */\n        this.onBeforeSort = defaultsFn(opts.on_before_sort, EMPTY_FN);\n\n        /**\n         * Callback fired after a table column is sorted\n         * @type {Function}\n         */\n        this.onAfterSort = defaultsFn(opts.on_after_sort, EMPTY_FN);\n\n        /**\n         * SortableTable instance\n         * @private\n         */\n        this.stt = null;\n\n        this.enable();\n    }\n\n    /**\n     * Initializes AdapterSortableTable instance\n     */\n    init() {\n        if (this.initialized) {\n            return;\n        }\n        let tf = this.tf;\n        let adpt = this;\n\n        // SortableTable class sanity check (sortabletable.js)\n        if (isUndef(SortableTable)) {\n            throw new Error('SortableTable class not found.');\n        }\n\n        // Add any date format if needed\n        this.emitter.emit('add-date-type-formats', this.tf, this.sortTypes);\n\n        this.overrideSortableTable();\n        this.setSortTypes();\n\n        this.onSortLoaded(tf, this);\n\n        /*** SortableTable callbacks ***/\n        this.stt.onbeforesort = function () {\n            adpt.onBeforeSort(tf, adpt.stt.sortColumn);\n\n            /*** sort behaviour for paging ***/\n            if (tf.paging) {\n                tf.feature('paging').disable();\n            }\n        };\n\n        this.stt.onsort = function () {\n            adpt.sorted = true;\n\n            //sort behaviour for paging\n            if (tf.paging) {\n                let paginator = tf.feature('paging');\n                // recalculate valid rows index as sorting may have change it\n                tf.getValidRows(true);\n                paginator.enable();\n                paginator.setPage(paginator.getPage());\n            }\n\n            adpt.onAfterSort(tf, adpt.stt.sortColumn, adpt.stt.descending);\n            adpt.emitter.emit('column-sorted', tf, adpt.stt.sortColumn,\n                adpt.stt.descending);\n        };\n\n        // Column sort at start\n        let sortColAtStart = adpt.sortColAtStart;\n        if (sortColAtStart) {\n            this.stt.sort(sortColAtStart[0], sortColAtStart[1]);\n        }\n\n        this.emitter.on(['sort'], bound(this.sortByColumnIndexHandler, this));\n\n        /** @inherited */\n        this.initialized = true;\n\n        this.emitter.emit('sort-initialized', tf, this);\n    }\n\n    /**\n     * Sort specified column\n     * @param {Number} colIdx Column index\n     * @param {Boolean} desc Optional: descending manner\n     */\n    sortByColumnIndex(colIdx, desc) {\n        this.stt.sort(colIdx, desc);\n    }\n\n    /** @private */\n    sortByColumnIndexHandler(tf, colIdx, desc) {\n        this.sortByColumnIndex(colIdx, desc);\n    }\n\n    /**\n     * Set SortableTable overrides for TableFilter integration\n     */\n    overrideSortableTable() {\n        let adpt = this,\n            tf = this.tf;\n\n        /**\n         * Overrides headerOnclick method in order to handle th event\n         * @param  {Object} e [description]\n         */\n        SortableTable.prototype.headerOnclick = function (evt) {\n            if (!adpt.initialized) {\n                return;\n            }\n\n            // find Header element\n            let el = evt.target || evt.srcElement;\n\n            while (el.tagName !== CELL_TAG && el.tagName !== HEADER_TAG) {\n                el = el.parentNode;\n            }\n\n            this.sort(\n                SortableTable.msie ?\n                    SortableTable.getCellIndex(el) : el.cellIndex\n            );\n        };\n\n        /**\n         * Overrides getCellIndex IE returns wrong cellIndex when columns are\n         * hidden\n         * @param  {Object} oTd TD element\n         * @return {Number}     Cell index\n         */\n        SortableTable.getCellIndex = function (oTd) {\n            let cells = oTd.parentNode.cells,\n                l = cells.length, i;\n            for (i = 0; cells[i] !== oTd && i < l; i++) { }\n            return i;\n        };\n\n        /**\n         * Overrides initHeader in order to handle filters row position\n         * @param  {Array} oSortTypes\n         */\n        SortableTable.prototype.initHeader = function (oSortTypes) {\n            let stt = this;\n            if (!stt.tHead) {\n                if (tf.gridLayout) {\n                    stt.tHead = tf.feature('gridLayout').headTbl.tHead;\n                } else {\n                    return;\n                }\n            }\n\n            stt.headersRow = tf.headersRow;\n            let cells = stt.tHead.rows[stt.headersRow].cells;\n            stt.sortTypes = oSortTypes || [];\n            let l = cells.length;\n            let img, c;\n\n            for (let i = 0; i < l; i++) {\n                c = cells[i];\n                if (stt.sortTypes[i] !== null && stt.sortTypes[i] !== 'None') {\n                    c.style.cursor = 'pointer';\n                    img = createElm('img',\n                        ['src', adpt.imgPath + adpt.imgBlank]);\n                    c.appendChild(img);\n                    if (stt.sortTypes[i] !== null) {\n                        c.setAttribute('_sortType', stt.sortTypes[i]);\n                    }\n                    addEvt(c, 'click', stt._headerOnclick);\n                } else {\n                    c.setAttribute('_sortType', oSortTypes[i]);\n                    c._sortType = 'None';\n                }\n            }\n            stt.updateHeaderArrows();\n        };\n\n        /**\n         * Overrides updateHeaderArrows in order to handle arrows indicators\n         */\n        SortableTable.prototype.updateHeaderArrows = function () {\n            let stt = this;\n            let cells, l, img;\n\n            // external headers\n            if (adpt.asyncSort && adpt.triggerIds.length > 0) {\n                let triggers = adpt.triggerIds;\n                cells = [];\n                l = triggers.length;\n                for (let j = 0; j < l; j++) {\n                    cells.push(elm(triggers[j]));\n                }\n            } else {\n                if (!this.tHead) {\n                    return;\n                }\n                cells = stt.tHead.rows[stt.headersRow].cells;\n                l = cells.length;\n            }\n            for (let i = 0; i < l; i++) {\n                let cell = cells[i];\n                if (!cell) {\n                    continue;\n                }\n                let cellAttr = cell.getAttribute('_sortType');\n                if (cellAttr !== null && cellAttr !== 'None') {\n                    img = cell.lastChild || cell;\n                    if (img.nodeName.toLowerCase() !== 'img') {\n                        img = createElm('img',\n                            ['src', adpt.imgPath + adpt.imgBlank]);\n                        cell.appendChild(img);\n                    }\n                    if (i === stt.sortColumn) {\n                        img.className = adpt.imgClassName + ' ' +\n                            (this.descending ?\n                                adpt.imgDescClassName :\n                                adpt.imgAscClassName);\n                    } else {\n                        img.className = adpt.imgClassName;\n                    }\n                }\n            }\n        };\n\n        /**\n         * Overrides getRowValue for custom key value feature\n         * @param  {Object} oRow    Row element\n         * @param  {String} sType\n         * @param  {Number} nColumn\n         * @return {String}\n         */\n        SortableTable.prototype.getRowValue = function (oRow, sType, nColumn) {\n            let stt = this;\n            // if we have defined a custom getRowValue use that\n            let sortTypeInfo = stt._sortTypeInfo[sType];\n            if (sortTypeInfo && sortTypeInfo.getRowValue) {\n                return sortTypeInfo.getRowValue(oRow, nColumn);\n            }\n            let c = oRow.cells[nColumn];\n            let s = SortableTable.getInnerText(c);\n            return stt.getValueFromString(s, sType);\n        };\n\n        /**\n         * Overrides getInnerText in order to avoid Firefox unexpected sorting\n         * behaviour with untrimmed text elements\n         * @param  {Object} cell DOM element\n         * @return {String}       DOM element inner text\n         */\n        SortableTable.getInnerText = function (cell) {\n            if (!cell) {\n                return;\n            }\n            if (cell.getAttribute(adpt.customKey)) {\n                return cell.getAttribute(adpt.customKey);\n            } else {\n                return tf.getCellValue(cell);\n            }\n        };\n    }\n\n    /**\n     * Adds a sort type\n     */\n    addSortType(...args) {\n        // Extract the arguments\n        let [id, caster, sorter, getRowValue] = args;\n        SortableTable.prototype.addSortType(id, caster, sorter, getRowValue);\n    }\n\n    /**\n     * Sets the sort types on a column basis\n     * @private\n     */\n    setSortTypes() {\n        let tf = this.tf,\n            sortTypes = this.sortTypes,\n            _sortTypes = [];\n\n        tf.eachCol((i) => {\n            let colType;\n            if (sortTypes[i]) {\n                colType = sortTypes[i];\n                if (isObj(colType)) {\n                    if (colType.type === DATE) {\n                        colType = this._addDateType(i, sortTypes);\n                    }\n                    else if (colType.type === FORMATTED_NUMBER) {\n                        let decimal = colType.decimal || tf.decimalSeparator;\n                        colType = this._addNumberType(i, decimal);\n                    }\n                } else {\n                    colType = colType.toLowerCase();\n                    if (colType === DATE) {\n                        colType = this._addDateType(i, sortTypes);\n                    }\n                    else if (colType === FORMATTED_NUMBER ||\n                        colType === NUMBER) {\n                        colType = this._addNumberType(i, tf.decimalSeparator);\n                    }\n                    else if (colType === NONE) {\n                        // TODO: normalise 'none' vs 'None'\n                        colType = 'None';\n                    }\n                }\n            } else {\n                colType = STRING;\n            }\n            _sortTypes.push(colType);\n        });\n\n        //Public TF method to add sort type\n\n        //Custom sort types\n        this.addSortType('caseinsensitivestring', SortableTable.toUpperCase);\n        this.addSortType(STRING);\n        this.addSortType(IP_ADDRESS, ipAddress, sortIP);\n\n        this.stt = new SortableTable(tf.dom(), _sortTypes);\n\n        /*** external table headers adapter ***/\n        if (this.asyncSort && this.triggerIds.length > 0) {\n            let triggers = this.triggerIds;\n            for (let j = 0; j < triggers.length; j++) {\n                if (triggers[j] === null) {\n                    continue;\n                }\n                let trigger = elm(triggers[j]);\n                if (trigger) {\n                    trigger.style.cursor = 'pointer';\n\n                    addEvt(trigger, 'click', (evt) => {\n                        let elm = evt.target;\n                        if (!this.tf.sort) {\n                            return;\n                        }\n                        this.stt.asyncSort(triggers.indexOf(elm.id));\n                    });\n                    trigger.setAttribute('_sortType', _sortTypes[j]);\n                }\n            }\n        }\n    }\n\n    _addDateType(colIndex, types) {\n        let tf = this.tf;\n        let dateType = tf.feature('dateType');\n        let locale = dateType.getOptions(colIndex, types).locale || tf.locale;\n        let colType = `${DATE}-${locale}`;\n\n        this.addSortType(colType, (value) => {\n            let parsedDate = dateType.parse(value, locale);\n            // Invalid date defaults to Wed Feb 04 -768 11:00:00\n            return isNaN(+parsedDate) ? new Date(-86400000000000) : parsedDate;\n        });\n        return colType;\n    }\n\n    _addNumberType(colIndex, decimal) {\n        let colType = `${FORMATTED_NUMBER}${decimal === '.' ? '' : '-custom'}`;\n\n        this.addSortType(colType, (value) => {\n            return parseNb(value, decimal);\n        });\n        return colType;\n    }\n\n    /**\n     * Remove extension\n     */\n    destroy() {\n        if (!this.initialized) {\n            return;\n        }\n        let tf = this.tf;\n        this.emitter.off(['sort'], bound(this.sortByColumnIndexHandler, this));\n        this.sorted = false;\n        this.stt.destroy();\n\n        let ids = tf.getFiltersId();\n        for (let idx = 0; idx < ids.length; idx++) {\n            let header = tf.getHeaderElement(idx);\n            let img = tag(header, 'img');\n\n            if (img.length === 1) {\n                header.removeChild(img[0]);\n            }\n        }\n        this.initialized = false;\n    }\n\n}\n\nAdapterSortableTable.meta = {altName: 'sort'};\n\n//Converters\nfunction ipAddress(value) {\n    let vals = value.split('.');\n    // eslint-disable-next-line no-unused-vars\n    for (let x in vals) {\n        let val = vals[x];\n        while (3 > val.length) {\n            val = '0' + val;\n        }\n        vals[x] = val;\n    }\n    return vals.join('.');\n}\n\nfunction sortIP(a, b) {\n    let aa = ipAddress(a.value.toLowerCase());\n    let bb = ipAddress(b.value.toLowerCase());\n    if (aa === bb) {\n        return 0;\n    } else if (aa < bb) {\n        return -1;\n    } else {\n        return 1;\n    }\n}\n","import AdapterSortableTable from './adapterSortabletable';\nimport {root} from '../../root';\n\nif (!root.SortableTable) {\n    require('script-loader!sortabletable');\n}\n\nexport default AdapterSortableTable;\n"],"sourceRoot":""}